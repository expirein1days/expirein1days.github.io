{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/set.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","metalib.js","components/revoke.js","components/GoToNext.js"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","set_set","target","value","receiver","Reflect","set","desc","base","getOwnPropertyDescriptor","writable","defineProperty","construct_construct","Parent","args","Class","construct","sham","Proxy","Date","toString","e","isNativeReflectConstruct","a","push","apply","instance","Function","bind","setPrototypeOf","arguments","wrapNativeSuper_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","Wrapper","this","constructor","create","enumerable","configurable","get_get","stageJS","uniqlo","RemixBaseImpl","sensorAlltime","_weakMode","classCallCheck","weakMode","mAcc_x","mAcc_y","mAccVel_x","mAccVel_y","mAccPos_x","mAccPos_y","currentScale","_zoomTryed","_lastRad","countUpForce","FACTOR","ACC_INTERVAL_TIME","dirty","acc_l","mNeedCache","_isZoom","blendMode","soundEnable","_sensorAlltime","Context3D","MAX_TEXTURE","createClass","key","stage","backBmd","srcBmd","init3D","stopRendering","stage3d","removeEventListener","events","Event","CONTEXT3D_CREATE","context3DCreateHandler","ENTER_FRAME","onEnterFrame","mNoMipShader","dispose","mUniformMatrix","length","mUniformColor","mScreenMatrix","mFBOMatrix","mDisplayFboMatrix","mTexBaseT","mFBOBlendBuffer","mBlendDistTexture","mDisplayFbo","mFBOFrontBuffer","mFrontTexture","texTopLayer","mMipShader","_bmdFrontImage","_bmdBackImage","mVerts","mCoords","mReversedCoords","mVertsStage","mIndicies","mFBO","mDPlate","mCtx3D","_drawingEnabled","console","log","_toScale","back","front","_this","soundNum","_useFrontBuffer","geom","Matrix3D","addEventListener","requestContext3D","DraggablePlateRect","setup","hasTopLayer","onDeactive","context3D","Stage3DHelper","createMainProgram","onResize","aspct","UTItemManager","IMAGE_HEIGHT","IMAGE_WIDTH","verticesStg","createVertexBuffer","uploadFromVector","createIndexBuffer","appendTranslation","appendScale","createTexture","Context3DTextureFormat","BGRA","bmd","BitmapData","m","Matrix","scale","width","height","draw","uploadTexture","uploadFromImage","canvas","setVertexBufferAt","Context3DVertexBufferFormat","FLOAT_2","setBlendFactors","Context3DBlendFactor","ONE","ONE_MINUS_SOURCE_ALPHA","setCulling","Context3DTriangleFace","BACK","updateTopLayer","_clear","mCacheBmd","setProgram","tmp","setRenderToTexture","clear","drawTriangles","onActive","dispatchEvent","ACTIVATE","_this2","_mcWidth","_mcHeight","stageWidth","AppVals","GLOBAL_SCALE","stageHeight","STATUSBAR_HEIGHT","_currentRect","getZoomRectMotion","configureBackBuffer","identity","setTextureAt","setProgramConstantsFromVector","Context3DProgramType","FRAGMENT","VERTEX","bMode","BlendMode","ALPHA","ADD","SOURCE_ALPHA","MULTIPLY","wkMultiply","DESTINATION_COLOR","ONE_MINUS_DESTINATION_ALPHA","SOURCE_COLOR","SCREEN","ONE_MINUS_SOURCE_COLOR","ERASE","ZERO","setProgramConstantsFromMatrix","setBlendMode","setRenderToBackBuffer","update","wkWidth","_v","_frScale","_ticktime","getTime","Easing","easeOutCubic","present","acc","_x","_accelerationX","_y","_accelerationY","l","Math","sqrt","f","random","pow","addPerticles","soundForce","x","y","_s","_cnverted_X","_cnverted_Y","mx","pos_x","pos_y","drag","convertMousePos","REMIX_MOVE_RIMIT","REMIX_MOVE_RIMIT_RATE","mPrevMouseX","mPrevMouseY","addedForce","_rad","atan2","_ld","abs","PI","_weakforce","drawToBitmapData","mWid","min","max","m2","b","TEXTURE_WIDTH","mHei","ceil","copyPixels","rect","mFBOBack","uploadFromBitmapData","fillRect","bm","ct","ColorTransform","r","Rectangle","b2","translate","canvasChange","GlichImpl","_uniqlo$RemixBaseImpl","mom","_this3","possibleConstructorReturn","_isMotion","_range","INIT_NUM_LINE","mMainVerts","Array","mMainCoords","mMainIndicies","gliLines","playing","mMom","_addShapeLimit","numLine","vertNum","indNum","i","inherits","_srcBmd","mTCoords","mTVers","mTIndicies","mainTexture","_bmd","playStageChange","v1","v2","_vx1","_vy1","_vx2","_vy2","_r1","_r2","_px1","_py1","_px2","_py2","_tx1","_tx3","_ty1","_ty3","_tx2","_tx4","_ty2","_ty4","motionStateChange","start","showingStopAlert","showStopAlert","Number","centerX","_x1","cos","_y1","sin","_x2","_y2","_x3","_y3","_x4","_y4","tw","th","r2","sort","splice","UTStampManager","getActiveLayerTop","DisplayObject","children","document","createElement","child","Bitmap","_stageJS$DisplayObjec","_this4","bitmapData","pixelSnapping","_bitmapData","LayoutImpl","_uniqlo$RemixBaseImpl2","_this5","layouts","perticles","projectionMatrix","srcViewId","UTCreateMain","getActiveSrcType","AppStoryDefs","VIEW_SRC_TYPO","texts","pop","VIEW_SRC_STAMP","_step","LayoutPericleGenelator","lo","s2","_drawX","_drawY","col","textField","htmlText","autoSize","TextFieldAutoSize","LEFT","scaleX","scaleY","drawWithQuality","StageQuality","HIGH","getColorBoundsRect","LayoutObject","textIndex","setRectangleType","orgX","orgY","lo2","setRectangle","setTexture","typeMainLayouts","updateLayoutObject","index","dumpingForce","force","counter","num","willDelete","generateLayout","btmap","bmode","po","rotate","_angle","_scale","_bm","stampManager","getActive","_bd","j","_mbd","_thumbScale","ThumbnailScale","smoothing","stampScale","angle","LayoutFringe","whiteEdgeAA","GlowFilter","EdgeColor","whiteEdge2","EdgeWidth","filters","_ct","layoutReset","perticleObject","setPositon","Vec4","_z","_w","z","w","src","ret","multiply4","add4","substract4","division4","multiply","add","substract","division","rotate2dRad","xrot","normalize","MOMA01Impl","_uniqlo$RemixBaseImpl3","particle","_this6","knlHeight","knlWidth","prtHeight","prtWidth","rndWidth","rndHeight","mStyle","changeNextBtnCallback","optImage","srcImage","BOOST_SPEED","LIGHT_SPEED","isMonoral","_colorNoize","_brigtnessNoize","_alpha","_alphaStep","_lifeLength","_brightness","_contrast","_saturation","_BORDER_MARGIN","toggler","mActivePow","mTime","_colorNoize_s","_brigtnessNoize_s","_alpha_s","_alphaStep_s","_scale_s","_lifeLength_s","_brightness_s","_contrast_s","_saturation_s","_colorNoize_e","_brigtnessNoize_e","_alpha_e","_alphaStep_e","_scale_e","_lifeLength_e","_brightness_e","_contrast_e","_saturation_e","parts","floor","KernelCovorRangeX","KernelCovorRangeY","IPPerticles","setStyle","_srcThumb","mat","getPixels","perlinNoise","MOMA01ImageUtils","calcOpticalFlowByteArray","color","brt","sat","con","brtColor","intensity","dot","LumCoeff","conColor","texture","motion","p","vec","srcCol","pt","orgAlpha","clampi","alpha","g","border","life","getRandom","ContrastSaturationBrightness","clampf","vn","t","power","_isEnableNextBtn","_counter","style","AvgLumin","MOMA02Impl","_uniqlo$RemixBaseImpl4","_this7","SHADOW_WIDTH","MIN_WIDTH","MAX_PERTS","activeIndex","SCALE_BIAS_UP","SCALE_BIAS","_animaCounter","MOMA02CPerticles","mask","Shape","tmpView","MovieClip","tmpViewlayer","addChild","shadwoPreviewActive","DropShadowFilter","shadwoOutActive","shadwoInPreviewActive","shadwoINOutActive","colorManager","AdjustColor","brightness","contrast","saturation","colFilter","ColorMatrixFilter","_srcTypePhoto","VIEW_SRC_PHOTO","srcRect","_thumBmd","setCtx","recreateTexture","bAllocated","org_x","org_width","org_y","org_height","updateMask","texSize","tx","ty","hue","matrix","CalculateFinalFlatArray","updateTexture","graphics","beginFill","drawRoundRect","tri","drawRect","endFill","rad","areaMaxWidth","areaMaxHeight","LONG_WID","SHORT_WID","MaxMenseki","MinMenseki","Menseki","SISE_MAX","area","AREA_MARGIN","bmd2","bitmap","ctx","context","globalCompositeOperation","beginPath","arc","fillStyle","fill","closePath","cx","cy","px","py","setOrgRadWithScale","_intervalPoinst","itemIndex","partsIndex","MosaicImpl","_uniqlo$RemixBaseImpl5","textureMosiac","_this8","margin","InMargin","updatePointsX","updatePointsY","updatePointsLod","_lodSum","_lod1Count","textureIndex","_mozWidth","_mozHeight","_mosicRemderSize","_martigX","_martigY","_LODLevel","ByteArray","position","writeByte","_enableTransparentWhite","_org","mipWidth","mipHeight","scaleTransform","mipImage","c","mipLevel","_mipmaps","lock","getPixel32","setPixel32","unlock","generateMipmapWithBitmap","maxCellNum","maxCellLod","_texture","_bUpdated","_bClear","tindex","tex","gotoAndStop","lp","lod","al","readUnsignedByte","_this9","_miR","_miG","_miB","_maR","_maG","_maB","_r","_g","_b","va","cnv","REMIX_PERTICLE_SPEED","_loop","v","LABEL_RESTART_RANDOM","LABEL_RESTART","writeLod","ly","lx","chk","lpc","_ret","PaintImpl","p1","p2","p3","p4","p5","p6","p7","mFudeSize","mColorRandRange","mActiveColor","colorSelectMode","selectedColor","CBcolorChanged","colArray","mVF","PVVectprField","mParticles","mTexParts","_painted","particle1","particle2","particle3","particle4","particle5","particle6","particle7","cacheBmd","mBackImage","_this10","eraseMode","_eraseMode","toolMode","SELECTED_TOOL_MODE","ERASE_MODE","THICK_BRUSH_MODE","THIN_BRUSH_MODE","_this11","setupField","_this12","part","ac","flg","posX","posY","texIndex","onPainted","getForceFromPos","setVFupdate","outX","outY","fadeField","setColorIndex","wkCenter","mPrevDiffX","mPrevDiffY","diff_x","diff_y","p_x","p_y","d_x","d_y","pR_x","pR_y","pw","strength","addVectorCircle","PVParticle","coladd","_colorR","_colorG","_colorB","setInitialCondition","cc","UTImageBuilder","createPrintedImage","SplashImpl","_uniqlo$RemixBaseImpl6","_this13","srcRate","mWeakCounter","mColorBmd","mSrcImage","alphaPower","vel_x","vel_y","cl","type","ErrorEvent","_stageJS$events$Event","ERROR","EventDispatcher","listeners","listener","getEventListenerIndex","event","listenerArray","Orientation3D","AXIS_ANGLE","EULER_ANGLES","QUATERNION","Vector3D","toCompare","allFour","tolerance","sourceVector3D","s","xa","ya","za","leng","scaleBy","lengthSquared","acos","dotProduct","pt1","pt2","X_AXIS","Y_AXIS","Z_AXIS","rawData","Float32Array","slice","lhs","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","rhs","xScale","yScale","zScale","degrees","axis","pivotPoint","getRotateMatrix","DEG_2_RAD","append","prependTranslation","prepend","column","vector3D","Error","sourceMatrix3D","vector","transpose","len","row","dest","orientationStyle","mr","clone","pos","rot","tr","asin","toMat","percent","interpolate","d","determinant","invertable","m11","m21","m31","m41","m12","m22","m32","m42","m13","m23","m33","m43","m14","m24","m34","m44","components","scale_tmp","pos_tmp","euler_tmp","vin","vout","transformVector","str","radians","rMatrix","ax","ay","az","lsq","thisMat","Quaternion","fromMatrix3D","lerp","toMatrix3D","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","angleInRadians","sin_a","cos_a","qa","qb","PerspectiveMatrix3D","_geom$Matrix3D","eye","at","up","zX","zY","zZ","xX","xY","xZ","yX","yY","yZ","copyRawDataFrom","left","right","bottom","top","zNear","zFar","fieldOfViewY","aspectRatio","tan","BYTES_4","FLOAT_1","FLOAT_3","FLOAT_4","Context3DCompareMode","ALWAYS","EQUAL","GREATER","GREATER_EQUAL","LESS","LESS_EQUAL","NEVER","NOT_EQUAL","GL","SRC_COLOR","DST_COLOR","SRC_ALPHA","DESTINATION_ALPHA","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_DESTINATION_COLOR","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_ALPHA","FRONT","FRONT_AND_BACK","NONE","VertexBuffer3D","numVertices","data32PerVertex","_numVertices","_data32PerVertex","_glBuffer","createBuffer","data","startVertex","_data","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","IndexBuffer3D","numIndices","startOffset","count","ELEMENT_ARRAY_BUFFER","Uint16Array","Texture","format","optimizeForRenderToTexture","streamingLevels","reverse","_glTexture","_streamingLevels","_textureUnit","__texUnit","_format","_forRTT","imageData","ImageData","source","miplevel","error","textureUnit","activate","activeTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","generateMipmap","texImage2D","RGBA","UNSIGNED_BYTE","isTexture","_bindingTexture","deleteTexture","_name","Program3D","_glProgram","createProgram","_vShader","detachShader","deleteShader","_fShader","deleteProgram","vertexProgramCode","fragmentProgramCode","loadShader","VERTEX_SHADER","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","elementCode","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERSION","Stage3D","_stageJS$events$Event2","_this14","_context3D","_canvas","onCreateSuccess","onCreationError","create3DContext","names","getContext","preserveDrawingBuffer","_bendDisabled","_depthDisabled","_linkedProgram","_vaCache","_vcCache","_vcMCache","_texCache","init","antiAlias","enableDepthAndStencil","viewport","_clearBit","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","enable","DEPTH_TEST","STENCIL_TEST","disable","name","_rttFramebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","__getGLTexture","variable","buffer","bufferOffset","size","glBuffer","stride","offset","enableVA","programType","enableVC","enableVCM","sampler","enableTex","program","k","useProgram","glProgram","red","green","blue","depth","stencil","clearColor","clearDepth","clearStencil","triangleFaceToCull","frontFace","CW","CULL_FACE","cullFace","depthMask","passCompareMode","depthFunc","NOTEQUAL","LEQUAL","GEQUAL","sourceFactor","destinationFactor","BLEND","blendFunc","indexBuffer","firstIndex","numTriangles","drawElements","TRIANGLES","UNSIGNED_SHORT","numLines","LINES","numPoints","POINTS","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","keyInCache","location","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","getUniformLocation","vc","uniformMatrix4fv","uniform1i","deleteFramebuffer","DARKEN","DIFFERENCE","HARDLIGHT","INVERT","LAYER","LIGHTEN","NORMAL","OVERLAY","SHADER","SUBTRACT","BitmapDataChannel","BLUE","GREEN","RED","PRNG","seed","gen","next","SimplexNoise","rand","grad3","simplex","nextRange","perm","xin","yin","i1","j1","G2","x0","y0","x1","y1","ii","jj","gi0","gi1","gi2","t0","t1","t2","transparent","willReadFrequently","setAttribute","drawingCanvas","drawingContext","getImageData","rgba","clearRect","putImageData","result","sourceCanvas","sourceRect","destPoint","bw","bh","dw","dh","sourcePos","destPos","sourceData","drawImage","sourceBitmapData","copyCanvas","colorTransform","clipRect","element","sourceMatrix","transform","hex","rgb","baseX","baseY","randomSeed","channelOptions","grayScale","redChannel","greenChannel","blueChannel","cr","cg","cb","numChannels","simplexR","setSeed","simplexG","simplexB","noise","flag","quality","number","getPixel","_Array","_this15","isStrict","_set","offset1","offset2","shadow_width1","shadow_width2","num1","num2","transformMatrix","colorMatrix","vartex","coords","orgScale","gScale","bVartex","bCoords","coordx","coordy","_ctx","_indicies","_projectionMatrix","indicies","_stageJS$DisplayObjec2","_this16","Graphics","_stageJS$DisplayObjec3","_this17","TextField","CENTER","RIGHT","Remix","String","mc","VIEW_SRC_PAINT","VIEW_REMIX_INK","VIEW_REMIX_GLITCH","VIEW_REMIX_MOSIC","VIEW_REMIX_LAYOUT","VIEW_REMIX_MOMA01","VIEW_REMIX_MOMA02","STICKER_SET_THRESHOLD","FileManager","fname","fillColor","LIST_SAVE_DIR","TEMP_DIR","assetBasePath","androidPath","viewTree","save","getViewID","out","logo","copyright","renderTop","h","outWidth","outCenter","zoom","aWidth","aHeight","wkNearScale","wkFarScale","getZoomRect","stampSetData","StampLayerList","HISTORY","LayerTopMost","_src","Wm","Rm","msk","su","tempPix","setPixels","blrImage","fv","lim","getByIndex","rotate2d","_copy","blrByteArray1","blrByteArray2","uniformMatrix","ctx3D","aRad","aScale","org_scale","org_rad","aX","aY","realScale","destory","uniformColor","damping","vx","vy","lifeTimes","velX","velY","_cols","_rows","_width","_height","cols","rows","cols_m1","rows_m1","nTotal","nTotalx2","_buffer","fadeAmount","xpos","ypos","xPct","yPct","fieldPosX","fieldPosY","mPos","radius","distance","fieldRadius","startx","starty","endx","endy","useMip","upload","V_SHADER_CODE","F_SHADER_CODE","originalImage","useMips","uploadTextureWithMipMaps","MAX_WIDTH","MAX_HEIGHT","vert","enableRotation","palette","divX","divY","numH","numW","yi","xi","checkTimes","upLeft","kaburiNum","marginX","objectNum","longlong","CHK_NEXT","RE_CHECK","LayoutsHelper","addPerticleObject","debugDrawPalette","fixLayouts","mw","mh","widM","iaspect","round","aspect","defaultScale","MAX_VALUE","iStep","_loop2","RECHECK_PICPOS","ENDCHECK_PICPOS","isTypography","generateTypgraphyLayouts","generatePictLayouts","generatePictLayouts2Single","generatePictLayouts2","Line_Height","marginY","MAX_LINE","numlines","maxW","tpo","startIndex","sizes","nums","tmpPerticle","SimplePerticleObject","lid","pid","ascale","aangle","found","setPositonWithAnimate","hh","hw","minX","maxX","minY","maxY","movX","movY","toX","toY","toAngle","MaxW","MaxH","toScale","debugBmd","rotation","layoutObject","_index","accX","accY","accScale","accAngle","springiness","_lo","df","vecX","vecY","theirDistance","springForce","INavigatedView","RemixGlitchView","StampObject","contents","backToRatateZero","backToOrgPosition","_lockState","limitRotateMinRad","limitRotateMaxRad","_bAllocated","_orgPos_x","_orgPos_y","_activeForce_x","_activeForce_y","_lastDragPos_x","_lastDragPos_y","_dragPos_x","_dragPos_y","orign_x","orign_y","orgRad","_updateTime","_dragging","val","vb","vs","vm","vl","_wk1_x","_wk1_y","_wk2_x","_wk2_y","REG_RAD","calcDragPos","_updated","aDragging","needLock","PI_D2","PI_M2","easeOutBounce","easeInBounce","linear","easeLinear","none","revoke","props","_useState","useState","_useState2","_Users_09013730_git_hand_utme_make_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","show","setShow","languageType","useContext","LocaleContext","_useState3","_useState4","isAgainEdit","setIsAgainEdit","revokeDesign","param","cancelDesign","setTimeout","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","className","display","onClick","backgroundColor","zIndex","fontSize","current","fontWeight","transition","rotateNormal","fontFamily","pageMark","_components_Locale__WEBPACK_IMPORTED_MODULE_10__","code","returnNormal","padding","lineHeight","letterSpacing","_isAgainEdit__WEBPACK_IMPORTED_MODULE_8__","resetLayers","status","isAgainFu","GoToNext","disabled","InitializationThrottle","throttle","GotoMixIconDis","GotoMixIcon","alt","_Users_09013730_git_hand_utme_make_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"sGACe,SAAAA,EAAAC,EAAAC,GACf,MAAAC,OAAAC,UAAAC,eAAAC,KAAAL,EAAAC,IAEA,QADAD,EAAaE,OAAAI,EAAA,EAAAJ,CAAcF,MAI3B,OAAAA,cCHA,SAASO,EAAGC,EAAAP,EAAAQ,EAAAC,GAoCZ,OAlCIH,EADJ,qBAAAI,iBAAAC,IACOD,QAAAC,IAEA,SAAAJ,EAAAP,EAAAQ,EAAAC,GACP,IACAG,EADAC,EAAiBf,EAAaS,EAAAP,GAG9B,GAAAa,EAAA,CAGA,IAFAD,EAAAX,OAAAa,yBAAAD,EAAAb,IAEAW,IAEA,OADAC,EAAAD,IAAAP,KAAAK,EAAAD,IACA,EACS,IAAAI,EAAAG,SACT,SAMA,GAFAH,EAAAX,OAAAa,yBAAAL,EAAAT,GAEA,CACA,IAAAY,EAAAG,SACA,SAGAH,EAAAJ,QACAP,OAAAe,eAAAP,EAAAT,EAAAY,QAEQX,OAAAe,EAAA,EAAAf,CAAcQ,EAAAT,EAAAQ,GAGtB,WAIYD,EAAAP,EAAAQ,EAAAC,gBCzBG,SAASQ,EAAUC,EAAAC,EAAAC,GAclC,OAVIH,EAjBJ,WACA,wBAAAP,kBAAAW,UAAA,SACA,GAAAX,QAAAW,UAAAC,KAAA,SACA,uBAAAC,MAAA,SAEA,IAEA,OADAC,KAAAtB,UAAAuB,SAAArB,KAAAM,QAAAW,UAAAG,KAAA,mBACA,EACG,MAAAE,GACH,UAKAC,GACcjB,QAAAW,UAEA,SAAAH,EAAAC,EAAAC,GACd,IAAAQ,EAAA,OACAA,EAAAC,KAAAC,MAAAF,EAAAT,GACA,IACAY,EAAA,IADAC,SAAAC,KAAAH,MAAAZ,EAAAU,IAGA,OADAR,GAAiBnB,OAAAiC,EAAA,EAAAjC,CAAc8B,EAAAX,EAAAlB,WAC/B6B,IAImBD,MAAA,KAAAK,WCzBJ,SAASC,EAAgBhB,GACxC,IAAAiB,EAAA,oBAAAC,IAAA,IAAAA,SAAAC,EA8BA,OA5BEH,EAAgB,SAAAhB,GAClB,UAAAA,ICReoB,EDQ4BpB,GCP3C,IAAAY,SAAAP,SAAArB,KAAAoC,GAAAC,QAAA,kBDO2C,OAAArB,ECR5B,IAAAoB,EDUf,uBAAApB,EACA,UAAAsB,UAAA,sDAGA,wBAAAL,EAAA,CACA,GAAAA,EAAAM,IAAAvB,GAAA,OAAAiB,EAAAO,IAAAxB,GAEAiB,EAAA1B,IAAAS,EAAAyB,GAGA,SAAAA,IACA,OAAa5B,EAASG,EAAAe,UAAmBlC,OAAAI,EAAA,EAAAJ,CAAc6C,MAAAC,aAWvD,OARAF,EAAA3C,UAAAD,OAAA+C,OAAA5B,EAAAlB,UAAA,CACA6C,YAAA,CACAvC,MAAAqC,EACAI,YAAA,EACAlC,UAAA,EACAmC,cAAA,KAGWjD,OAAAiC,EAAA,EAAAjC,CAAc4C,EAAAzB,KAGAA,eEjCV,SAAS+B,EAAI5C,EAAAP,EAAAS,GAiB5B,OAfI0C,EADJ,qBAAAzC,iBAAAkC,IACQlC,QAAAkC,IAEA,SAAArC,EAAAP,EAAAS,GACR,IAAAI,EAAiBf,EAAaS,EAAAP,GAC9B,GAAAa,EAAA,CACA,IAAAD,EAAAX,OAAAa,yBAAAD,EAAAb,GAEA,OAAAY,EAAAgC,IACAhC,EAAAgC,IAAAxC,KAAAK,GAGAG,EAAAJ,SAIaD,EAAAP,EAAAS,GAAAF,OCg5GF6C,EAk4FPA,0FAnyMJ,SAAWC,GAAQ,IACTC,EADS,WAEX,SAAAA,EAAYC,EAAeC,GAAYvD,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAQ,GACnCR,KAAKY,UAAW,EAChBZ,KAAKa,OAAS,EACdb,KAAKc,OAAS,EACdd,KAAKe,UAAY,EACjBf,KAAKgB,UAAY,EACjBhB,KAAKiB,UAAY,EACjBjB,KAAKkB,UAAY,EACjBlB,KAAKmB,aAAe,EACpBnB,KAAKoB,YAAa,EAClBpB,KAAKqB,SAAW,EAChBrB,KAAKsB,aAAe,EAEpBtB,KAAKuB,OAAS,IACdvB,KAAKwB,kBAAoB,KACzBxB,KAAKyB,OAAQ,EACbzB,KAAK0B,MAAQ,IACb1B,KAAK2B,YAAa,EAClB3B,KAAKY,SAAWF,EAChBV,KAAK4B,SAAU,EACf5B,KAAKmB,aAAenB,KAAK4B,QAAU,EAAI,EACvC5B,KAAK6B,UAAY,KACjB7B,KAAK8B,aAAc,EACnB9B,KAAK+B,eAAiBtB,EACtBH,EAAQ0B,UAAUC,YAAc,GA1BzB,OAAA9E,OAAA+E,EAAA,EAAA/E,CAAAqD,EAAA,EAAA2B,IAAA,eAAAzE,MAAA,SA4BE0E,EAAOC,EAASC,GACzBtC,KAAKuC,OAAOH,EAAOC,EAASC,KA7BrB,CAAAH,IAAA,UAAAzE,MAAA,WAgCPsC,KAAKwC,gBACLxC,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMC,iBAAkB7C,KAAK8C,wBAC7E9C,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMG,YAAa/C,KAAKgD,cACxEhD,KAAKiD,aAAaC,UAClBlD,KAAKiD,aAAe,KACpBjD,KAAKmD,eAAeC,OAAS,EAC7BpD,KAAKmD,eAAiB,KACtBnD,KAAKqD,cAAcD,OAAS,EAC5BpD,KAAKqD,cAAgB,KACrBrD,KAAKsD,cAAgB,KACrBtD,KAAKuD,WAAa,KAClBvD,KAAKwD,kBAAoB,KACrBxD,KAAKyD,WACLzD,KAAKyD,UAAUP,UACflD,KAAK0D,iBACL1D,KAAK0D,gBAAgBR,UACrBlD,KAAK2D,mBACL3D,KAAK2D,kBAAkBT,UACvBlD,KAAK4D,aACL5D,KAAK4D,YAAYV,UACjBlD,KAAK6D,iBACL7D,KAAK6D,gBAAgBX,UACrBlD,KAAK8D,eACL9D,KAAK8D,cAAcZ,UACnBlD,KAAK+D,aACL/D,KAAK+D,YAAYb,UACrBlD,KAAKyD,UAAY,KACjBzD,KAAK0D,gBAAkB,KACvB1D,KAAK2D,kBAAoB,KACzB3D,KAAK4D,YAAc,KACnB5D,KAAK6D,gBAAkB,KACvB7D,KAAK8D,cAAgB,KACrB9D,KAAKgE,WAAWd,UAChBlD,KAAKgE,WAAa,KAClBhE,KAAKiE,eAAiB,KACtBjE,KAAKkE,cAAgB,KACrBlE,KAAKmE,OAAOjB,UACZlD,KAAKmE,OAAS,KACdnE,KAAKoE,QAAQlB,UACblD,KAAKoE,QAAU,KACfpE,KAAKqE,gBAAgBnB,UACrBlD,KAAKqE,gBAAkB,KACvBrE,KAAKsE,YAAYpB,UACjBlD,KAAKsE,YAAc,KACnBtE,KAAKuE,UAAUrB,UACflD,KAAKuE,UAAY,KACjBvE,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAO,KACZxE,KAAKyE,QAAU,KACfzE,KAAK0E,OAAOxB,UACZlD,KAAK0E,OAAS,KACd1E,KAAKyC,QAAU,OAnFR,CAAAN,IAAA,gBAAAzE,MAAA,WAsFPsC,KAAK2E,iBAAkB,EACvBC,QAAQC,IAAI,mBAAoB7E,KAAK2E,mBAvF9B,CAAAxC,IAAA,iBAAAzE,MAAA,WA0FPsC,KAAK2E,iBAAkB,EACvBC,QAAQC,IAAI,mBAAoB7E,KAAK2E,iBACrC3E,KAAK8E,SAAW,EAChB9E,KAAKa,OAAS,EACdb,KAAKc,OAAS,IA9FP,CAAAqB,IAAA,cAAAzE,MAAA,WAiGPsC,KAAK4B,SAAW5B,KAAK4B,UAjGd,CAAAO,IAAA,QAAAzE,MAAA,eAAAyE,IAAA,SAAAzE,MAAA,SAoGJ+E,EAASsC,EAAMC,GAAO,IAAAC,EAAAjF,KACzBA,KAAKkF,SAAW,EAChBlF,KAAK2E,iBAAkB,EACvB3E,KAAKkE,cAAgBa,EACrB/E,KAAKiE,eAAiBe,EACtBhF,KAAKmF,gBAAyC,MAAvBnF,KAAKiE,eAC5BjE,KAAKsD,cAAgB,IAAIhD,EAAQ8E,KAAKC,SACtCrF,KAAKyC,QAAUA,EACfzC,KAAKyC,QAAQ6C,iBAAiBhF,EAAQqC,OAAOC,MAAMC,iBAAkB,SAACjE,GAAQqG,EAAKnC,uBAAuBlE,KAC1GoB,KAAKyC,QAAQ8C,mBACbvF,KAAKyE,QAAU,IAAIlE,EAAOiF,mBAC1BxF,KAAKyE,QAAQgB,MAAM,EAAG,EAAG,EAAG,KAAM,QA/G3B,CAAAtD,IAAA,iBAAAzE,MAAA,WAkHPsC,KAAK0F,aAAc,IAlHZ,CAAAvD,IAAA,yBAAAzE,MAAA,SAoHYkB,GACnBgG,QAAQC,IAAI,mBAEZ7E,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMC,iBAAkB7C,KAAK8C,wBAC7E9C,KAAK2F,aACL3F,KAAKyD,UAAY,KACjBzD,KAAK2D,kBAAoB,KACzB3D,KAAK0E,OAAS1E,KAAKyC,QAAQmD,UAC3B5F,KAAKgE,WAAazD,EAAOsF,cAAcC,kBAAkB9F,KAAK0E,QAAQ,GACtE1E,KAAKiD,aAAe1C,EAAOsF,cAAcC,kBAAkB9F,KAAK0E,QAAQ,GACxE1E,KAAK+F,WACL,IAGIC,EAAQzF,EAAO0F,cAAcC,aAAe3F,EAAO0F,cAAcE,YACjEC,EAAc,EAAE,GAAc,IAARJ,EAAa,GAAc,IAARA,GAAc,GAAa,GAARA,EAAa,GAAa,GAARA,GAClFhG,KAAKmE,OAASnE,KAAK0E,OAAO2B,mBAAmB,EAAG,GAChDrG,KAAKmE,OAAOmC,iBANG,EAAE,IAAM,GAAK,IAAM,IAAM,GAAK,GAAK,GAAK,IAMhB,EAAG,GAC1CtG,KAAKoE,QAAUpE,KAAK0E,OAAO2B,mBAAmB,EAAG,GACjDrG,KAAKoE,QAAQkC,iBAPA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAOG,EAAG,GACzCtG,KAAKqE,gBAAkBrE,KAAK0E,OAAO2B,mBAAmB,EAAG,GACzDrG,KAAKqE,gBAAgBiC,iBARA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAQW,EAAG,GACzDtG,KAAKsE,YAActE,KAAK0E,OAAO2B,mBAAmB,EAAG,GACrDrG,KAAKsE,YAAYgC,iBAAiBF,EAAa,EAAG,GAalD,GAXApG,KAAKuE,UAAYvE,KAAK0E,OAAO6B,kBAAkB,GAC/CvG,KAAKuE,UAAU+B,iBAFD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEW,EAAG,GAC5CtG,KAAKmD,eAAiB,CAAC,EAAK,EAAK,EAAK,GACtCnD,KAAKqD,cAAgB,CAAC,EAAK,EAAK,EAAK,GAErCrD,KAAKuD,WAAa,IAAIjD,EAAQ8E,KAAKC,SACnCrF,KAAKuD,WAAWiD,kBAAqD,GAAnCjG,EAAO0F,cAAcE,YAAuD,IAApC5F,EAAO0F,cAAcC,aAAmB,GAClHlG,KAAKuD,WAAWkD,YAAY,GAAwC,GAAnClG,EAAO0F,cAAcE,aAAmB,GAAyC,GAApC5F,EAAO0F,cAAcC,cAAoB,GAEvHlG,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,GAChJ5G,KAAK0D,gBAAkB1D,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,GACvJ5G,KAAKmF,gBAAiB,CACtBnF,KAAK6D,gBAAkB7D,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,GAC3J,IAAIC,EAAM,IAAIvG,EAAQwG,WAAW,KAAM,MAAM,EAAM,GAC/CC,EAAI,IAAIxG,EAAOyG,OACnBD,EAAEE,MAAMJ,EAAIK,MAAQlH,KAAKiE,eAAeiD,MAAOL,EAAIM,OAASnH,KAAKiE,eAAekD,QAChFN,EAAIO,KAAKpH,KAAKiE,eAAgB8C,EAAG,KAAM,KAAM,MAAM,GACnD/G,KAAK8D,cAAgBvD,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQmC,EAAKvG,EAAQqG,uBAAuBC,MAAM,GAAM,GAErH5G,KAAK8D,cAAcwD,gBAAgBT,EAAIU,OAAQ,GAC/CV,EAAI3D,UAUR,GARAlD,KAAKwD,kBAAoB,IAAIlD,EAAQ8E,KAAKC,SAC1CrF,KAAKwD,kBAAkBiD,YAAY,MAAiB,MAAiB,GAErEzG,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,wBAC3F9H,KAAK0E,OAAOqD,WAAWzH,EAAQ0H,sBAAsBC,MACrDjI,KAAKkI,iBACLlI,KAAKmI,SACiB,MAAlBnI,KAAKoI,UAAmB,CACxBpI,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,KACzBnD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cAC5B,IAAIqF,EAAM/H,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKoI,UAAW9H,EAAQqG,uBAAuBC,MAAM,GAAO,GACtH5G,KAAK0E,OAAO6D,mBAAmBvI,KAAKwE,MACpCxE,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BjI,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmB8E,EAAKtI,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAClJiF,EAAIpF,UACJlD,KAAKoI,UAAY,KAErBpI,KAAK0E,OAAO2D,WAAWrI,KAAKgE,YAC5BhE,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAKyF,QACLzF,KAAK0I,WACLC,cAAc,IAAI/F,MAAMtC,EAAQqC,OAAOC,MAAMgG,aAhMtC,CAAAzG,IAAA,WAAAzE,MAAA,WAkMA,IAAAmL,EAAA7I,KACY,MAAfA,KAAK0E,QAAkB1E,KAAK8I,SAAW,GAAK9I,KAAK+I,UAAY,GAEjE/I,KAAKyC,QAAQ6C,iBAAiBhF,EAAQqC,OAAOC,MAAMG,YAAa,SAACnE,GAAQiK,EAAK7F,aAAapE,OArMpF,CAAAuD,IAAA,aAAAzE,MAAA,WAwMPsC,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMG,YAAa/C,KAAKgD,gBAxMjE,CAAAb,IAAA,WAAAzE,MAAA,WA2MPsC,KAAK8I,SAAW9I,KAAKyC,QAAQuG,WAAazI,EAAO0I,QAAQC,aACzDlJ,KAAK+I,UAAY/I,KAAKyC,QAAQ0G,YAAc5I,EAAO0I,QAAQC,aAAe3I,EAAO0I,QAAQG,iBACzFpJ,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,WAG/E,MAAf/I,KAAK0E,QAAkB1E,KAAK8I,SAAW,GAAK9I,KAAK+I,UAAY,IAEjE/I,KAAK0E,OAAO6E,oBAAoBvJ,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,YAAa,GAAG,GACtFnJ,KAAKsD,cAAckG,WACnBxJ,KAAKsD,cAAckD,kBAAkB,EAAsC,IAAlCjG,EAAO0I,QAAQG,iBAAuB,GAC/EpJ,KAAKsD,cAAcmD,YAAY,GAAuB,GAAhBzG,KAAK8I,UAAgB,GAA4D,IAApD9I,KAAK+I,UAAYxI,EAAO0I,QAAQG,mBAAyB,MArNrH,CAAAjH,IAAA,OAAAzE,MAAA,WAwNPsC,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKyD,WACjCzD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG,CAAC,EAAG,EAAG,EAAG,IAC9F5J,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG,EAAE,IAAK,IAAK,EAAG,MACjG7J,KAAK0E,OAAO+D,cAAczI,KAAKuE,aA3NxB,CAAApC,IAAA,eAAAzE,MAAA,SA8NEoM,GAKT,OAJA9J,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EAChByG,GACJ,KAAKvJ,EAAOwJ,UAAUC,MAClBhK,KAAKqD,cAAc,GAAK,GACxBrD,KAAKqD,cAAc,GAAK,GACxBrD,KAAKqD,cAAc,GAAK,GACxBrD,KAAKqD,cAAc,GAAK,GACxBrD,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,wBAC3F,MACJ,KAAKvH,EAAOwJ,UAAUE,IAClBjK,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBsC,aAAc5J,EAAQsH,qBAAqBC,KACpG,MACJ,KAAKtH,EAAOwJ,UAAUI,SACd5J,EAAO0F,cAAcmE,WACrBpK,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqByC,kBAAmB/J,EAAQsH,qBAAqBE,wBAGzG9H,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqB0C,4BAA6BhK,EAAQsH,qBAAqB2C,cAEvH,MACJ,IAAK,YACDvK,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqB0C,4BAA6BhK,EAAQsH,qBAAqBC,KACnH,MACJ,KAAKtH,EAAOwJ,UAAUS,OAClBxK,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqB6C,wBAC3F,MACJ,KAAKlK,EAAOwJ,UAAUW,MAClB1K,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqB+C,KAAMrK,EAAQsH,qBAAqBsC,cAC5F,MACJ,IAAK,SACDlK,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBsC,aAAc5J,EAAQsH,qBAAqB+C,MACpG,MACJ,IAAK,SACD3K,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqB2C,aAAcjK,EAAQsH,qBAAqB+C,MACpG,MACJ,QACI3K,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,2BAtQ5F,CAAA3F,IAAA,eAAAzE,MAAA,SA0QEkB,GAMToB,KAAK0E,OAAO6D,mBAAmBvI,KAAKwE,MACpCxE,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKmE,OAAQ,EAAG7D,EAAQmH,4BAA4BC,SACrF1H,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuD,YAAY,GACnGvD,KAAKoH,OACLpH,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,KACrBnD,KAAKmF,kBACLnF,KAAK0E,OAAO6D,mBAAmBvI,KAAK6D,iBACpC7D,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BjI,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAK8D,cAAe9D,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eACjK9C,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAKwE,KAAMxE,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,gBAE5JrD,KAAK0E,OAAO6D,mBAAmBvI,KAAK0D,iBAChC1D,KAAK6B,WAAatB,EAAOwJ,UAAUI,SAC/B5J,EAAO0F,cAAcmE,WACrBpK,KAAK0E,OAAO8D,MAAM,IAAK,IAAK,IAAK,KAGjCxI,KAAK0E,OAAO8D,MAAM,IAAK,IAAK,IAAK,GAIrCxI,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAE/BjI,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAK2D,kBAAmB3D,KAAKmE,OAAQnE,KAAKqE,gBAAiBrE,KAAKmD,eAAgBnD,KAAKqD,eAC7KrD,KAAK6K,aAAa7K,KAAK6B,WACvBtB,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAKmF,gBAAkBnF,KAAK6D,gBAAkB7D,KAAKwE,KAAMxE,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAClMrD,KAAK6B,WAAatB,EAAOwJ,UAAUI,UAAa5J,EAAO0F,cAAcmE,aACrEpK,KAAK6K,aAAa,aAClBtK,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAK2D,kBAAmB3D,KAAKmE,OAAQnE,KAAKqE,gBAAiBrE,KAAKmD,eAAgBnD,KAAKqD,gBAEjLrD,KAAK6K,aAAa,MACd7K,KAAK0F,aACLnF,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAK+D,YAAa/D,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAGnKrD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAK0E,OAAOoG,wBACZ9K,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAE3BxI,KAAKyE,QAAQsG,SACb/K,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKmD,eAAe,GAAK,EAEhBnD,KAAKqJ,aAAanC,MAAQ3G,EAAO0F,cAAc+E,QACxDhL,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAKnD,KAAKqJ,aAAanC,MAC3C3G,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKsD,cAAetD,KAAKyD,UAAWzD,KAAKmE,OAAQnE,KAAKqE,gBAAiBrE,KAAKmD,eAAgBnD,KAAKqD,eACjK,IA0BQ4H,GAtBRjL,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAKnD,KAAKqJ,aAAanC,MACvC3G,EAAO0F,cAAcmE,YACrBpK,KAAK6K,aAAatK,EAAOwJ,UAAUI,UACvC5J,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKsD,cAAetD,KAAK0D,gBAAiB1D,KAAKsE,YAAatE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eACpKrD,KAAK6K,aAAa,MACd7K,KAAK4B,QACgB,GAAjB5B,KAAK8E,WACL9E,KAAK8E,SAAW,EAChB9E,KAAKkL,SAAWlL,KAAKmB,aACrBnB,KAAKmL,WAAa,IAAIzM,MAAM0M,WAIX,GAAjBpL,KAAK8E,WACL9E,KAAK8E,SAAW,EAChB9E,KAAKkL,SAAWlL,KAAKmB,aACrBnB,KAAKmL,WAAa,IAAIzM,MAAM0M,WAGhCpL,KAAKmB,cAAgBnB,KAAK8E,UAAY9E,KAAK2E,oBAE3CsG,IAAO,IAAIvM,MAAM0M,UAAYpL,KAAKmL,WAA7B,KACI,GACLF,EAAK,EACLjL,KAAKmB,aAAenB,KAAK8E,SACzB9E,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,aAGlGkC,EAAK1K,EAAO8K,OAAOC,aAAaL,EAAI,EAAG,EAAG,GAC1CjL,KAAKmB,aAAenB,KAAKkL,UAAYlL,KAAK8E,SAAW9E,KAAKkL,UAAYD,EACtEjL,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,aAGjG,MAALnK,GACAoB,KAAK0E,OAAO6G,UAChBvL,KAAKwL,QArXE,CAAArJ,IAAA,MAAAzE,MAAA,WAwXP,IAAI+N,EAAKzL,KAAK0L,eACVC,EAAK3L,KAAK4L,eACVC,EAAIC,KAAKC,KAAKN,EAAKA,EAAKE,EAAKA,GACjC,GAAIE,EAAI7L,KAAK0B,MAAO,CAChB,IAAIsK,EAAI,GAAK,GAAKH,GAAK,EAAI7L,KAAKsB,cAC5B0K,EAAI,MACJA,EAAI,KACRP,EAAKA,EAAKI,EAAIG,EACdL,EAAKA,EAAKE,EAAIG,EACdhM,KAAKe,WAAa0K,EAAK,EACvBzL,KAAKgB,WAAa2K,EAAK,GACnB3L,KAAK+B,gBAAkB+J,KAAKG,SAAgD,IAApC,EAAMH,KAAKI,IAAKF,EAAK,IAAO,QACpEhM,KAAKmM,aAAaV,EAAIE,GAC1B3L,KAAKoM,WAAWX,EAAIE,GACpB3L,KAAKsB,cAAgB,SAGrBtB,KAAKsB,cAAgB,GAEzBtB,KAAKe,UAAY,KAAQf,KAAKe,UAA+B,GAAlBf,KAAKiB,WAChDjB,KAAKgB,UAAY,KAAQhB,KAAKgB,UAA+B,GAAlBhB,KAAKkB,WAChDlB,KAAKiB,WAAajB,KAAKe,UACvBf,KAAKkB,WAAalB,KAAKgB,YA9YhB,CAAAmB,IAAA,kBAAAzE,MAAA,SAgZK2O,EAAGC,GAEfD,GAAK9L,EAAO0I,QAAQC,aACpBoD,GAAK/L,EAAO0I,QAAQC,aACpB,IAAIuC,EAAsB,IAAhBzL,KAAK8I,SAA0C,GAA1B9I,KAAKqJ,aAAanC,MAAclH,KAAKqJ,aAAagD,EAC7EV,EAAuB,IAAjB3L,KAAK+I,UAA4C,GAA3B/I,KAAKqJ,aAAalC,OAAenH,KAAKqJ,aAAaiD,EAC/EC,EAAKvM,KAAKqJ,aAAanC,MAAQ3G,EAAO0F,cAAc+E,QACxDhL,KAAKwM,aAAeH,EAAoB,GAAhBrM,KAAK8I,SAAgB2C,GAAMc,EAAK,KACxDvM,KAAKyM,cAAgBH,EAAqB,GAAjBtM,KAAK+I,UAAiB4C,EAAKpL,EAAO0I,QAAQG,kBAAoBmD,EAAK,KAC5F,IAAIG,EAAKnM,EAAO0F,cAAc+E,SAAW,EAAIzK,EAAO0F,cAAc+E,SAAWhL,KAAKmB,aAAe,GACjGnB,KAAKwM,aAAeE,EACpB1M,KAAKyM,aAAeC,IA3Zb,CAAAvK,IAAA,eAAAzE,MAAA,SA6ZE2O,EAAGC,GAIZ,IAAIK,EACAC,EAJC5M,KAAK2E,kBAEV3E,KAAKyE,QAAQoI,KAAK7M,KAAKiB,UAAWjB,KAAKkB,WAAW,GAAO,GAGzDlB,KAAK8M,gBAAgBT,EAAGC,GACxBK,EAAQ3M,KAAKwM,YACbI,EAAQ5M,KAAKyM,YAGTlM,EAAO0I,QAAQ8D,iBACf/M,KAAKyE,QAAQoI,KAAKF,EAAQpM,EAAO0I,QAAQ+D,sBAAuBJ,EAAQrM,EAAO0I,QAAQ+D,uBAAuB,GAAM,GAGpHhN,KAAKyE,QAAQoI,KAAKF,EAAOC,GAAO,GAAM,GAE1C5M,KAAKiN,YAAcN,EACnB3M,KAAKkN,YAAcN,KA/aZ,CAAAzK,IAAA,cAAAzE,MAAA,SAibC2O,EAAGC,GAGX,IAAIK,EACAC,EAHC5M,KAAK2E,kBAIV3E,KAAK8M,gBAAgBT,EAAGC,GACxBK,EAAQ3M,KAAKwM,YACbI,EAAQ5M,KAAKyM,YAGTlM,EAAO0I,QAAQ8D,iBACf/M,KAAKyE,QAAQoI,KAAKF,EAAQpM,EAAO0I,QAAQ+D,sBAAuBJ,EAAQrM,EAAO0I,QAAQ+D,uBAAuB,GAAM,GAGpHhN,KAAKyE,QAAQoI,KAAKF,EAAOC,GAAO,GAAM,GAE1C5M,KAAKmM,aAA0C,KAA5BQ,EAAQ3M,KAAKiN,aAAiD,KAA5BL,EAAQ5M,KAAKkN,cAClElN,KAAKoM,WAAWO,EAAQ3M,KAAKiN,YAAaL,EAAQ5M,KAAKkN,aACvDlN,KAAKiN,YAAcN,EACnB3M,KAAKkN,YAAcN,KApcZ,CAAAzK,IAAA,YAAAzE,MAAA,SAscD2O,EAAGC,GAGT,IAAIK,EACAC,EAHC5M,KAAK2E,kBAIV3E,KAAK8M,gBAAgBT,EAAGC,GACxBK,EAAQ3M,KAAKwM,YACbI,EAAQ5M,KAAKyM,YAGTlM,EAAO0I,QAAQ8D,iBACf/M,KAAKyE,QAAQoI,KAAKF,EAAQpM,EAAO0I,QAAQ+D,sBAAuBJ,EAAQrM,EAAO0I,QAAQ+D,uBAAuB,GAAO,GAGrHhN,KAAKyE,QAAQoI,KAAKF,EAAOC,GAAO,GAAO,GAE3C5M,KAAKiN,YAAcN,EACnB3M,KAAKkN,YAAcN,KAvdZ,CAAAzK,IAAA,aAAAzE,MAAA,SAydA2O,EAAGC,MAzdH,CAAAnK,IAAA,eAAAzE,MAAA,SA0dE2O,EAAGC,GACPtM,KAAK2E,iBAEV3E,KAAKmN,WAAWd,EAAGC,KA7dZ,CAAAnK,IAAA,aAAAzE,MAAA,SA+dA2O,EAAGC,GACV,GAAKtM,KAAK2E,iBAEN3E,KAAK8B,YAAa,CAClB,IAAIsL,EAAOtB,KAAKuB,MAAMf,EAAGD,GACrBiB,EAAMxB,KAAKyB,IAAIvN,KAAKqB,SAAW+L,GAC/BtB,KAAK0B,GAAKF,IACVA,EAAgB,EAAVxB,KAAK0B,GAASF,IACpBA,EAAgB,GAAVxB,KAAK0B,IAAYxN,KAAKyN,aACxB3B,KAAKC,KAAKM,EAAIA,EAAIC,EAAIA,GAAK,KAC3BtM,KAAKqB,SAAW+L,GAIQ,GAA5BtB,KAAKC,KAAKM,EAAIA,EAAIC,EAAIA,KACtBtM,KAAKyN,YAAa,MA9enB,CAAAtL,IAAA,uBAAAzE,MAAA,WAkfPsC,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMG,YAAa/C,KAAKgD,cACxE,IAAI6D,EAAM,IAAIvG,EAAQwG,WAAW9G,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,aAAa,EAAO,UAI3F,OAHAnJ,KAAKgD,aAAa,MAClBhD,KAAK0E,OAAOgJ,iBAAiB7G,GAC7B7G,KAAK0E,OAAO6G,UACL1E,IAvfA,CAAA1E,IAAA,qBAAAzE,MAAA,SAyfQmJ,GACf7G,KAAKgD,aAAa,MAClBhD,KAAK0E,OAAOgJ,iBAAiB7G,KA3ftB,CAAA1E,IAAA,kBAAAzE,MAAA,SA6fKmJ,GACR7G,KAAKyD,WACLzD,KAAKyD,UAAUP,UACflD,KAAK0D,iBACL1D,KAAK0D,gBAAgBR,UACrBlD,KAAK2D,mBACL3D,KAAK2D,kBAAkBT,UACvBlD,KAAK4D,aACL5D,KAAK4D,YAAYV,UACjBlD,KAAK6D,iBACL7D,KAAK6D,gBAAgBX,UACrBlD,KAAK8D,eACL9D,KAAK8D,cAAcZ,UACvBlD,KAAKyD,UAAY,KACjBzD,KAAK0D,gBAAkB,KACvB1D,KAAK2D,kBAAoB,KACzB3D,KAAK4D,YAAc,KACnB5D,KAAK6D,gBAAkB,KACvB7D,KAAK8D,cAAgB,KACrB9D,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxB,IAMIgJ,EAAGC,EANHqB,EAAO7B,KAAK8B,IAAI9B,KAAK8B,IAAI5N,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,aAAc2C,KAAK+B,IAAIhH,EAAIK,MAAQ,EAAGL,EAAIM,OAAS,IAGlHJ,EAAI,IAAIzG,EAAQ8E,KAAKC,SACrByI,EAAK,IAAIvN,EAAOyG,OAChB+G,EAAI,IAAIzN,EAAQwG,WAAW6G,EAAMA,GAAM,EAAM,GAOjD,GALA3N,KAAK0E,OAAO6E,oBAAoBoE,EAAMA,EAAM,IAAI,GAChD3N,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKsE,YAAa,EAAGhE,EAAQmH,4BAA4BC,SAC1F1H,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cACxBjD,KAAKmF,iBAAmBnF,KAAK2B,WAAY,CACzC3B,KAAK0E,OAAOoG,wBACZ9K,KAAKoI,UAAY,IAAI9H,EAAQwG,WAAWvG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,eAAe,EAAM,GAC1G,IAAIC,EAAON,EAAOpN,EAAO0F,cAAcC,aAAe3F,EAAO0F,cAAcE,YAS3E,IARAnG,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK0D,EAAIK,MAC7BH,EAAEyC,WACFzC,EAAEN,YAAY,GAAc,GAAPkH,GAAY,GAAc,GAAPM,GAAY,GACpDjO,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG9C,GAAG,GACrF/G,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKwE,MAC5B6H,EAAI,EAAGA,EAAIP,KAAKoC,KAAKrH,EAAIK,MAAQyG,GAAOtB,IACzC,IAAKC,EAAI,EAAGA,EAAIR,KAAKoC,KAAKrH,EAAIM,OAASwG,GAAOrB,IAC1CtM,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,IAAMkJ,EAAIsB,GAAoB,GAAZ9G,EAAIK,MAAoB,GAAPyG,GACvD3N,KAAKmD,eAAe,GAAKmJ,EAAI2B,GAAqB,GAAbpH,EAAIM,OAAqB,GAAP8G,GACvDjO,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOgJ,iBAAiBK,GAC7B/N,KAAKoI,UAAU+F,WAAWJ,EAAGA,EAAEK,KAAM,CAAE/B,EAAGsB,EAAOtB,EAAGC,EAAGqB,EAAOrB,IAI1E,GAAItM,KAAK6B,WAAatB,EAAOwJ,UAAUW,MAAO,CAE1C,IAKIpC,EALA+F,EAAWrO,KAAK0E,OAAOgC,cAAcnG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,cAAe1N,EAAQqG,uBAAuBC,MAAM,GAkD1I,IAjDA5G,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,KAErBnD,KAAKmF,kBACLnF,KAAK0E,OAAO6D,mBAAmB8F,GAC/BrO,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BsF,EAAGtE,WACHsE,EAAG7G,MAAM1G,EAAO0I,QAAQ+E,cAAgBhO,KAAKiE,eAAeiD,MAAO3G,EAAO0I,QAAQ+E,cAAgBhO,KAAKiE,eAAekD,QACtHN,EAAIO,KAAKpH,KAAKiE,eAAgB6J,EAAI,KAAM,KAAM,MAAM,IACpDxF,EAAMtI,KAAK0E,OAAOgC,cAAcnG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,cAAe1N,EAAQqG,uBAAuBC,MAAM,IAC7H0H,qBAAqBzH,GACzBtG,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmB8E,EAAKtI,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAClJiF,EAAIpF,UACJoF,EAAM,KACN/H,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAKwE,KAAMxE,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eACxJwD,EAAI0H,SAAS1H,EAAIuH,KAAM,IAE3BpO,KAAK0E,OAAO6D,mBAAmBvI,KAAKmF,gBAAkBnF,KAAKwE,KAAO6J,GAClErO,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BsF,EAAGtE,WACHsE,EAAG7G,MAAM1G,EAAO0I,QAAQ+E,cAAgBhO,KAAKkE,cAAcgD,MAAO3G,EAAO0I,QAAQ+E,cAAgBhO,KAAKkE,cAAciD,QACpHN,EAAIO,KAAKpH,KAAKkE,cAAe4J,EAAI,KAAM,KAAM,MAAM,IACnDxF,EAAMtI,KAAK0E,OAAOgC,cAAcnG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,cAAe1N,EAAQqG,uBAAuBC,MAAM,IAC7H0H,qBAAqBzH,GACzBtG,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmB8E,EAAKtI,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAClJiF,EAAIpF,UACJoF,EAAM,KACNtI,KAAK6K,aAAa7K,KAAK6B,WACvBtB,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBxD,KAAKmF,gBAAkBkJ,EAAWrO,KAAKwE,KAAMxE,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAC1LrD,KAAK6K,aAAa,MACd7K,KAAKmF,gBACLkJ,EAASnL,UAGTlD,KAAKwE,KAAKtB,UAEdlD,KAAK0E,OAAOoG,wBACZ9K,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK0D,EAAIK,MAC7BH,EAAEyC,WACFzC,EAAEN,YAAY,GAAc,GAAPkH,GAAY,GAAc,GAAPA,GAAY,GACpD3N,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG9C,GAAG,GACrF/G,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKmF,gBAAkBnF,KAAKwE,KAAO6J,GAC/DrO,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKsE,YAAa,EAAGhE,EAAQmH,4BAA4BC,SACrF2E,EAAI,EAAGA,EAAIP,KAAKoC,KAAKrH,EAAIK,MAAQyG,GAAOtB,IACzC,IAAKC,EAAI,EAAGA,EAAIR,KAAKoC,KAAKrH,EAAIM,OAASwG,GAAOrB,IAC1CtM,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,IAAMkJ,EAAIsB,GAAoB,GAAZ9G,EAAIK,MAAoB,GAAPyG,GACvD3N,KAAKmD,eAAe,GAAKmJ,EAAIqB,GAAqB,GAAb9G,EAAIM,OAAqB,GAAPwG,GACvD3N,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOgJ,iBAAiBK,GAC7BlH,EAAIsH,WAAWJ,EAAGA,EAAEK,KAAM,CAAE/B,EAAGsB,EAAOtB,EAAGC,EAAGqB,EAAOrB,SAI1D,GAAItM,KAAK6B,WAAatB,EAAOwJ,UAAUC,OACxChK,KAAK6B,WAAatB,EAAOwJ,UAAUE,KACnCjK,KAAK6B,WAAatB,EAAOwJ,UAAUI,UACnCnK,KAAK6B,WAAatB,EAAOwJ,UAAUS,OAAQ,CAEjB,MAAtBxK,KAAKkE,eACL2C,EAAIsH,WAAWnO,KAAKkE,cAAelE,KAAKkE,cAAckK,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IAC3E,IAAIkC,EAAKxO,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,KAAOhK,KAAK6B,UAC5D4M,EAAKzO,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,IAAIzJ,EAAOmO,eAAe,EAAG,EAAG,EAAG,IAAO,KAU9F,GATA1O,KAAK0E,OAAOoG,wBACZ9K,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK0D,EAAIK,MAC7BH,EAAEyC,WACFzC,EAAEN,YAAY,GAAc,GAAPkH,GAAY,GAAc,GAAPA,GAAY,GACpD3N,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG9C,GAAG,GACrF/G,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKwE,MAC7BxE,KAAKmF,gBACL,IAAIwJ,EAAI,IAAIC,EAAU,EAAG,EAAGjB,EAAMA,GAC9BkB,EAAK,IAAIvO,EAAQwG,WAAW6G,EAAMA,GAAM,EAAM,GAEtD,IAAKtB,EAAI,EAAGA,EAAIP,KAAKoC,KAAKrH,EAAIK,MAAQyG,GAAOtB,IACzC,IAAKC,EAAI,EAAGA,EAAIR,KAAKoC,KAAKrH,EAAIM,OAASwG,GAAOrB,IAC1CtM,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,IAAMkJ,EAAIsB,GAAoB,GAAZ9G,EAAIK,MAAoB,GAAPyG,GACvD3N,KAAKmD,eAAe,GAAKmJ,EAAIqB,GAAqB,GAAb9G,EAAIM,OAAqB,GAAPwG,GACvD3N,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOgJ,iBAAiBK,GAC7BD,EAAGtE,WACHsE,EAAGgB,UAAUnB,EAAOtB,EAAGsB,EAAOrB,GAC1BtM,KAAKmF,iBACLwJ,EAAEtC,EAAIsB,EAAOtB,EACbsC,EAAErC,EAAIqB,EAAOrB,EACbuC,EAAGV,WAAWnO,KAAKiE,eAAgB0K,EAAG,CAAEtC,EAAG,EAAGC,EAAG,IACjDuC,EAAGzH,KAAK2G,GACRlH,EAAIO,KAAKyH,EAAIf,EAAIW,EAAID,IAGrB3H,EAAIO,KAAK2G,EAAGD,EAAIW,EAAID,QA0BhC,IAlB0B,MAAtBxO,KAAKkE,eACL2C,EAAIsH,WAAWnO,KAAKkE,cAAelE,KAAKkE,cAAckK,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IACnEtM,KAAKmF,iBACL0B,EAAIO,KAAKpH,KAAKiE,iBAGdjE,KAAKmF,iBACL0B,EAAIsH,WAAWnO,KAAKiE,eAAgBjE,KAAKiE,eAAemK,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IAEjFtM,KAAK0E,OAAOoG,wBACZ9K,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK0D,EAAIK,MAC7BH,EAAEyC,WACFzC,EAAEN,YAAY,GAAc,GAAPkH,GAAY,GAAc,GAAPA,GAAY,GACpD3N,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG9C,GAAG,GACrF/G,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKwE,MAC5B6H,EAAI,EAAGA,EAAIP,KAAKoC,KAAKrH,EAAIK,MAAQyG,GAAOtB,IACzC,IAAKC,EAAI,EAAGA,EAAIR,KAAKoC,KAAKrH,EAAIM,OAASwG,GAAOrB,IAC1CtM,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,IAAMkJ,EAAIsB,GAAoB,GAAZ9G,EAAIK,MAAoB,GAAPyG,GACvD3N,KAAKmD,eAAe,GAAKmJ,EAAIqB,GAAqB,GAAb9G,EAAIM,OAAqB,GAAPwG,GACvD3N,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOgJ,iBAAiBK,GAC7BD,EAAGtE,WACHsE,EAAGgB,UAAUnB,EAAOtB,EAAGsB,EAAOrB,GAC9BzF,EAAIO,KAAK2G,EAAGD,GAIxBC,EAAE7K,YAxsBK,CAAAf,IAAA,SAAAzE,MAAA,WA2sBP,GAAKsC,KAAK0E,SAEV1E,KAAK0E,OAAOoG,wBACZ9K,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAK0E,OAAO6D,mBAAmBvI,KAAKwE,MACpCxE,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAK0E,OAAO6D,mBAAmBvI,KAAK0D,iBACpC1D,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GACvBxI,KAAKmF,kBACLnF,KAAK0E,OAAO6D,mBAAmBvI,KAAK6D,iBACpC7D,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,IAET,MAAlBxI,KAAKyD,WACLzD,KAAK+O,eACqB,MAA1B/O,KAAK2D,mBAA2B,CAChC,IAAIkD,EAEJ,GADAA,EAAM,IAAIvG,EAAQwG,WAAW,KAAM,MAAM,EAAM,GAC3C9G,KAAKkE,cAAe,CACpB,IAAI6C,EAAI,IAAIxG,EAAOyG,OACnBD,EAAEE,MAAMJ,EAAIK,MAAQlH,KAAKkE,cAAcgD,MAAOL,EAAIM,OAASnH,KAAKkE,cAAciD,QAC9EN,EAAIO,KAAKpH,KAAKkE,cAAe6C,EAAG,KAAM,KAAM,MAAM,GAEtD/G,KAAK2D,kBAAoBpD,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQmC,EAAKvG,EAAQqG,uBAAuBC,MAAM,GAAM,GACzHC,EAAI3D,aAluBD,CAAAf,IAAA,eAAAzE,MAAA,WAsuBP,IAAImJ,EACJA,EAAM,IAAIvG,EAAQwG,WAAW,KAAM,MAAM,EAAM,GAE/C9G,KAAKyD,UAAYlD,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQmC,EAAKvG,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,SAAS,GAChI5G,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,WAClGlC,EAAI3D,YA3uBG,CAAAf,IAAA,QAAAzE,MAAA,WA6uBDsC,KAAKmI,aA7uBJ3H,EAAA,GA+uBfD,EAAOC,cAAgBA,EA/uB3B,CAgvBGD,IAAWA,EAAS,KAGvB,SAAWA,GAAQ,IACTyO,EADS,SAAAC,GAEX,SAAAD,EAAYE,EAAKxO,GAAW,IAAAyO,EAAAhS,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgP,IACxBG,EAAAhS,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA6R,GAAA1R,KAAA0C,MAAM,EAAMU,KACP2O,WAAY,EACjBF,EAAK/B,KAAO,EACZ+B,EAAKG,OAAS,EACdH,EAAKI,cAAgB,EACrBJ,EAAKK,WAAa,IAAIC,MACtBN,EAAKO,YAAc,IAAID,MACvBN,EAAKQ,cAAgB,IAAIF,MACzBN,EAAKS,SAAW,IAAIH,MACpBN,EAAKU,SAAU,EACfV,EAAKW,KAAOZ,EACZC,EAAKY,eAAiBZ,EAAKI,cAC3BJ,EAAKa,QAAU,IACXb,EAAKvO,WACLuO,EAAKa,QAAU,IACnBb,EAAKc,QAA2B,EAAhBd,EAAKa,QACrBb,EAAKe,OAA0B,EAAhBf,EAAKa,QACpB,IAAK,IAAIG,EAAI,EAAGA,EAAIhB,EAAKa,QAASG,IAC9BhB,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKK,WAAWzQ,KAAK,GACrBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKO,YAAY3Q,KAAK,GACtBoQ,EAAKQ,cAAc5Q,KAAK,GACxBoQ,EAAKQ,cAAc5Q,KAAK,GACxBoQ,EAAKQ,cAAc5Q,KAAK,GACxBoQ,EAAKQ,cAAc5Q,KAAK,GACxBoQ,EAAKQ,cAAc5Q,KAAK,GACxBoQ,EAAKQ,cAAc5Q,KAAK,GAE5B,IAAKoR,EAAI,EAAGA,EAAIhB,EAAKa,QAASG,IAC1BhB,EAAKQ,cAAkB,EAAJQ,EAAQ,GAAS,EAAJA,EAChChB,EAAKQ,cAAkB,EAAJQ,EAAQ,GAAS,EAAJA,EAAQ,EACxChB,EAAKQ,cAAkB,EAAJQ,EAAQ,GAAS,EAAJA,EAAQ,EACxChB,EAAKQ,cAAkB,EAAJQ,EAAQ,GAAS,EAAJA,EAAQ,EACxChB,EAAKQ,cAAkB,EAAJQ,EAAQ,GAAS,EAAJA,EAAQ,EACxChB,EAAKQ,cAAkB,EAAJQ,EAAQ,GAAS,EAAJA,EAAQ,EAhDpB,OAAAhB,EAFjB,OAAAhS,OAAAiT,EAAA,EAAAjT,CAAA6R,EAAAC,GAAA9R,OAAA+E,EAAA,EAAA/E,CAAA6R,EAAA,EAAA7M,IAAA,eAAAzE,MAAA,SAqDE0E,EAAOC,EAASC,GACzBtC,KAAKmN,WAAW,EAAG,GACnBnN,KAAKqQ,QAAU/N,EACfjC,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6R,EAAA5R,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAaoC,EAAOC,EAAS,QAxDtB,CAAAF,IAAA,UAAAzE,MAAA,WA2DPsC,KAAKqQ,QAAU,KACfhQ,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6R,EAAA5R,WAAA,UAAA4C,MAAA1C,KAAA0C,QA5DO,CAAAmC,IAAA,QAAAzE,MAAA,WAuEP,GARAsC,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,EAAM,EAAG,QAAQ,GACjK5G,KAAKsQ,SAAWtQ,KAAK0E,OAAO2B,mBAAmBrG,KAAKiQ,QAAS,GAC7DjQ,KAAKuQ,OAASvQ,KAAK0E,OAAO2B,mBAAmBrG,KAAKiQ,QAAS,GAC3DjQ,KAAKwQ,WAAaxQ,KAAK0E,OAAO6B,kBAAkBvG,KAAKkQ,QACrDlQ,KAAKwQ,WAAWlK,iBAAiBtG,KAAK2P,cAAe,EAAG3P,KAAKkQ,QAC7DlQ,KAAKuQ,OAAOjK,iBAAiBtG,KAAKwP,WAAY,EAAGxP,KAAKiQ,SAElDjQ,KAAKqQ,QAAQnJ,OAAS3G,EAAO0I,QAAQ+E,eAAiBhO,KAAKqQ,QAAQlJ,QAAU5G,EAAO0I,QAAQ+E,cAC5FhO,KAAKyQ,YAAclQ,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKqQ,QAAS/P,EAAQqG,uBAAuBC,MAAM,GAAO,EAAO,QAAQ,OAE3I,CACD,IAAI8J,EAAO,IAAIpQ,EAAQwG,WAAWvG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cAAc,EAAM,GACzGa,EAAI,IAAIxG,EAAOyG,OACnBD,EAAEE,OAAOyJ,EAAKxJ,MAAQ,GAAKlH,KAAKqQ,QAAQnJ,OAAQwJ,EAAKvJ,OAAS,GAAKnH,KAAKqQ,QAAQlJ,QAEhFuJ,EAAKtJ,KAAKpH,KAAKqQ,QAAStJ,EAAG,KAAM,KAAM,MAAM,GAC7C/G,KAAKyQ,YAAclQ,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQgM,EAAMpQ,EAAQqG,uBAAuBC,MAAM,GAAO,EAAM,QAAQ,GAEvI5G,KAAKsQ,SAAShK,iBAAiBtG,KAAK0P,YAAa,EAAG1P,KAAKiQ,SACzDjQ,KAAKuQ,OAAOjK,iBAAiBtG,KAAKwP,WAAY,EAAGxP,KAAKiQ,WAnF/C,CAAA9N,IAAA,OAAAzE,MAAA,WAwFPsC,KAAK6P,SAAU,EACf7P,KAAK8B,aAAc,EACnB9B,KAAK8P,KAAKa,gBAAgB3Q,KAAK6P,WA1FxB,CAAA1N,IAAA,QAAAzE,MAAA,WA8FPsC,KAAK6P,SAAU,EACf7P,KAAK8B,aAAc,EACnB9B,KAAK8P,KAAKa,gBAAgB3Q,KAAK6P,WAhGxB,CAAA1N,IAAA,OAAAzE,MAAA,WA6GP,GARAsC,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBsC,aAAc5J,EAAQsH,qBAAqB+C,MACpG3K,KAAKmD,eAAe,GAAyC,IAAnC5C,EAAO0F,cAAcE,YAC/CnG,KAAKmD,eAAe,GAAyC,GAApC5C,EAAO0F,cAAcC,aAC9ClG,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACpBrD,KAAK6P,QAAS,CACd,IAAIM,EACAS,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IADAL,EAAMpF,KAAKG,SAAWjM,KAAKsP,OAAuB,GAAdtP,KAAKsP,OACpCa,EAAI,EAAGA,EAAInQ,KAAKgQ,QAASG,IAC1BS,EAAK5Q,KAAK4P,SAASO,GACnBU,EAAK7Q,KAAK4P,SAASO,EAAI,GAEvBW,EAAO9Q,KAAKwR,MAAQxR,KAAKyR,KAAOzR,KAAKwR,MAAQZ,EAC7CG,EAAO/Q,KAAK0R,MAAQ1R,KAAK2R,KAAO3R,KAAK0R,MAAQd,EAC7CI,EAAOhR,KAAK4R,MAAQ5R,KAAK6R,KAAO7R,KAAK4R,MAAQhB,EAC7CK,EAAOjR,KAAK8R,MAAQ9R,KAAK+R,KAAO/R,KAAK8R,MAAQlB,EAG7CO,EADAD,EAAOpF,KAAKI,IAAIJ,KAAKG,SAAU,GAAMjM,KAAKsP,OAAS,GAAY,GAAP4B,EAAYpF,KAAKG,SAAW,GAAM,GAAK,EAAMiF,EAAM,EAAI,GAAK,GAEhHA,EAAM,EACNC,GAAOrF,KAAKG,SAAWjM,KAAKsP,OAAS,IAGrC4B,GAAOpF,KAAKG,SAAWjM,KAAKsP,OAAS,IAErCtP,KAAKY,WACLsQ,GAAO,GACPC,GAAO,IAEPN,EAAKD,EAAK,IAAO5Q,KAAK+P,eAAiB,KACvCmB,EAAMC,EAAM,GAChBC,GAAQJ,EAAOF,GAAQI,EACvBG,GAAQJ,EAAOF,GAAQG,EACvBI,GAAQN,EAAOF,GAAQK,EACvBI,GAAQN,EAAOF,GAAQI,EAEvBnR,KAAK0P,YAAgB,EAAJS,GAASnQ,KAAKwR,MAAQxR,KAAKyR,KAAOzR,KAAKwR,MAAQZ,EAAKQ,EACrEpR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAK0R,MAAQ1R,KAAK2R,KAAO3R,KAAK0R,MAAQd,EAAKS,EACzErR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAK4R,MAAQ5R,KAAK6R,KAAO7R,KAAK4R,MAAQhB,EAAKU,EACzEtR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAK8R,MAAQ9R,KAAK+R,KAAO/R,KAAK8R,MAAQlB,EAAKW,EACzEvR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAKwR,MAAQxR,KAAKyR,KAAOzR,KAAKwR,MAAQX,EAAKO,EACzEpR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAK0R,MAAQ1R,KAAK2R,KAAO3R,KAAK0R,MAAQb,EAAKQ,EACzErR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAK4R,MAAQ5R,KAAK6R,KAAO7R,KAAK4R,MAAQf,EAAKS,EACzEtR,KAAK0P,YAAgB,EAAJS,EAAQ,GAAKnQ,KAAK8R,MAAQ9R,KAAK+R,KAAO/R,KAAK8R,MAAQjB,EAAKU,EAG7EvR,KAAKsQ,SAAShK,iBAAiBtG,KAAK0P,YAAa,EAAG1P,KAAKiQ,SACzDjQ,KAAKuQ,OAAOjK,iBAAiBtG,KAAKwP,WAAY,EAAGxP,KAAKiQ,SAClDjQ,KAAKqP,YACDrP,KAAKsP,OAAS,MACdtP,KAAKsP,OAAS,EACdtP,KAAK+P,eAAiB/P,KAAKuP,cAC3BvP,KAAKqP,WAAY,EACjBrP,KAAK8P,KAAKkC,kBAAkBhS,KAAKqP,YAGjCrP,KAAKsP,QAAU,WAKlBtP,KAAKqP,WACNrP,KAAKiS,QAGbjS,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKuQ,OAAQ,EAAGjQ,EAAQmH,4BAA4BC,SACrF1H,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKsQ,SAAU,EAAGhQ,EAAQmH,4BAA4BC,SACvF1H,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuD,YAAY,GACnGvD,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKyQ,aACjCzQ,KAAK0E,OAAO+D,cAAczI,KAAKwQ,YAC/BxQ,KAAK0E,OAAO2D,WAAWrI,KAAKgE,cA5LrB,CAAA7B,IAAA,aAAAzE,MAAA,SA8LA+N,EAAIE,GACX,GAAK3L,KAAK6P,QAAV,CAEU,GAANpE,GAAiB,GAANE,IACX3L,KAAK8P,KAAKkC,kBAAkBhS,KAAKqP,WACjCrP,KAAK+P,gBAAkB,IACnB/P,KAAK+P,eAAiB/P,KAAKgQ,UAC3BhQ,KAAK+P,eAAiB/P,KAAKgQ,UAE3BlE,KAAKC,KAAKN,EAAKA,EAAKE,EAAKA,GAAM,KAAO3L,KAAKqP,aAC3CrP,KAAKoN,KAAOtB,KAAKuB,OAAO1B,EAAIF,GACxBK,KAAKG,SAAW,KAChBjM,KAAK4P,SAASxM,OAAS,IAE/BpD,KAAKsP,QAAUxD,KAAKC,KAAKN,EAAKA,EAAKE,EAAKA,GAAMpL,EAAO0F,cAAcE,YAAc,KAC5EnG,KAAK8P,KAAKoC,kBAAoBlS,KAAKsP,OAAS,IAC7CtP,KAAK8P,KAAKqC,gBACdnS,KAAKqP,WAAY,GAEV9O,EAAO0F,cAAcC,aAAekM,OAAOpS,KAAKgQ,SAA3D,IACI9I,EAA6F,GAAhD,GAApC3G,EAAO0F,cAAcC,aAAwD,GAAnC3F,EAAO0F,cAAcE,aAC5EnG,KAAKqS,QAAkB,GAARnL,EACf,IAyBIiJ,EAzBAxB,EAAI3O,KAAKoN,KAAiB,IAAVtB,KAAK0B,GAErB8E,EAAMxG,KAAKyG,IAAI5D,EAAc,GAAV7C,KAAK0B,IAAYxN,KAAKqS,QACzCG,GAAO1G,KAAK2G,IAAI9D,EAAc,GAAV7C,KAAK0B,IAAYxN,KAAKqS,QAC1CK,EAAM5G,KAAKyG,IAAI5D,GAAK3O,KAAKqS,QACzBM,GAAO7G,KAAK2G,IAAI9D,GAAK3O,KAAKqS,QAC1BO,EAAM9G,KAAKyG,IAAI5D,EAAI7C,KAAK0B,IAAMxN,KAAKqS,QACnCQ,GAAO/G,KAAK2G,IAAI9D,EAAI7C,KAAK0B,IAAMxN,KAAKqS,QACpCS,EAAMhH,KAAKyG,IAAI5D,EAAc,GAAV7C,KAAK0B,IAAYxN,KAAKqS,QACzCU,GAAOjH,KAAK2G,IAAI9D,EAAc,GAAV7C,KAAK0B,IAAYxN,KAAKqS,QAE1CW,EAAM9L,EAAQ4E,KAAKC,KAAK,GAAMxL,EAAO0F,cAAcE,YAAc,GACjE8M,EAAM/L,EAAQ4E,KAAKC,KAAK,GAAMxL,EAAO0F,cAAcC,aAAe,GAClEgN,EAAKlT,KAAKoN,KACVqF,EAAM3G,KAAK2G,IAAIS,GACfX,EAAMzG,KAAKyG,IAAIW,GAcnB,IAZAlT,KAAKwR,KAAO,GAAMwB,EAAKT,EAAMS,EAAKP,EAClCzS,KAAK0R,KAAO,KAAQsB,EAAKP,EAAMO,EAAKT,GAAOU,EAAKD,EAChDhT,KAAK4R,KAAO,GAAMoB,EAAKT,EAAMS,EAAKP,EAClCzS,KAAK8R,KAAO,KAAQkB,EAAKP,EAAMO,EAAKT,GAAOU,EAAKD,EAChDhT,KAAKyR,KAAO,GAAMuB,EAAKT,EAAMS,EAAKP,EAClCzS,KAAK2R,KAAO,KAAQqB,EAAKP,EAAMO,EAAKT,GAAOU,EAAKD,EAChDhT,KAAK6R,KAAO,GAAMmB,EAAKT,EAAMS,EAAKP,EAClCzS,KAAK+R,KAAO,KAAQiB,EAAKP,EAAMO,EAAKT,GAAOU,EAAKD,EAIhDhT,KAAK4P,SAAS7Q,KAAK,GACZiB,KAAK4P,SAASxM,OAASpD,KAAKgQ,SAC/BhQ,KAAK4P,SAAS7Q,KAAK,GAEvB,IAAKoR,EAAI,EAAGA,EAAInQ,KAAKgQ,QAASG,IACtBA,EAAInQ,KAAK+P,eACe,GAApB/P,KAAK4P,SAASO,KACdnQ,KAAK4P,SAASO,GAAKrE,KAAKG,UAG5BjM,KAAK4P,SAASO,GAAK,EAO3B,IAFAnQ,KAAK4P,SAASuD,OAEThD,EAAI,EAAGA,EAAInQ,KAAK4P,SAASxM,QACtBpD,KAAK4P,SAASO,GAAKnQ,KAAK4P,SAASO,EAAI,GAAK,EAAIjJ,EAC9ClH,KAAK4P,SAASwD,OAAOjD,EAAG,GAGxBA,IAGR,KAAOnQ,KAAK4P,SAASxM,OAASpD,KAAKgQ,SAC/BhQ,KAAK4P,SAAS7Q,KAAK,GAGvB,IADAiB,KAAK4P,SAAS7Q,KAAK,GACdoR,EAAI,EAAGA,EAAInQ,KAAKgQ,QAASG,IAAK,CAE/B,IAEIS,EAAK5Q,KAAK4P,SAASO,GACnBU,EAAK7Q,KAAK4P,SAASO,EAAI,GAE3BnQ,KAAKwP,WAAe,EAAJW,GAASmC,GAAOM,EAAMN,GAAO1B,EAC7C5Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKqC,GAAOK,EAAML,GAAO5B,EACjD5Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKuC,GAAOI,EAAMJ,GAAO9B,EACjD5Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKwC,GAAOI,EAAMJ,GAAO/B,EACjD5Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKmC,GAAOM,EAAMN,GAAOzB,EACjD7Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKqC,GAAOK,EAAML,GAAO3B,EACjD7Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKuC,GAAOI,EAAMJ,GAAO7B,EACjD7Q,KAAKwP,WAAe,EAAJW,EAAQ,GAAKwC,GAAOI,EAAMJ,GAAO9B,MA3R9C,CAAA1O,IAAA,kBAAAzE,MAAA,SA8RKmJ,GACZ,GAAI7G,KAAKqP,WAAarP,KAAK6B,WAAatB,EAAOwJ,UAAUW,MACrD1K,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,cAAe1N,EAAQqG,uBAAuBC,MAAM,GACvI5G,KAAK0E,OAAO6D,mBAAmBvI,KAAKwE,MAAM,EAAO,GACjDxE,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cAC5BjD,KAAKmD,eAAe,GAAwC,GAAnC5C,EAAO0F,cAAcE,YAC9CnG,KAAKmD,eAAe,GAAyC,GAApC5C,EAAO0F,cAAcC,aAC9ClG,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKsQ,SAAShK,iBAAiBtG,KAAK0P,YAAa,EAAG1P,KAAKiQ,SACzDjQ,KAAKuQ,OAAOjK,iBAAiBtG,KAAKwP,WAAY,EAAGxP,KAAKiQ,SACtDjQ,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKuQ,OAAQ,EAAGjQ,EAAQmH,4BAA4BC,SACrF1H,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKsQ,SAAU,EAAGhQ,EAAQmH,4BAA4BC,SACvF1H,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuD,YAAY,GACnGvD,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKyQ,aACjCzQ,KAAK0E,OAAO+D,cAAczI,KAAKwQ,YAC/BxQ,KAAK0E,OAAO2D,WAAWrI,KAAKgE,YAC5B3D,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6R,EAAA5R,WAAA,kBAAA4C,MAAA1C,KAAA0C,KAAsB6G,OAErB,CACyB,MAAtB7G,KAAKkE,eAA0B3D,EAAO8S,eAAeC,qBACrDzM,EAAIsH,WAAWnO,KAAKkE,cAAelE,KAAKkE,cAAckK,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IAC3E,IAAIkC,EAAKxO,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,KAAOhK,KAAK6B,UAC5D4M,EAAKzO,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,IAAIzJ,EAAOmO,eAAe,EAAG,EAAG,EAAG,IAAO,KAC9F7H,EAAIO,KAAKpH,KAAKqQ,QAAS,KAAM5B,EAAID,MA7T9B,CAAArM,IAAA,QAAAzE,MAAA,WAiUPsC,KAAKoN,KAAO,EACZpN,KAAK+P,eAAiB/P,KAAKuP,cAC3BvP,KAAKsP,OAAS,EACdtP,KAAKmN,WAAW,EAAG,GACnB9M,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6R,EAAA5R,WAAA,QAAA4C,MAAA1C,KAAA0C,MACAA,KAAKiS,QACLjS,KAAK8P,KAAKa,gBAAgB3Q,KAAK6P,aAvUxBb,EAAA,CACSzO,EAAOC,eAyU/BD,EAAOyO,UAAYA,EA1UvB,CA2UGzO,IAAWA,EAAS,KAEvB,SAAWD,GAAS,IACViT,EADU,WAEZ,SAAAA,IAAepW,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAuT,GACXvT,KAAKwT,SAAW,GAChBxT,KAAKuH,OAASkM,SAASC,cAAc,UAJ7B,OAAAvW,OAAA+E,EAAA,EAAA/E,CAAAoW,EAAA,EAAApR,IAAA,WAAAzE,MAAA,SAMHiW,GACL3T,KAAKwT,SAASzU,KAAK4U,OAPXJ,EAAA,GAUhBjT,EAAQiT,cAAgBA,EAV5B,CAWGjT,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IAEVsT,EAFU,SAAAC,GAGZ,SAAAD,IAA0E,IAAAE,EAA9DC,EAA8D1U,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAjD,KAAM2U,EAA2C3U,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAA3B,OAA2BA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,UAAAlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA4T,IACtEE,EAAA3W,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAAyW,GAAAtW,KAAA0C,QACKiU,YAAcF,EACnBD,EAAKE,cAAgBA,EAHiDF,EAH9D,OAAA3W,OAAAiT,EAAA,EAAAjT,CAAAyW,EAAAC,GAAA1W,OAAA+E,EAAA,EAAA/E,CAAAyW,EAAA,EAAAzR,IAAA,aAAArC,IAAA,WASR,OAAOE,KAAKiU,aATJpW,IAAA,SAWGH,GACXsC,KAAKiU,YAAcvW,MAZXkW,EAAA,CAEKtT,EAAQiT,eAa7BjT,EAAQsT,OAASA,EAfrB,CAgBGtT,IAAYA,EAAU,KAIzB,SAAWC,GAAQ,IACT2T,EADS,SAAAC,GAGX,SAAAD,EAAYxT,GAAW,IAAA0T,EASnB,GATmBjX,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAkU,IACnBE,EAAAjX,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA+W,GAAA5W,KAAA0C,MAAM,EAAMU,KACP2T,QAAU,IAAI5E,MACnB2E,EAAKE,UAAY,IAAI7E,MAErB2E,EAAKG,iBAAmB,IAAIjU,EAAQ8E,KAAKC,SACzC+O,EAAKG,iBAAiB/N,kBAAsD,IAAnCjG,EAAO0F,cAAcE,YAAuD,IAApC5F,EAAO0F,cAAcC,aAAmB,GACzHkO,EAAKG,iBAAiB9N,YAAY,GAA0C,GAAnClG,EAAO0F,cAAcE,cAAoB,GAA2C,GAApC5F,EAAO0F,cAAcC,cAAoB,GAClIkO,EAAKI,UAAYjU,EAAOkU,aAAaC,mBACjCN,EAAKI,WAAajU,EAAOoU,aAAaC,cAAe,CAGrD,IAAK,IAAIzE,EAAI,EAAGA,EAAIiE,EAAKS,MAAMzR,OAAQ+M,IACnCiE,EAAKS,MAAM1E,IAAM,gBACrBiE,EAAKS,MAAMC,MAdI,OAiBfV,EAAKI,UAAajU,EAAOoU,aAAaI,eAG1CX,EAAKY,MAAQ,EApBMZ,EAHZ,OAAAjX,OAAAiT,EAAA,EAAAjT,CAAA+W,EAAAC,GAAAhX,OAAA+E,EAAA,EAAA/E,CAAA+W,EAAA,EAAA/R,IAAA,eAAAzE,MAAA,SAyBE0E,EAAOC,EAASC,GACzBtC,KAAKqQ,QAAU/N,EACfjC,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA+W,EAAA9W,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAaoC,EAAOC,EAAS,MAC7B9B,EAAO0U,uBAAuBD,MAAQhV,KAAKgV,QA5BpC,CAAA7S,IAAA,UAAAzE,MAAA,WAgCPsC,KAAKgV,MAAQzU,EAAO0U,uBAAuBD,MAC3C3U,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA+W,EAAA9W,WAAA,UAAA4C,MAAA1C,KAAA0C,QAjCO,CAAAmC,IAAA,QAAAzE,MAAA,WAsCP,IAAIyS,EAMA/B,EALJ,IAHApO,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,GAE3IuJ,EAAI,EAAGA,EAAInQ,KAAKqU,QAAQjR,OAAQ+M,IACjCnQ,KAAKqU,QAAQlE,GAAGjN,UACpBlD,KAAKqU,QAAQjR,OAAS,EAItB,IACImE,EACAV,EAIAqO,EAEAxE,EACAyE,EACAlO,EAVAF,EAAI,IAAIxG,EAAOyG,OAGfoO,EAAS,EACTC,EAAS,EACTvH,EAAK,IAAIvN,EAAOyG,OAEhBsO,EAAM,EAKV,GADA/N,EAAS,IAAIjH,EAAQwG,WAAWvG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cAAc,EAAM,GACvGlG,KAAKwU,WAAajU,EAAOoU,aAAaC,eAAiB5U,KAAKwU,WAAajU,EAAOoU,aAAaI,eAE7F,GADAlO,EAAM,IAAIvG,EAAQwG,WAAWvG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,eAAe,EAAM,GAC3FhO,KAAKwU,WAAajU,EAAOoU,aAAaC,cACtC,IAAKzE,EAAI,EAAGA,EAAInQ,KAAK6U,MAAMzR,OAAQ+M,IAAK,CACpCnQ,KAAKuV,UAAUC,SAAWxV,KAAK6U,MAAM1E,GACrCnQ,KAAKuV,UAAUE,SAAWnV,EAAQoV,kBAAkBC,KACpD3V,KAAKuV,UAAUK,OAAS5V,KAAKuV,UAAUM,OAAS,EAChD,IAGIxJ,EACAC,EAJMtM,KAAKuV,UAAUrO,MACflH,KAAKuV,UAAUpO,OAczB,GATAF,EADOjH,KAAKuV,UAAUrO,MAAQlH,KAAKuV,UAAUpO,OAC9B,IAAMnH,KAAKuV,UAAUrO,MAAQ,IAAMlH,KAAKuV,UAAUpO,OACjEJ,EAAEyC,WACFzC,EAAEE,MAAMA,EAAOA,GACfoF,EAA2C,IAAtC,IAAMrM,KAAKuV,UAAUrO,MAAQD,GAClCqF,EAA4C,IAAvC,IAAMtM,KAAKuV,UAAUpO,OAASF,GACnCF,EAAE+H,UAAUzC,EAAGC,GACf/E,EAAOgH,SAAShH,EAAO6G,KAAM,GAC7B7G,EAAOuO,gBAAgB9V,KAAKuV,UAAWxO,EAAG,KAAM,KAAM,MAAM,EAAMzG,EAAQyV,aAAaC,OACvF5H,EAAO7G,EAAO0O,mBAAmB,WAAY,GAAY,KAC7C7H,EAAKlH,MAAQ,GAAKkH,EAAKjH,OAAS,EAAG,CAC3C,GAAIkO,EAASjH,EAAKjH,OAAS5G,EAAO0I,QAAQ+E,cAAe,CAErD,KADAsH,EACU,EAAG,CACT1Q,QAAQC,IAAI,4BAA6B7E,KAAKqU,QAAQjR,QACtD,MAGJiS,EAAS,EACTD,GAAU,IAEdtH,EAAGtE,WACHsE,EAAG7G,MAAMA,EAAOA,GAEhB6G,EAAGgB,UAAUzC,EAAI+B,EAAK/B,EAAI+I,EAAQ9I,EAAI8B,EAAK9B,EAAI+I,GAC/CxO,EAAIiP,gBAAgB9V,KAAKuV,UAAWzH,EAAI,KAAM,KAAM,MAAM,EAAMxN,EAAQyV,aAAaC,OACrFd,EAAK,IAAI3U,EAAO2V,cACbzQ,MAAMzF,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKuU,kBAC3CW,EAAGiB,UAAYhG,EACf+E,EAAGkB,iBAAiBhI,EAAMgH,EAAQC,EAAQ,EAAMpO,GAChDiO,EAAGmB,MAAQhK,EAAI+B,EAAK/B,EAAiB,GAAb+B,EAAKlH,OAAcD,EAC3CiO,EAAGoB,MAAQhK,EAAI8B,EAAK9B,EAAkB,GAAd8B,EAAKjH,QAAeF,EAC5CjH,KAAKqU,QAAQtV,KAAKmW,GAClBG,GAAUjH,EAAKjH,OAAS,QAI3BnH,KAAKwU,UAAajU,EAAOoU,aAAaI,mBA6C9C,CACG/U,KAAKqQ,QAAQnJ,OAAS3G,EAAO0F,cAAcE,aAAenG,KAAKqQ,QAAQlJ,QAAU5G,EAAO0F,cAAcC,aACtGlG,KAAKyQ,YAAclQ,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKqQ,QAAS/P,EAAQqG,uBAAuBC,MAAM,GAAO,EAAO,eAAe,IAGnJ8J,EAAO,IAAIpQ,EAAQwG,WAAWvG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cAAc,EAAM,GACzGa,EAAEE,MAAMyJ,EAAKxJ,MAAQlH,KAAKqQ,QAAQnJ,MAAOwJ,EAAKvJ,OAASnH,KAAKqQ,QAAQlJ,QACpEuJ,EAAKtJ,KAAKpH,KAAKqQ,QAAStJ,EAAG,KAAM,KAAM,MAAM,GAC7C/G,KAAKyQ,YAAclQ,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQgM,EAAMpQ,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,eAAe,IAE7IwH,EAAOpO,KAAKqQ,QAAQ4F,mBAAmB,WAAY,GAAY,GAC/D,IAAIM,EAAM,IAAIhW,EAAO2V,aACrBK,EAAI9Q,MAAMzF,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKuU,kBAC5CgC,EAAIC,aAAapI,EAAM,GACvBmI,EAAIE,WAAWzW,KAAKyQ,aACpBzQ,KAAKqU,QAAQtV,KAAKwX,GAyBtB,GAtBAtP,EAAQM,EAAOL,MAAQ4E,KAAK+B,IAAItN,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cACvFa,EAAEyC,WACFzC,EAAEE,MAAMA,EAAOA,GACfM,EAAOgH,SAAShH,EAAO6G,KAAM,GAC7B7G,EAAOH,KAAKpH,KAAKqQ,QAAStJ,EAAG,KAAM,KAAM,MAAM,GAC/CqH,EAAO7G,EAAO0O,mBAAmB,WAAY,GAAY,GACzDvF,EAAO,IAAIpQ,EAAQwG,WAAW,IAAK,KAAK,EAAM,GAC9CqO,EAAK,IAAMrJ,KAAK+B,IAAIO,EAAKlH,MAAOkH,EAAKjH,QACrCJ,EAAEyC,WACFzC,EAAEE,MAAMA,EAAOA,GACfF,EAAE+H,WAAWV,EAAK/B,GAAI+B,EAAK9B,GAC3BvF,EAAEE,MAAMkO,EAAIA,EAAK5U,EAAO0F,cAAcE,YAAc5F,EAAO0F,cAAcC,cACzEwK,EAAKtJ,KAAKpH,KAAKqQ,QAAStJ,EAAG,KAAM,KAAM,MAAM,GAC7CqH,EAAKlH,MAAQkH,EAAKlH,MAAQiO,EAAK,EAC/B/G,EAAKjH,OAASiH,EAAKjH,OAASgO,EAAK,EACjCA,EAAK,GAAKlO,EAAQkO,EAAK,GACvBnV,KAAK0W,gBAAkB,IAAInW,EAAO2V,aAClClW,KAAK0W,gBAAgBjR,MAAMzF,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKuU,kBAC7DvU,KAAK0W,gBAAgBN,iBAAiBhI,EAAM,EAAG,EAAG+G,GAClDnV,KAAK0W,gBAAgBD,WAAWlW,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQgM,EAAMpQ,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,IAAI,IAC3I5G,KAAK0W,gBAAgBrK,EAAiB,GAAb+B,EAAKlH,MAAaiO,EAAK/G,EAAK/B,EAAIpF,EACzDjH,KAAK0W,gBAAgBpK,EAAkB,GAAd8B,EAAKjH,OAAcgO,EAAK/G,EAAK9B,EAAIrF,EACtDjH,KAAKsU,UAAUlR,OAAS,GAAKpD,KAAKqP,UAElC,IADAzK,QAAQC,IAAI,4BACPsL,EAAI,EAAGA,EAAInQ,KAAKsU,UAAUlR,OAAQ+M,IACnCnQ,KAAKsU,UAAUnE,GAAGwG,mBAAmB3W,KAAKqU,QAAQrU,KAAKsU,UAAUnE,GAAGyG,aAIxE5W,KAAKwI,UAtMF,CAAArG,IAAA,OAAAzE,MAAA,WA2MP,IAAIyS,EAGJ,IAFAnQ,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAEtB2H,EAAI,EAAGA,EAAInQ,KAAKsU,UAAUlR,OAAQ+M,IACnCnQ,KAAKsU,UAAUnE,GAAG/I,OAClBpH,KAAKsU,UAAUnE,GAAG0G,aAAe7W,KAAK8W,MAE1C9W,KAAK8W,OAAS,MAlNP,CAAA3U,IAAA,aAAAzE,MAAA,SAoNA+N,EAAIE,GAKX,GAJI3L,KAAK8W,MAAQ,KACb9W,KAAK+W,QAAU,IACnB/W,KAAK8W,MAAQ,EACb9W,KAAK+W,UACD/W,KAAK+W,QAAU,GAAI,CACnB/W,KAAKqP,WAAY,EAGjB,IADA,IAAI2H,EAAMhX,KAAKsU,UAAUlR,OAChB+M,EAAI,EAAGA,EAAI6G,GACZhX,KAAKsU,UAAUnE,GAAG8G,YAClBjX,KAAKsU,UAAUlB,OAAOjD,EAAG,GACzB6G,MAGAhX,KAAKsU,UAAUnE,GAAG8G,YAAa,EAC/B9G,KAGR5P,EAAO0U,uBAAuBiC,eAAelX,KAAKsU,UAAWtU,KAAKqU,QAASrU,KAAKwU,WAAajU,EAAOoU,aAAaC,cAAe5U,KAAKY,UAGrIZ,KAAK+W,QAAU,EAEnB,IAAK5G,EAAI,EAAGA,EAAI6G,GACRhX,KAAKsU,UAAUnE,GAAG8G,YAClBjX,KAAKsU,UAAUlB,OAAOjD,EAAG,GACzB6G,KAGA7G,MAlPD,CAAAhO,IAAA,kBAAAzE,MAAA,SAsPKmJ,GACZ,IAAIsQ,EACApQ,EACAqQ,EACJ,GAAIpX,KAAKwU,WAAajU,EAAOoU,aAAaC,eAAiB5U,KAAKwU,WAAajU,EAAOoU,aAAaI,eAAgB,CAC7G,GAAI/U,KAAKqP,UAAW,CAChB,IAAIc,EACAkH,EACAnC,EACMlV,KAAKsU,UAAUlR,OAGzB,GAFA2D,EAAI,IAAIxG,EAAOyG,OACfmQ,EAAQ,IAAI7W,EAAQwG,WAAWvG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cAAc,EAAM,GACtGlG,KAAKwU,WAAajU,EAAOoU,aAAaC,cACtC,IAAKzE,EAAI,EAAGA,EAAInQ,KAAKsU,UAAUlR,OAAQ+M,IACnCkH,EAAKrX,KAAKsU,UAAUnE,GACpBpJ,EAAEyC,WACF0L,EAAKlV,KAAKqU,QAAQgD,EAAGT,OACrB5W,KAAKuV,UAAUC,SAAWxV,KAAK6U,MAAMK,EAAGiB,WACxCpP,EAAE+H,UAAUoG,EAAGmB,KAAMnB,EAAGoB,MACxBvP,EAAEuQ,OAAOD,EAAGE,QACZxQ,EAAEE,MAAMoQ,EAAGG,OAAQH,EAAGG,QACtBzQ,EAAE+H,UAAUuI,EAAG5L,GAAI4L,EAAG1L,IACtBwL,EAAMrB,gBAAgB9V,KAAKuV,UAAWxO,EAAG,KAAM,KAAM,MAAM,EAAMzG,EAAQyV,aAAaC,WAU1F,IALA,IACIyB,EAAM,IAAInX,EAAQsT,OAAO,KAAM,QAAQ,GACvC8D,EAAenX,EAAO8S,eAAesE,YAErCC,EAAM,KACDC,EAAI,EAAGA,EAAI7X,KAAKqU,QAAQjR,OAAQyU,IAAK,CAE1C,IADA3C,EAAKlV,KAAKqU,QAAQwD,GACb1H,EAAI,EAAGA,EAAInQ,KAAKsU,UAAUlR,OAAQ+M,IAEnC,IADAkH,EAAKrX,KAAKsU,UAAUnE,IACbyG,OAASiB,EAAhB,CAEA,IACIC,EACAC,EAAc,EAFHV,EAAGG,OAAS,GAMvBO,EAAc,GAIdD,EAAOF,EACPG,EAAcL,EAAaM,gBAE/BP,EAAI1D,WAAa+D,EACjBL,EAAIQ,WAAY,EACR,EACR,IAAIC,EAAab,EAAGG,OACZtC,EAAGiD,MAMX,GALApR,EAAEyC,WACFzC,EAAE+H,UAAwB,IAAbgJ,EAAK5Q,MAA2B,IAAd4Q,EAAK3Q,QACpCJ,EAAEuQ,OAAOD,EAAGE,QACZxQ,EAAEE,MAAMiR,EAAaH,EANb,EAMkCG,EAAaH,EAN/C,GAORhR,EAAE+H,UAAUuI,EAAG5L,GAAI4L,EAAG1L,IAClB+L,EAAaU,aAAc,CAC3B,IAAIC,EAAc,IAAI/X,EAAQgY,WAAWZ,EAAaa,UAAW,EAAG,EAAG,EAAG,GAAI,GAAG,GAAO,GACpFC,EAAa,IAAIlY,EAAQgY,WAAWZ,EAAaa,UAAW,EAAGb,EAAae,UAAYP,EAVxF,EAU4GR,EAAae,UAAYP,EAVrI,EAUyJ,IAAK,GAAG,GAAO,GAC5KT,EAAIiB,QAAU,CAACF,EAAYH,GAC3BlB,EAAMrB,gBAAgB2B,EAAK1Q,EAAG,KAAM,KAAM,MAAM,EAAMzG,EAAQyV,aAAaC,WAG3EmB,EAAMrB,gBAAgBgC,EAAM/Q,EAAG,KAAM,KAAM,MAAM,EAAMzG,EAAQyV,aAAaC,MAGzE,MAAP4B,GACAA,EAAI1U,UACR0U,EAAM,WAKdT,EAAQnX,KAAKqQ,QAEjB,GAAIrQ,KAAK6B,WAAatB,EAAOwJ,UAAUW,MAAO,CAY1C,IAAI+F,EACJ,GAZAzQ,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,cAAe1N,EAAQqG,uBAAuBC,MAAM,GACvI5G,KAAK0E,OAAO6D,mBAAmBvI,KAAKwE,MAAM,EAAO,GACjDxE,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,KACzBnD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EAEpB8T,EAAMjQ,OAAS3G,EAAO0I,QAAQ+E,eAAiBmJ,EAAMhQ,QAAU5G,EAAO0I,QAAQ+E,cAC9EyC,EAAclQ,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQyS,EAAO7W,EAAQqG,uBAAuBC,MAAM,GAAO,OAEhH,CACD,IAAI8J,EAAO,IAAIpQ,EAAQwG,WAAWvG,EAAO0I,QAAQ+E,cAAezN,EAAO0I,QAAQ+E,eAAe,EAAM,IACpGjH,EAAI,IAAIxG,EAAOyG,QACbC,MAAMyJ,EAAKxJ,MAAQiQ,EAAMjQ,MAAOwJ,EAAKvJ,OAASgQ,EAAMhQ,QACtDuJ,EAAKtJ,KAAK+P,EAAOpQ,EAAG,KAAM,KAAM,MAAM,GACtC0J,EAAclQ,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQgM,EAAMpQ,EAAQqG,uBAAuBC,MAAM,GAAO,GAEpH5G,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cAC5B1C,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmBiN,EAAazQ,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAC1JrD,KAAK0E,OAAO2D,WAAWrI,KAAKgE,YAC5B3D,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA+W,EAAA9W,WAAA,kBAAA4C,MAAA1C,KAAA0C,KAAsB6G,OAErB,CACyB,MAAtB7G,KAAKkE,eAA0B3D,EAAO8S,eAAeC,qBACrDzM,EAAIsH,WAAWnO,KAAKkE,cAAelE,KAAKkE,cAAckK,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IAC3E8K,EAAQpX,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,KAAOhK,KAAK6B,UAC/D,IAAI4M,EAAKzO,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,IAAIzJ,EAAOmO,eAAe,EAAG,EAAG,EAAG,IAAO,KAC9F7H,EAAIO,KAAK+P,EAAO,KAAM1I,EAAI2I,GAE1BpX,KAAKqP,WACL8H,EAAMjU,eAGV,GAAIlD,KAAKqP,WAAarP,KAAK6B,WAAatB,EAAOwJ,UAAUW,MACrDrK,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA+W,EAAA9W,WAAA,kBAAA4C,MAAA1C,KAAA0C,KAAsB6G,OAErB,CACyB,MAAtB7G,KAAKkE,eAA0B3D,EAAO8S,eAAeC,qBACrDzM,EAAIsH,WAAWnO,KAAKkE,cAAelE,KAAKkE,cAAckK,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IAC3E8K,EAAQpX,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,KAAOhK,KAAK6B,UAC/D,IAAI8W,EAAM3Y,KAAK6B,WAAatB,EAAOwJ,UAAUC,MAAQ,IAAIzJ,EAAOmO,eAAe,EAAG,EAAG,EAAG,IAAO,KAC/F7H,EAAIO,KAAKpH,KAAKqQ,QAAS,KAAMsI,EAAKvB,MArXnC,CAAAjV,IAAA,QAAAzE,MAAA,WA+XP,IACI2Z,EANJ9W,EAAO0U,uBAAuB2D,cAC9B5Y,KAAKqP,WAAY,EACjBrP,KAAK+W,QAAU,EACf/W,KAAK8W,MAAQ,EACb9W,KAAKsU,UAAUlR,OAAS,GAGxBiU,EAAK,IAAI9W,EAAOsY,eAAe7Y,KAAK0W,iBAAkB,IACnDO,YAAa,EAChBI,EAAGyB,WAAW9Y,KAAK0W,gBAAgBrK,EAAGrM,KAAK0W,gBAAgBpK,EAAGtM,KAAK0W,gBAAgBzP,MAAOjH,KAAK0W,gBAAgByB,OAC/GnY,KAAKsU,UAAUvV,KAAKsY,OApYbnD,EAAA,CACU3T,EAAOC,eAsYhC0T,EAAW1F,GAAK,IAAIlO,EAAQsT,OAC5BrT,EAAO2T,WAAaA,EAxYxB,CAyYG3T,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTwY,EADS,WAaX,SAAAA,IAA4C,IAAhCtN,EAAgCpM,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAA3B,EAAGsM,EAAwBtM,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAnB,EAAG2Z,EAAgB3Z,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAX,EAAG4Z,EAAQ5Z,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAAGlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA+Y,GACxC/Y,KAAKqM,EAAIZ,EACTzL,KAAKsM,EAAIX,EACT3L,KAAKkZ,EAAIF,EACThZ,KAAKmZ,EAAIF,EAjBF,OAAA9b,OAAA+E,EAAA,EAAA/E,CAAA4b,EAAA,EAAA5W,IAAA,YAAAzE,MAAA,SAmBD0b,GACNpZ,KAAKqM,GAAK+M,EAAI/M,EACdrM,KAAKsM,GAAK8M,EAAI9M,EACdtM,KAAKkZ,GAAKE,EAAIF,EACdlZ,KAAKmZ,GAAKC,EAAID,IAvBP,CAAAhX,IAAA,cAAAzE,MAAA,SAyBC0b,GACR,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIC,UAAUF,GACPC,IA5BA,CAAAlX,IAAA,OAAAzE,MAAA,SA8BN0b,GACDpZ,KAAKqM,GAAK+M,EAAI/M,EACdrM,KAAKsM,GAAK8M,EAAI9M,EACdtM,KAAKkZ,GAAKE,EAAIF,EACdlZ,KAAKmZ,GAAKC,EAAID,IAlCP,CAAAhX,IAAA,SAAAzE,MAAA,SAoCJ0b,GACH,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIE,KAAKH,GACFC,IAvCA,CAAAlX,IAAA,aAAAzE,MAAA,SAyCA0b,GACPpZ,KAAKqM,GAAK+M,EAAI/M,EACdrM,KAAKsM,GAAK8M,EAAI9M,EACdtM,KAAKkZ,GAAKE,EAAIF,EACdlZ,KAAKmZ,GAAKC,EAAID,IA7CP,CAAAhX,IAAA,eAAAzE,MAAA,SA+CE0b,GACT,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIG,WAAWJ,GACRC,IAlDA,CAAAlX,IAAA,YAAAzE,MAAA,SAoDD0b,GACNpZ,KAAKqM,GAAK+M,EAAI/M,EACdrM,KAAKsM,GAAK8M,EAAI9M,EACdtM,KAAKkZ,GAAKE,EAAIF,EACdlZ,KAAKmZ,GAAKC,EAAID,IAxDP,CAAAhX,IAAA,cAAAzE,MAAA,SA0DC0b,GACR,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAII,UAAUL,GACPC,IA7DA,CAAAlX,IAAA,WAAAzE,MAAA,SAgEF0b,GACLpZ,KAAKqM,GAAK+M,EACVpZ,KAAKsM,GAAK8M,EACVpZ,KAAKkZ,GAAKE,EACVpZ,KAAKmZ,GAAKC,IApEH,CAAAjX,IAAA,aAAAzE,MAAA,SAsEA0b,GACP,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIK,SAASN,GACNC,IAzEA,CAAAlX,IAAA,MAAAzE,MAAA,SA2EP0b,GACApZ,KAAKqM,GAAK+M,EACVpZ,KAAKsM,GAAK8M,EACVpZ,KAAKkZ,GAAKE,EACVpZ,KAAKmZ,GAAKC,IA/EH,CAAAjX,IAAA,QAAAzE,MAAA,SAiFL0b,GACF,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIM,IAAIP,GACDC,IApFA,CAAAlX,IAAA,YAAAzE,MAAA,SAsFD0b,GACNpZ,KAAKqM,GAAK+M,EACVpZ,KAAKsM,GAAK8M,EACVpZ,KAAKkZ,GAAKE,EACVpZ,KAAKmZ,GAAKC,IA1FH,CAAAjX,IAAA,cAAAzE,MAAA,SA4FC0b,GACR,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIO,UAAUR,GACPC,IA/FA,CAAAlX,IAAA,WAAAzE,MAAA,SAiGF0b,GACLpZ,KAAKqM,GAAK+M,EACVpZ,KAAKsM,GAAK8M,EACVpZ,KAAKkZ,GAAKE,EACVpZ,KAAKmZ,GAAKC,IArGH,CAAAjX,IAAA,aAAAzE,MAAA,SAuGA0b,GACP,IAAIC,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIQ,SAAST,GACNC,IA1GA,CAAAlX,IAAA,MAAAzE,MAAA,SA4GP0b,GACA,OAAOpZ,KAAKqM,EAAI+M,EAAI/M,EAAIrM,KAAKsM,EAAI8M,EAAI9M,EAAItM,KAAKkZ,EAAIE,EAAIF,EAAIlZ,KAAKmZ,EAAIC,EAAID,IA7GhE,CAAAhX,IAAA,WAAAzE,MAAA,SA+GFya,GACLnY,KAAK8Z,YAAY3B,EAAQrM,KAAK0B,GAAK,OAhH5B,CAAArL,IAAA,cAAAzE,MAAA,SAkHCya,GACR,IAAI4B,EAAO/Z,KAAKqM,EAAIP,KAAKyG,IAAI4F,GAASnY,KAAKsM,EAAIR,KAAK2G,IAAI0F,GACxDnY,KAAKsM,EAAItM,KAAKqM,EAAIP,KAAK2G,IAAI0F,GAASnY,KAAKsM,EAAIR,KAAKyG,IAAI4F,GACtDnY,KAAKqM,EAAI0N,IArHF,CAAA5X,IAAA,YAAAzE,MAAA,WAwHP,IAAImO,EAAI7L,KAAKoD,SACTyI,EAAI,IACJ7L,KAAKqM,GAAKR,EACV7L,KAAKsM,GAAKT,EACV7L,KAAKkZ,GAAKrN,EACV7L,KAAKmZ,GAAKtN,KA7HP,CAAA1J,IAAA,SAAAzE,MAAA,WAiIP,OAAOoO,KAAKC,KAAK/L,KAAKqM,EAAIrM,KAAKqM,EAAIrM,KAAKsM,EAAItM,KAAKsM,EAAItM,KAAKkZ,EAAIlZ,KAAKkZ,EAAIlZ,KAAKmZ,EAAInZ,KAAKmZ,KAjI9E,CAAAhX,IAAA,aAAAzE,MAAA,WAoIP,IAAI2b,EAAM,IAAIN,EAAK/Y,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,GAEhD,OADAE,EAAIW,YACGX,MAtIAN,EAAA,GAyIfxY,EAAOwY,KAAOA,EAzIlB,CA0IGxY,IAAWA,EAAS,KAIvB,SAAWA,GAAQ,IACT0Z,EADS,SAAAC,GAEX,SAAAD,EAAYvZ,EAAWyZ,GAAU,IAAAC,EAgDzBjK,EAUJ,IA1D6BhT,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAia,IAC7BG,EAAAjd,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA8c,GAAA3c,KAAA0C,MAAM,EAAMU,KACP2Z,UAAY,IACjBD,EAAKE,SAAWF,EAAKC,UAAY9Z,EAAO0F,cAAcE,YAAc5F,EAAO0F,cAAcC,aACzFkU,EAAKG,UAAY,GACjBH,EAAKI,SAAWJ,EAAKG,UAAYha,EAAO0F,cAAcE,YAAc5F,EAAO0F,cAAcC,aACzFkU,EAAKK,SAAWla,EAAO0F,cAAcE,YACrCiU,EAAKM,UAAYna,EAAO0F,cAAcC,aACtCkU,EAAKO,QAAU,EACfP,EAAKQ,sBAAwB,KAC7BR,EAAKS,SAAW,KAChBT,EAAKU,SAAW,KAChBV,EAAKW,YAAc,EACnBX,EAAKY,YAAc,EACnBZ,EAAKa,WAAY,EACjBb,EAAKc,YAAc,KACnBd,EAAKe,gBAAkB,KACvBf,EAAKgB,OAAS,EACdhB,EAAKiB,WAAa,KAClBjB,EAAK5C,OAAS,GACd4C,EAAKkB,YAAc,IAAMlB,EAAKW,YAC9BX,EAAKmB,YAAc,EACnBnB,EAAKoB,UAAY,IACjBpB,EAAKqB,YAAc,IACnBrB,EAAKsB,eAAiB,GACtBtB,EAAKuB,QAAU,EACfvB,EAAKwB,WAAa,EAClBxB,EAAKyB,OAAS,EACdzB,EAAK0B,cAAgB,KACrB1B,EAAK2B,kBAAoB,KACzB3B,EAAK4B,SAAW,EAChB5B,EAAK6B,aAAe,KACpB7B,EAAK8B,SAAW,GAChB9B,EAAK+B,cAAgB,IAAM/B,EAAKW,YAChCX,EAAKgC,cAAgB,EACrBhC,EAAKiC,YAAc,IACnBjC,EAAKkC,cAAgB,IACrBlC,EAAKmC,cAAgB,KACrBnC,EAAKoC,kBAAoB,KACzBpC,EAAKqC,SAAW,EAChBrC,EAAKsC,aAAe,KACpBtC,EAAKuC,SAAW,GAChBvC,EAAKwC,cAAgB,IAAMxC,EAAKW,YAChCX,EAAKyC,cAAgB,EACrBzC,EAAK0C,YAAc,IACnB1C,EAAK2C,cAAgB,IACrB3C,EAAKzY,YAAa,EAClByY,EAAK4C,MAAQ,IAAIvN,MAEjB2K,EAAKC,UAAY,IACjBD,EAAKE,SAAWxO,KAAKmR,MAAM7C,EAAKC,UAAY9Z,EAAO0F,cAAcE,YAAc5F,EAAO0F,cAAcC,cACpGkU,EAAKG,UAAY,GACjBH,EAAKI,SAAW1O,KAAKmR,MAAM7C,EAAKG,UAAYha,EAAO0F,cAAcE,YAAc5F,EAAO0F,cAAcC,cACpGkU,EAAKK,SAAWla,EAAO0F,cAAcE,YACrCiU,EAAKM,UAAYna,EAAO0F,cAAcC,aACtCkU,EAAK8C,kBAAoB9C,EAAKK,UAAYL,EAAKE,SAAW,GAAK,EAC/DF,EAAK+C,kBAAoB/C,EAAKM,WAAaN,EAAKC,UAAY,GAAK,EACjED,EAAKD,SAAWA,EACXhK,EAAI,EAAGA,EAAIiK,EAAKG,UAAYH,EAAKI,SAAUrK,IAC5CiK,EAAK4C,MAAMje,KAAK,IAAIwB,EAAO6c,aA3DF,OA6D7BhD,EAAKiD,SAASjD,EAAKO,QA7DUP,EAFtB,OAAAjd,OAAAiT,EAAA,EAAAjT,CAAA8c,EAAAC,GAAA/c,OAAA+E,EAAA,EAAA/E,CAAA8c,EAAA,EAAA9X,IAAA,eAAAzE,MAAA,SAkEE0E,EAAOC,EAASC,GACzB,GAAqB,MAAjBtC,KAAK8a,SAAkB,CACvB,IAAIwC,EAAY,IAAIhd,EAAQwG,WAAW9G,KAAKsa,SAAUta,KAAKqa,WAAW,EAAM,GACxEkD,EAAM,IAAIhd,EAAOyG,OACrBuW,EAAItW,MAAMqW,EAAUpW,MAAQ5E,EAAO4E,MAAOoW,EAAUnW,OAAS7E,EAAO6E,QACpEmW,EAAUlW,KAAK9E,EAAQib,EAAK,KAAM,KAAM,MAAM,GAC9Cvd,KAAK8a,SAAWwC,EAAUE,UAAUF,EAAUlP,MAC9C,IAAIvH,EAAM,IAAIvG,EAAQwG,WAAW9G,KAAKsa,SAAUta,KAAKqa,WAAW,EAAM,GAEtExT,EAAI4W,YAAYzd,KAAKqa,UAAY,GAAIra,KAAKqa,UAAY,GAAoB,IAAhBvO,KAAKG,UAAkB,GAAO,GAC7EpF,EAAIuH,KACfvH,EAAIO,KAAKkW,EAAW,KAAM,KAAM,KAAMzW,EAAIuH,MAC1CpO,KAAK6a,SAAWta,EAAOmd,iBAAiBC,yBAAyB9W,GAErExG,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA8c,EAAA7c,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAaoC,EAAOC,EAAS,QAhFtB,CAAAF,IAAA,+BAAAzE,MAAA,SAkFkBkgB,EAAOC,EAAKC,EAAKC,GAC1C,IAAIC,EAAW,IAAIzd,EAAOwY,KAAK6E,EAAMvR,EAAGuR,EAAMtR,EAAGsR,EAAM1E,EAAG0E,EAAMzE,GAChEyE,EAAMlE,SAASmE,GACf,IAAII,EAAYD,EAASE,IAAIjE,EAAWkE,WAAa,EAAML,GAC3DE,EAAStE,SAASoE,GAClBE,EAASrE,IAAIsE,GACbD,EAAStE,SAASqE,GAClB,IAAIK,EAAW,IAAO,EAAIL,GAE1B,OADAC,EAASrE,IAAIyE,GACNJ,IA3FA,CAAA7b,IAAA,YAAAzE,MAAA,WA8FP,OAAuB,EAAhBoO,KAAKG,SAAiB,IA9FtB,CAAA9J,IAAA,QAAAzE,MAAA,WAiGPsC,KAAKqe,QAAU9d,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKma,SAAU7Z,EAAQqG,uBAAuBC,MAAM,GAAO,EAAO,cAjG1H,CAAAzE,IAAA,OAAAzE,MAAA,WAsGP,GADAsC,KAAK4b,YAAc,KACf5b,KAAKse,OAAS,GAAlB,CAKA,IAAInO,EACAmF,EAJJtV,KAAKse,SACLte,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKqe,SACjCre,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBsC,aAAc5J,EAAQsH,qBAAqBE,wBAGpG,IACIyW,EADAC,EAAM,IAAIje,EAAOwY,KAEjB0F,EAAS,IAAIle,EAAOwY,KAIxB,IAHA/Y,KAAK2b,UACD3b,KAAK2b,QAAU,EAAI3b,KAAKgb,cACxBhb,KAAK2b,QAAU,GACdxL,EAAI,EAAGA,EAAInQ,KAAKua,UAAYva,KAAKwa,SAAUrK,IAC5C,GAAIA,EAAInQ,KAAKgb,aAAehb,KAAK2b,QAAjC,CAEA,IAAI+C,EAAK1e,KAAKgd,MAAM7M,GACpB,GAAIuO,EAAGC,SAAU,CACbJ,EAAIhe,EAAOmd,iBAAiBkB,OAAOF,EAAGpS,GAAKtM,KAAK0a,UAAY,IAAM1a,KAAKqa,UAAY,GAAI,EAAGra,KAAKqa,UAAY,GAAKra,KAAKsa,SAAW/Z,EAAOmd,iBAAiBkB,OAAOF,EAAGrS,GAAKrM,KAAKya,SAAW,IAAMza,KAAKsa,SAAW,GAAI,EAAGta,KAAKsa,SAAW,GACpOkE,EAAInS,EAAqC,KAAhCrM,KAAK6a,SAAa,EAAJ0D,GAAS,KAAgB,GAAKve,KAAK+a,YAC1DyD,EAAIlS,EAAyC,KAApCtM,KAAK6a,SAAa,EAAJ0D,EAAQ,GAAK,KAAgB,GAAKve,KAAK+a,YAC9D2D,EAAGrS,GAAKmS,EAAInS,EACZqS,EAAGpS,GAAKkS,EAAIlS,EACZtM,KAAKmD,eAAe,GAAKub,EAAGrS,EAAIrM,KAAKya,SACrCza,KAAKmD,eAAe,GAAKnD,KAAK0a,UAAYgE,EAAGpS,EAC7CtM,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,GAAKub,EAAGzX,MACjCjH,KAAKqD,cAAc,GAAKqb,EAAGG,MAAQH,EAAGC,SACtC3e,KAAKqD,cAAc,GAAKqb,EAAG/P,EAAI3O,KAAKqD,cAAc,GAClDrD,KAAKqD,cAAc,GAAKqb,EAAGI,EAAI9e,KAAKqD,cAAc,GAClDrD,KAAKqD,cAAc,GAAKqb,EAAG3Q,EAAI/N,KAAKqD,cAAc,GAClD,IAAI0b,EAAkC,IAAzB/e,KAAKmD,eAAe,GAC7BnD,KAAKqD,cAAc,GAAK,IACpBqb,EAAGrS,EAAI0S,GACPL,EAAGpS,EAAIyS,GACPL,EAAGrS,EAAI9L,EAAO0F,cAAcE,YAAc4Y,GAC1CL,EAAGpS,EAAI/L,EAAO0F,cAAcC,aAAe6Y,GAC3C/e,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,YAG/Bma,EAAGC,SAAW,GAGlBD,EAAGG,MAAQ,IACXH,EAAGG,OAAS7e,KAAKqb,WACbqD,EAAGG,MAAQ,IACXH,EAAGG,MAAQ,IAIvB,GADAH,EAAGM,OACCN,EAAGM,KAAO,EAAG,CACbN,EAAGrS,EAAIqS,EAAGrI,KAAOrW,KAAKif,YAAcjf,KAAKkd,kBAA6C,GAAzBld,KAAKkd,kBAClEwB,EAAGpS,EAAIoS,EAAGpI,KAAOtW,KAAKif,YAAcjf,KAAKmd,kBAA6C,GAAzBnd,KAAKmd,kBAClEuB,EAAGM,KAAOlT,KAAKG,SAAWjM,KAAKsb,YAC/BoD,EAAGzX,MAAQ6E,KAAKG,SAAWjM,KAAKwX,OAAS,GACzC+G,EAAIhe,EAAOmd,iBAAiBkB,OAAOF,EAAGpS,GAAKtM,KAAK0a,UAAY,IAAM1a,KAAKqa,UAAY,GAAI,EAAGra,KAAKqa,UAAY,GAAKra,KAAKsa,SAAW/Z,EAAOmd,iBAAiBkB,OAAOF,EAAGrS,GAAKrM,KAAKya,SAAW,IAAMza,KAAKsa,SAAW,GAAI,EAAGta,KAAKsa,SAAW,GACpOmE,EAAOpS,EAAIrM,KAAK8a,SAAa,EAAJyD,EAAQ,GAAK,IACtCE,EAAOnS,EAAItM,KAAK8a,SAAa,EAAJyD,EAAQ,GAAK,IACtCE,EAAOvF,EAAIlZ,KAAK8a,SAAa,EAAJyD,EAAQ,GAAK,KACtCjJ,EAAMtV,KAAKkf,6BAA6BT,EAAQze,KAAKub,YAAavb,KAAKib,UAAY,GAAMjb,KAAKyb,YAAazb,KAAKwb,YAC5GnP,EAAI9L,EAAOmd,iBAAiByB,OAAO7J,EAAIjJ,EAAG,EAAG,GACjDiJ,EAAIhJ,EAAI/L,EAAOmd,iBAAiByB,OAAO7J,EAAIhJ,EAAG,EAAG,GACjDgJ,EAAI4D,EAAI3Y,EAAOmd,iBAAiByB,OAAO7J,EAAI4D,EAAG,EAAG,GACjD,IAAIkG,EAAKpf,KAAKif,YAAcjf,KAAKmb,gBACjCuD,EAAG/P,EAAI2G,EAAIjJ,EAAIrM,KAAKif,YAAcjf,KAAKkb,YAAckE,EACrDV,EAAGI,EAAIxJ,EAAIhJ,EAAItM,KAAKif,YAAcjf,KAAKkb,YAAckE,EACrDV,EAAG3Q,EAAIuH,EAAI4D,EAAIlZ,KAAKif,YAAcjf,KAAKkb,YAAckE,EACrDV,EAAGC,SAAW3e,KAAK8a,SAAa,EAAJyD,GAAS,IACrCG,EAAGG,MAAQ7e,KAAKob,QAGxBpb,KAAKyB,OAAQ,KA/KN,CAAAU,IAAA,aAAAzE,MAAA,SAiLA+N,EAAIE,GACX3L,KAAKse,QAAU,EACf,IAAIe,GAAK,IAAI3gB,MAAQ0M,UAErBpL,KAAK4b,YAAc9P,KAAK8B,IAAI9B,KAAKC,KAAKN,EAAKA,EAAKE,EAAKA,IAAO0T,EAAIrf,KAAK6b,OAAS,KAAM,IACpF7b,KAAK6b,MAAQwD,EACb,IAAIC,GAAStf,KAAK4b,WAAa,GAAK,EAChC0D,EAAQ,IACRA,EAAQ,GACRA,EAAQ,IACRA,EAAQ,GACZtf,KAAKkb,YAAclb,KAAK8b,eAAiB9b,KAAKuc,cAAgBvc,KAAK8b,eAAiBwD,EACpFtf,KAAKmb,gBAAkBnb,KAAK+b,mBAAqB/b,KAAKwc,kBAAoBxc,KAAK+b,mBAAqBuD,EACpGtf,KAAKob,OAASpb,KAAKgc,SACnBhc,KAAKqb,WAAarb,KAAKic,aACvBjc,KAAKwX,OAASxX,KAAKkc,UAAYlc,KAAK2c,SAAW3c,KAAKkc,UAAYoD,EAChEtf,KAAKsb,YAActb,KAAKmc,eAAiBnc,KAAK4c,cAAgB5c,KAAKmc,eAAiBmD,EACpFtf,KAAKub,YAAcvb,KAAKoc,eAAiBpc,KAAK6c,cAAgB7c,KAAKoc,eAAiBkD,EACpFtf,KAAKwb,UAAYxb,KAAKqc,aAAerc,KAAK8c,YAAc9c,KAAKqc,aAAeiD,EAC5Etf,KAAKyb,YAAczb,KAAKsc,eAAiBtc,KAAK+c,cAAgB/c,KAAKsc,eAAiBgD,GAC/Etf,KAAKuf,kBAAoBvf,KAAKwf,SAAW,KAC1Cxf,KAAKuf,kBAAmB,EACxBvf,KAAK4a,uBAAsB,IAE/B5a,KAAKwf,WACLxf,KAAKyB,OAAQ,IA1MN,CAAAU,IAAA,WAAAzE,MAAA,SA4MF+hB,GAEL,OADAzf,KAAK2a,OAAS8E,EACNzf,KAAK2a,QACT,KAAK,EACD3a,KAAK8b,cAAgB,KACrB9b,KAAK+b,kBAAoB,GACzB/b,KAAKgc,SAAW,EAChBhc,KAAKic,aAAe,KACpBjc,KAAKkc,SAAW,GAChBlc,KAAKmc,cAAgB,IAAMnc,KAAK+a,YAChC/a,KAAKoc,cAAgB,EACrBpc,KAAKqc,YAAc,IACnBrc,KAAKsc,cAAgB,IACrBtc,KAAKuc,cAAgB,GACrBvc,KAAKwc,kBAAoB,GACzBxc,KAAKyc,SAAW,EAChBzc,KAAK0c,aAAe,EACpB1c,KAAK2c,SAAW,IAChB3c,KAAK4c,cAAgB,IAAM5c,KAAK+a,YAChC/a,KAAK6c,cAAgB,EACrB7c,KAAK8c,YAAc,IACnB9c,KAAK+c,cAAgB,IACrB,MACJ,KAAK,EACD/c,KAAK8b,cAAgB,GACrB9b,KAAK+b,kBAAoB,MACzB/b,KAAKgc,SAAW,EAChBhc,KAAKic,aAAe,EACpBjc,KAAKkc,SAAW,GAChBlc,KAAKmc,cAAgB,EAAInc,KAAK+a,YAC9B/a,KAAKoc,cAAgB,EACrBpc,KAAKqc,YAAc,IACnBrc,KAAKsc,cAAgB,KACrBtc,KAAKuc,cAAgB,GACrBvc,KAAKwc,kBAAoB,KACzBxc,KAAKyc,SAAW,EAChBzc,KAAK0c,aAAe,EACpB1c,KAAK2c,SAAW,IAChB3c,KAAK4c,cAAgB,EAAI5c,KAAK+a,YAC9B/a,KAAK6c,cAAgB,EACrB7c,KAAK8c,YAAc,IACnB9c,KAAK+c,cAAgB,KACrB,MACJ,QACI/c,KAAK8b,cAAgB,GACrB9b,KAAK+b,kBAAoB,GACzB/b,KAAKgc,SAAW,EAChBhc,KAAKic,aAAe,IACpBjc,KAAKkc,SAAW,EAChBlc,KAAKmc,cAAgB,GAAKnc,KAAK+a,YAC/B/a,KAAKoc,cAAgB,EACrBpc,KAAKqc,YAAc,MACnBrc,KAAKsc,cAAgB,KACrBtc,KAAKuc,cAAgB,GACrBvc,KAAKwc,kBAAoB,GACzBxc,KAAKyc,SAAW,EAChBzc,KAAK0c,aAAe,IACpB1c,KAAK2c,SAAW,EAChB3c,KAAK4c,cAAgB,GAAK5c,KAAK+a,YAC/B/a,KAAK6c,cAAgB,EACrB7c,KAAK8c,YAAc,MACnB9c,KAAK+c,cAAgB,KAG7B/c,KAAKwI,UA5QE,CAAArG,IAAA,QAAAzE,MAAA,WA+QP,IAAI4O,EACAD,EAOJ,IANArM,KAAKuf,kBAAmB,EACU,MAA9Bvf,KAAK4a,uBACL5a,KAAK4a,uBAAsB,GAC/B5a,KAAKwf,SAAW,EAChBxf,KAAKse,OAAS,EACdte,KAAK4b,WAAa,EACbtP,EAAI,EAAGA,EAAItM,KAAKua,UAAWjO,IAC5B,IAAKD,EAAI,EAAGA,EAAIrM,KAAKwa,SAAUnO,IAC3BrM,KAAKgd,MAAMlR,KAAKmR,MAAM3Q,EAAItM,KAAKwa,SAAWnO,IAAIgK,KAAOrW,KAAKya,SAAWpO,EAAKrM,KAAKwa,SAAaxa,KAAKya,SAAWza,KAAKwa,SAAY,GAC7Hxa,KAAKgd,MAAMlR,KAAKmR,MAAM3Q,EAAItM,KAAKwa,SAAWnO,IAAIiK,KAAOtW,KAAK0a,UAAYpO,EAAKtM,KAAKua,UAAcva,KAAK0a,UAAY1a,KAAKua,UAAa,GACjIva,KAAKgd,MAAMlR,KAAKmR,MAAM3Q,EAAItM,KAAKwa,SAAWnO,IAAI2S,KAAO,IAAMlT,KAAKG,SAChEjM,KAAKgd,MAAMlR,KAAKmR,MAAM3Q,EAAItM,KAAKwa,SAAWnO,IAAIwS,MAAQ,EACtD7e,KAAKgd,MAAMlR,KAAKmR,MAAM3Q,EAAItM,KAAKwa,SAAWnO,IAAIsS,SAAW,EAG7D3e,KAAK0E,QACLrE,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA8c,EAAA7c,WAAA,QAAA4C,MAAA1C,KAAA0C,UAjSGia,EAAA,CACU1Z,EAAOC,eAmShCyZ,EAAWkE,SAAW,IAAI5d,EAAOwY,KAAK,MAAQ,MAAQ,OACtDkB,EAAWyF,SAAW,IAAInf,EAAOwY,KAAK,GAAK,GAAK,IAChDxY,EAAO0Z,WAAaA,EAtSxB,CAuSG1Z,IAAWA,EAAS,KAGvB,SAAWA,GAAQ,IACTof,EADS,SAAAC,GAEX,SAAAD,EAAYjf,GAAW,IAAAmf,EAAA1iB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA2f,IACnBE,EAAA1iB,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAAwiB,GAAAriB,KAAA0C,MAAM,EAAMU,KACPof,aAAe,GACpBD,EAAKE,UAAY,IACjBF,EAAKG,UAAY,GACjBH,EAAKI,YAAc,EACnBJ,EAAKK,cAAgB,EACrBL,EAAKM,WAAa,EAAMN,EAAKK,cAE7BL,EAAK9E,YAAc,EACnB8E,EAAK7E,YAAc,EACnB6E,EAAKlF,OAAS,EACdkF,EAAKjF,sBAAwB,KAC7BiF,EAAKjE,WAAa,EAClBiE,EAAKhE,OAAS,EACdgE,EAAKO,cAAgB,EACrB9f,EAAQ0B,UAAUC,YAAc,EAChC4d,EAAK7C,MAAQ,IAAIvN,MACjB,IAAK,IAAIU,EAAI,EAAGA,EAAI0P,EAAKG,UAAW7P,IAChC0P,EAAK7C,MAAMje,KAAK,IAAIwB,EAAO8f,kBAnBZ,OAoBnBR,EAAKS,KAAO,IAAIhgB,EAAQigB,MACxBV,EAAKW,QAAU,IAAIlgB,EAAQmgB,UAC3BZ,EAAKa,aAAe,IAAIpgB,EAAQsT,OAChCiM,EAAKW,QAAQG,SAASd,EAAKa,cAC3Bb,EAAKW,QAAQG,SAASd,EAAKS,MAC3BT,EAAKa,aAAaJ,KAAOT,EAAKS,KAC9BT,EAAKe,oBAAsB,IAAItgB,EAAQugB,iBAAiB,EAAG,EAAG,EAAG,GAAKhB,EAAKC,aAAeD,EAAKM,WAAYN,EAAKC,aAAeD,EAAKM,WAAY,EAAK,GACrJN,EAAKiB,gBAAkB,IAAIxgB,EAAQugB,iBAAiB,EAAG,EAAG,EAAG,GAAKhB,EAAKC,aAAcD,EAAKC,aAAc,EAAK,GAC7GD,EAAKkB,sBAAwB,IAAIzgB,EAAQugB,iBAAiB,EAAG,EAAG,EAAG,EAAGhB,EAAKC,aAAeD,EAAKM,WAAa,GAAIN,EAAKC,aAAeD,EAAKM,WAAa,GAAI,EAAK,GAC/JN,EAAKmB,kBAAoB,IAAI1gB,EAAQugB,iBAAiB,EAAG,EAAG,EAAG,EAAuB,GAApBhB,EAAKC,aAAuC,GAApBD,EAAKC,aAAmB,EAAK,GACvHD,EAAKoB,aAAe,IAAI3gB,EAAQ4gB,YAChCrB,EAAKoB,aAAaE,WAAa,EAC/BtB,EAAKoB,aAAaG,SAAW,EAC7BvB,EAAKoB,aAAaI,WAAa,EAC/BxB,EAAKyB,UAAY,IAAIhhB,EAAQihB,kBAC7B1B,EAAK2B,cAAgBjhB,EAAOkU,aAAaC,oBAAsBnU,EAAOoU,aAAa8M,eAnChE5B,EAFZ,OAAA1iB,OAAAiT,EAAA,EAAAjT,CAAAwiB,EAAAC,GAAAziB,OAAA+E,EAAA,EAAA/E,CAAAwiB,EAAA,EAAAxd,IAAA,eAAAzE,MAAA,SAwCE0E,EAAOC,EAASC,GAIzB,IAAIib,EAHJvd,KAAKqQ,QAAU/N,EACftC,KAAK0hB,QAAU1hB,KAAKqQ,QAAQ4F,mBAAmB,WAAY,GAAG,GAC9DjW,KAAK2hB,SAAW,IAAIrhB,EAAQwG,WAAW9G,KAAKqQ,QAAQnJ,MAAQlH,KAAKmgB,WAAYngB,KAAKqQ,QAAQlJ,OAASnH,KAAKmgB,YAAY,EAAM,IAE1H5C,EAAM,IAAIhd,EAAOyG,QACbC,MAAMjH,KAAK2hB,SAASza,MAAQlH,KAAKqQ,QAAQnJ,MAAOlH,KAAK2hB,SAASxa,OAASnH,KAAKqQ,QAAQlJ,QACxFnH,KAAK2hB,SAASva,KAAKpH,KAAKqQ,QAASkN,EAAK,KAAM,KAAM,MAAM,GACxDvd,KAAK0gB,aAAa3M,WAAa/T,KAAK2hB,SACpC3hB,KAAK0gB,aAAazI,WAAY,EAC9B5X,EAAAlD,OAAAI,EAAA,EAAAJ,CAAAwiB,EAAAviB,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAaoC,EAAOC,EAAS,QAlDtB,CAAAF,IAAA,YAAAzE,MAAA,WAqDP,OAAuB,EAAhBoO,KAAKG,SAAiB,IArDtB,CAAA9J,IAAA,QAAAzE,MAAA,WAwDP,IAAIyS,EAGJ,IAFAnQ,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,GAC3IuJ,EAAI,EAAGA,EAAInQ,KAAKggB,UAAW7P,IAC5BnQ,KAAKgd,MAAM7M,GAAGyR,OAAO5hB,KAAK0E,QAC9B1E,KAAK6hB,oBA7DE,CAAA1f,IAAA,OAAAzE,MAAA,WAoEP,IAAIyS,EACJ,IALAnQ,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cAC5BjD,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKmE,OAAQ,EAAG7D,EAAQmH,4BAA4BC,SACrF1H,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuD,YAAY,GAE9F4M,EAAInQ,KAAKigB,YAAa9P,EAAInQ,KAAKgd,MAAM5Z,OAAQ+M,IAC9CnQ,KAAKgd,MAAM7M,GAAG/I,KAAKpH,KAAKuE,WAE5B,IAAK4L,EAAI,EAAGA,EAAInQ,KAAKigB,YAAa9P,IAC9BnQ,KAAKgd,MAAM7M,GAAG/I,KAAKpH,KAAKuE,WAE5BvE,KAAK0E,OAAO2D,WAAWrI,KAAKgE,YAC5BhE,KAAK4b,YAAc,KA5EZ,CAAAzZ,IAAA,kBAAAzE,MAAA,WA+EP,IAAIyS,EACJnQ,KAAK0gB,aAAa3M,WAAa/T,KAAK2hB,SACpC,IAAIpE,EAAM,IAAIhd,EAAOyG,OACjBoH,EAAO,IAAIQ,EACX3H,EAAQjH,KAAKmgB,WAEjB,IAAKhQ,EAAI,EAAGA,EAAInQ,KAAKggB,UAAW7P,IAAK,CACjC,IAAIuO,EAAK1e,KAAKgd,MAAM7M,GACpB,GAAKuO,EAAGoD,WAAR,CAEA1T,EAAK/B,EAAKqS,EAAGqD,MAAuB,GAAfrD,EAAGsD,UACxB5T,EAAK9B,EAAKoS,EAAGuD,MAAwB,GAAhBvD,EAAGwD,WACxB9T,EAAKlH,MAAQwX,EAAGsD,UAChB5T,EAAKjH,OAASuX,EAAGwD,WACjBliB,KAAKmiB,WAAW/T,EAAMpO,KAAK2a,OAAQ1T,GACnC,IAAIyJ,EAAO,IAAIpQ,EAAQwG,WAVZ,EAUuB4X,EAAG0D,QAV1B,EAU8C1D,EAAG0D,SAAoB,EAAM,GACtF7E,EAAI/T,WACJ+T,EAAIzO,UAZO,GAYI4P,EAAG2D,GAZP,GAYuB3D,EAAG4D,IACrCtiB,KAAKihB,aAAasB,IAAM7D,EAAG6D,IAC3BviB,KAAKshB,UAAUkB,OAASxiB,KAAKihB,aAAawB,0BAC1CziB,KAAKwgB,QAAQ9H,QAAU,CAAC1Y,KAAKshB,UAAWthB,KAAK4gB,oBAAqB5gB,KAAK+gB,uBACvErQ,EAAKoF,gBAAgB9V,KAAK0gB,aAAa3M,WAAWxM,OAAQgW,EAAK,KAAM,KAAM,MAAM,EAAMjd,EAAQyV,aAAaC,MAC5G0I,EAAGgE,cAAchS,GACjBA,EAAKxN,cAtGF,CAAAf,IAAA,WAAAzE,MAAA,SAyGF+hB,GACLzf,KAAK2a,OAAS8E,EACdzf,KAAKwI,UA3GE,CAAArG,IAAA,aAAAzE,MAAA,SA6GA0Q,EAAMqR,EAAOxY,GAGpB,GAFAjH,KAAKsgB,KAAKqC,SAASna,QACnBxI,KAAKsgB,KAAKqC,SAASC,UAAU,SAAU,GAC1B,GAATnD,EAEAzf,KAAKsgB,KAAKqC,SAASE,cAAc7iB,KAAK8f,aAAe7Y,EAAOjH,KAAK8f,aAAe7Y,GAAQmH,EAAKlH,MAA4B,EAApBlH,KAAK8f,cAAoB7Y,GAAQmH,EAAKjH,OAA6B,EAApBnH,KAAK8f,cAAoB7Y,GAAQmH,EAAKlH,MAA4B,EAApBlH,KAAK8f,cAAoB7Y,GAAQmH,EAAKjH,OAA6B,EAApBnH,KAAK8f,cAAoB7Y,QAEzQ,GAAa,GAATwY,EAAY,CAGjB,IADA,IAAIqD,EAAM,IAAIrT,MACLU,EAAI,EAAGA,EAAI,EAAGA,IACnB2S,EAAI/jB,KAAKiB,KAAK8f,aAAe7Y,EAAQ6E,KAAKG,UAAYmC,EAAKlH,MAA4B,EAApBlH,KAAK8f,cAAoB7Y,GAC5F6b,EAAI/jB,KAAKiB,KAAK8f,aAAe7Y,EAAQ6E,KAAKG,UAAYmC,EAAKjH,OAA6B,EAApBnH,KAAK8f,cAAoB7Y,GAEjGjH,KAAKsgB,KAAKqC,SAASla,cAAcqa,QAIjC9iB,KAAKsgB,KAAKqC,SAASI,SAAS/iB,KAAK8f,aAAe7Y,EAAOjH,KAAK8f,aAAe7Y,GAAQmH,EAAKlH,MAA4B,EAApBlH,KAAK8f,cAAoB7Y,GAAQmH,EAAKjH,OAA6B,EAApBnH,KAAK8f,cAAoB7Y,GAE5KjH,KAAKsgB,KAAKqC,SAASK,UACnBhjB,KAAK0gB,aAAarU,GAAK+B,EAAK/B,EAAIpF,EAChCjH,KAAK0gB,aAAapU,GAAK8B,EAAK9B,EAAIrF,IAnIzB,CAAA9E,IAAA,aAAAzE,MAAA,SAqIA+N,EAAIE,GACX,IAAI0T,GAAK,IAAI3gB,MAAQ0M,UACrBpL,KAAK4b,YAAc9P,KAAK8B,IAAI9B,KAAKC,KAAKN,EAAKA,EAAKE,EAAKA,IAAO0T,EAAIrf,KAAK6b,OAAS,IAAM,GACpF7b,KAAK6b,MAAQwD,EAEb,IAAIC,EAAQtf,KAAK4b,WAMjB,GALI0D,EAAQ,IACRA,EAAQ,GACRA,EAAQ,IACRA,EAAQ,GACZtf,KAAKogB,eAAiBd,EAClBtf,KAAKogB,cAAgB,OAEpB,CAID,GADApgB,KAAKse,QAAU,EACXte,KAAKse,OAAS,EACd,OACJte,KAAKse,OAAS,EACd,IAAIlQ,EAAO,KACPnH,EAAwB,GAAhB6E,KAAKG,SAAiB,GAAM,GAAe,EAAIqT,GACvD2D,EAA8B,KAAvBnX,KAAKG,SAAW,IACvBiX,EAAe3iB,EAAO0F,cAAcE,YACpCgd,EAAgB5iB,EAAO0F,cAAcC,aAIrCkd,EAHI,KAGW,KAAe,EAAI9D,GAClC+D,EAHI,KAGY,KAAW,EAAI/D,GAC/BgE,EAAaF,EAAWA,EACxBG,EAAaF,EAAYA,EAEzBG,GADWxjB,KAAK8f,aAAmB9f,KAAK+f,UAC9BwD,GAAcD,EAAaC,GAAczX,KAAKG,UACxDwX,EAAW3X,KAAKC,KAAKyX,GACzB,GAAY,MAARpV,EAAc,CACdA,EAAO,IAAIQ,EACX,IACI8U,EAAO,IAAI9U,EACX+U,EAAc,IACdA,EAAc,EACC,GAAf3jB,KAAK2a,QAAe3a,KAAKwhB,gBACzBmC,EAAc,GAClBD,EAAKrX,EAAIP,KAAK+B,IAAI,EAAG7N,KAAK0hB,QAAQrV,EAAIsX,GACtCD,EAAKpX,EAAIR,KAAK+B,IAAI,EAAG7N,KAAK0hB,QAAQpV,EAAIqX,GACtCD,EAAKxc,MAAQ4E,KAAK8B,IAAIsV,EAAeQ,EAAKrX,EAAGrM,KAAK0hB,QAAQxa,MAAsB,EAAdyc,GAClED,EAAKvc,OAAS2E,KAAK8B,IAAIuV,EAAgBO,EAAKpX,EAAGtM,KAAK0hB,QAAQva,OAAuB,EAAdwc,GAClD,GAAf3jB,KAAK2a,QACLvM,EAAKlH,MAAQkH,EAAKjH,OAAS2E,KAAKC,KAAKyX,GACrCpV,EAAK/B,EAAIP,KAAKG,UAAYyX,EAAKxc,MAAQkH,EAAKlH,OAASwc,EAAKrX,EAC1D+B,EAAK9B,EAAIR,KAAKG,UAAYyX,EAAKvc,OAASiH,EAAKjH,QAAUuc,EAAKpX,IAIxDR,KAAKG,SAAW,IAChBmC,EAAKlH,MAAQ4E,KAAK8B,IAlBV,KAkBuB9B,KAAK+B,IAAI4V,GAAY,GAAM3X,KAAKG,YAC/DmC,EAAKjH,OAAS2E,KAAK8B,IAnBX,KAmBwB4V,EAAUpV,EAAKlH,SAG/CkH,EAAKjH,OAAS2E,KAAK8B,IAtBX,KAsBwB9B,KAAK+B,IAAI4V,GAAY,GAAM3X,KAAKG,YAChEmC,EAAKlH,MAAQ4E,KAAK8B,IAvBV,KAuBuB4V,EAAUpV,EAAKjH,SAElDiH,EAAK/B,EAAIP,KAAKG,UAAYyX,EAAKxc,MAAQkH,EAAKlH,OAASwc,EAAKrX,EAC1D+B,EAAK9B,EAAIR,KAAKG,UAAYyX,EAAKvc,OAASiH,EAAKjH,QAAUuc,EAAKpX,GAGpE8B,EAAKlH,OAAS,EACdkH,EAAKjH,QAAU,EACfiH,EAAK/B,EAAIP,KAAKG,SAAWyX,EAAKxc,MAC9BkH,EAAK9B,EAAIR,KAAKG,SAAWyX,EAAKvc,OAC9BnH,KAAKmiB,WAAW/T,EAAMpO,KAAK2a,OAAQ3a,KAAKmgB,YACxC,IAAIyD,EAAO,IAAItjB,EAAQwG,WAAWsH,EAAKlH,MAAQlH,KAAKmgB,WAAY/R,EAAKjH,OAASnH,KAAKmgB,YAAY,EAAM,GACjGzB,EAAK1e,KAAKgd,MAAMhd,KAAKigB,aACzBvB,EAAG6D,IAAM,IAAMzW,KAAKG,SAAW,IAC/BjM,KAAKihB,aAAasB,IAAM7D,EAAG6D,IAC3BviB,KAAKshB,UAAUkB,OAASxiB,KAAKihB,aAAawB,0BAC1CziB,KAAKwgB,QAAQ9H,QAAU,CAAC1Y,KAAKshB,UAAWthB,KAAK4gB,oBAAqB5gB,KAAK+gB,uBAEvE,IAAI8C,EAAS7jB,KAAK0gB,aAAazM,YAE3BtF,EAAI,IAAIC,EAAUR,EAAK/B,EAAIrM,KAAKmgB,WAAY/R,EAAK9B,EAAItM,KAAKmgB,WAAY/R,EAAKlH,MAAQlH,KAAKmgB,WAAY/R,EAAKjH,OAASnH,KAAKmgB,YACvH5Y,EAASkM,SAASC,cAAc,UAIpC,GAHAnM,EAAOL,MAAQ2c,EAAOtc,OAAOL,MAC7BK,EAAOJ,OAAS0c,EAAOtc,OAAOJ,OAC9Byc,EAAK9N,gBAAgB+N,EAAOtc,OAAQ,KAAM,KAAM,KAAMoH,GAAG,EAAMrO,EAAQyV,aAAaC,MACjE,GAAfhW,KAAK2a,OAAa,CAClB,IAAImJ,EAAMF,EAAKG,QACfD,EAAIE,yBAA2B,iBAC/BF,EAAIG,YACJH,EAAII,IAAIN,EAAK1c,MAAQ,EAAG0c,EAAKzc,OAAS,EAAG2E,KAAK8B,IAAIgW,EAAK1c,MAAQ,EAAG0c,EAAKzc,OAAS,GAAI,EAAG,EAAI2E,KAAK0B,IAChGsW,EAAIK,UAAY,qBAChBL,EAAIM,OAGJN,EAAIO,YAGR,IAAIC,EAAKxY,KAAK+B,IAAI/B,KAAKyB,IAAiB,GAAba,EAAKlH,MAAaD,EAAQ6E,KAAKyG,IAAI0Q,GAAqB,GAAd7U,EAAKjH,OAAcF,EAAQ6E,KAAK2G,IAAIwQ,IAAOnX,KAAKyB,IAAiB,GAAba,EAAKlH,MAAaD,EAAQ6E,KAAKyG,IAAI0Q,GAAqB,GAAd7U,EAAKjH,OAAcF,EAAQ6E,KAAK2G,IAAIwQ,KACnMsB,EAAKzY,KAAK+B,IAAI/B,KAAKyB,IAAiB,GAAba,EAAKlH,MAAaD,EAAQ6E,KAAK2G,IAAIwQ,GAAqB,GAAd7U,EAAKjH,OAAcF,EAAQ6E,KAAKyG,IAAI0Q,IAAOnX,KAAKyB,IAAiB,GAAba,EAAKlH,MAAaD,EAAQ6E,KAAK2G,IAAIwQ,GAAqB,GAAd7U,EAAKjH,OAAcF,EAAQ6E,KAAKyG,IAAI0Q,KACnMuB,EAAKpW,EAAK/B,EAAiB,GAAb+B,EAAKlH,MACnBud,EAAKrW,EAAK9B,EAAkB,GAAd8B,EAAKjH,OACnBqd,EAAKF,EAAK,IACVrd,GAASud,EAAKF,GACdE,EAAKF,EAAKpB,IACVjc,IAAUic,EAAesB,GAAMF,GAC/BG,EAAKF,EAAK,IACVtd,GAASwd,EAAKF,GACdE,EAAKF,EAAKpB,IACVlc,IAAUkc,EAAgBsB,GAAMF,GACpC7F,EAAGjZ,MAAMme,EAAMY,EAAIC,EAAIrW,EAAKlH,MAAOkH,EAAKjH,OAAQ8b,EAAKhc,EAAQjH,KAAKkgB,eAClE0D,EAAK1gB,UAETlD,KAAKigB,cACDjgB,KAAKigB,YAAc,EAAIjgB,KAAKggB,YAC5BhgB,KAAKigB,YAAc,IACvBvB,EAAK1e,KAAKgd,MAAMhd,KAAKigB,cAClByE,mBAAmB,EAAG,IACpB1kB,KAAKuf,kBAAoBvf,KAAKigB,YAAc,IAC7CjgB,KAAKuf,kBAAmB,EACxBvf,KAAK4a,uBAAsB,MA5PxB,CAAAzY,IAAA,QAAAzE,MAAA,WAgQPsC,KAAKuf,kBAAmB,EACxBvf,KAAK4a,uBAAsB,GAC3B5a,KAAK2kB,gBAAkB,EACvB3kB,KAAKse,OAAS,EACdte,KAAKigB,YAAc,EACnBjgB,KAAK4kB,UAAY,EACjB5kB,KAAK6kB,WAAa,EAClB7kB,KAAK4b,WAAa,EAClB5b,KAAKogB,cAAgB,IACrB,IAAK,IAAIjQ,EAAI,EAAGA,EAAInQ,KAAKggB,UAAW7P,IAChCnQ,KAAKgd,MAAM7M,GAAGjN,UAClB7C,EAAAlD,OAAAI,EAAA,EAAAJ,CAAAwiB,EAAAviB,WAAA,QAAA4C,MAAA1C,KAAA0C,UA3QO2f,EAAA,CACUpf,EAAOC,eA6QhCD,EAAOof,WAAaA,EA9QxB,CA+QGpf,IAAWA,EAAS,KAGvB,SAAWA,GAAQ,IACTukB,EADS,SAAAC,GAEX,SAAAD,EAAYE,EAAetkB,GAAW,IAAAukB,EAyBlC,IAzBkC9nB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA8kB,IAClCG,EAAA9nB,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA2nB,GAAAxnB,KAAA0C,MAAM,EAAMU,KACPwkB,OAAS,EACdD,EAAKE,SAAW,IAAM,IAAM,IAC5BF,EAAKG,cAAgB,GACrBH,EAAKI,cAAgB,GACrBJ,EAAKK,gBAAkB,GACvBL,EAAKM,QAAU,EACfN,EAAKO,WAAa,EAClBP,EAAKD,cAAgBA,EACrBC,EAAKQ,aAAe,EACpBR,EAAKS,UAAY5Z,KAAKmR,MAAM,IAC5BgI,EAAKU,WAAa7Z,KAAKmR,MAAM,IAC7BgI,EAAKW,iBAAmB,KACpBX,EAAKrkB,WACLqkB,EAAKS,WAAa,IAClBT,EAAKU,YAAc,IACnBV,EAAKW,kBAAoB,EAAI,GAGjCX,EAAKY,SAAyF,IAA7EtlB,EAAO0F,cAAcE,YAAc8e,EAAKW,iBAAmBX,EAAKS,WACjFT,EAAKa,SAA2F,IAA/EvlB,EAAO0F,cAAcC,aAAe+e,EAAKW,iBAAmBX,EAAKU,YAClFV,EAAKc,UAAY,IAAIzlB,EAAQ0lB,UAC7Bf,EAAKc,UAAU3iB,OAAS6hB,EAAKS,UAAYT,EAAKU,WAC9CV,EAAKc,UAAUE,SAAW,EACnBhB,EAAKc,UAAUE,SAAWhB,EAAKc,UAAU3iB,QAC5C6hB,EAAKc,UAAUG,UAAU,GA1BK,OA2BlCjB,EAAKkB,yBAA0B,EA3BGlB,EAF3B,OAAA9nB,OAAAiT,EAAA,EAAAjT,CAAA2nB,EAAAC,GAAA5nB,OAAA+E,EAAA,EAAA/E,CAAA2nB,EAAA,EAAA3iB,IAAA,2BAAAzE,MAAA,SAiCc0oB,EAAMlf,EAAOC,GAClC,IAAIkf,EAAWnf,EACXof,EAAYnf,EAEZof,EAAiB,IAAIhmB,EAAOyG,OACVof,EAAKlf,MAC3Bqf,EAAe/c,WAEf+c,EAAetf,MAAMof,EAAYD,EAAKlf,MAAQmf,EAAYD,EAAKlf,OAI/D,IAFA,IACIsf,EAgBIna,EAAGC,EAAG6D,EACNsW,EACS3nB,EAnBb+H,EAAMuf,EAEHC,EAAW,GAAKC,EAAY,IAC/BE,EAAW,IAAIlmB,EAAQwG,WAAWuf,EAAUC,GAAW,EAAM,IACpDlf,KAAKP,EAAK0f,EAAgB,KAAM,KAAM,MAAM,GAErDA,EAAetf,MAAM,GAAK,IAC1Byf,EACAL,IAAa,EACbC,IAAc,EAEdtmB,KAAK2mB,SAAS5nB,KAAKynB,GASnB,KALA3f,EAAM7G,KAAK2mB,SAAS,IAChBC,OAICzW,EAAI,EAAGA,EAAI,EAAGA,IAEf,IADA7D,EAAS,GAAL6D,EAAS,EAAItJ,EAAIM,OAAS,EACzBkF,EAAI,EAAGA,EAAIxF,EAAIK,MAAOmF,IAEvBvN,GADA2nB,EAAI5f,EAAIggB,WAAWxa,EAAGC,KACX,GAAM,IAKjBma,GADA3nB,GAAK,MACK,IAJJ2nB,GAAK,GAAM,MAIK,IAHhBA,GAAK,EAAK,MAGkB,GAF5BA,GAAK,EAAK,MAE6B,EAC7C5f,EAAIigB,WAAWza,EAAGC,EAAGma,GAG7B,IAAKtW,EAAI,EAAGA,EAAI,EAAGA,IAEf,IADA9D,EAAS,GAAL8D,EAAS,EAAItJ,EAAIK,MAAQ,EACxBoF,EAAI,EAAGA,EAAIzF,EAAIM,OAAQmF,IAExBxN,GADA2nB,EAAI5f,EAAIggB,WAAWxa,EAAGC,KACX,GAAM,IAKjBma,GADA3nB,GAAK,MACK,IAJJ2nB,GAAK,GAAM,MAIK,IAHhBA,GAAK,EAAK,MAGkB,GAF5BA,GAAK,EAAK,MAE6B,EAC7C5f,EAAIigB,WAAWza,EAAGC,EAAGma,GAG7B5f,EAAIkgB,SACJlgB,EAAM,OA1FH,CAAA1E,IAAA,eAAAzE,MAAA,SA6FE0E,EAAOC,EAASC,GACzBtC,KAAK2mB,SAAW,GAEhB3mB,KAAKgnB,yBAAyB1kB,EAAQA,EAAO4E,MAAQlH,KAAK0lB,UAAWpjB,EAAO6E,OAASnH,KAAK2lB,YAC1F3lB,KAAKinB,WAAajnB,KAAK2lB,WAAa3lB,KAAK0lB,UACzC1lB,KAAKknB,WAAalnB,KAAK2lB,WAAa3lB,KAAK0lB,WAAa1lB,KAAK2mB,SAASvjB,OAAS,EAAI,GACjF/C,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA2nB,EAAA1nB,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAaoC,EAAOC,EAAS,QAnGtB,CAAAF,IAAA,UAAAzE,MAAA,WAsGP,IAAK,IAAIyS,EAAI,EAAGA,EAAInQ,KAAK2mB,SAASvjB,OAAQ+M,IACtCnQ,KAAK2mB,SAASxW,GAAGjN,UACjBlD,KAAK2mB,SAASxW,GAAK,KAEvBnQ,KAAK2mB,SAASvjB,OAAS,EACvBpD,KAAKmnB,SAASjkB,UACdlD,KAAKmnB,SAAW,KAChB9mB,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA2nB,EAAA1nB,WAAA,UAAA4C,MAAA1C,KAAA0C,QA7GO,CAAAmC,IAAA,QAAAzE,MAAA,WAgHPsC,KAAKonB,WAAY,EACjBpnB,KAAKqnB,SAAU,EACfrnB,KAAKyW,WAAWzW,KAAKylB,gBAlHd,CAAAtjB,IAAA,aAAAzE,MAAA,SAoHA4pB,GAEP,GADAtnB,KAAKylB,aAAe6B,EACftnB,KAAK0E,OAAV,CAGA,IAAI6iB,EAAMvnB,KAAKglB,cACXje,EAAI,IAAIxG,EAAOyG,OAEf0J,EAAO,IAAIpQ,EAAQwG,WAAW,KAAM,MAAM,EAAM,GACpD,OAAQ9G,KAAKylB,cACT,KAAK,EACD8B,EAAIC,YAAY,GAChBxnB,KAAKklB,OAAS,EAEd,MACJ,KAAK,EACDqC,EAAIC,YAAY,GAChBxnB,KAAKklB,OAAS,EAEd,MACJ,QACIqC,EAAIC,YAAY,GAChBxnB,KAAKklB,OAAS,EAGlBxU,EAAKrT,eAAe,mBAEpBqT,EAAKtJ,KAAKmgB,EAAKxgB,EAAG,KAAM,KAAM,MAAM,GAKpC/G,KAAKmnB,UACLnnB,KAAKmnB,SAASjkB,UAClBlD,KAAKmnB,SAAW5mB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQgM,EAAMpQ,EAAQqG,uBAAuBC,MAAM,GAAM,GACjH5G,KAAKonB,WAAY,EACjBpnB,KAAKqnB,SAAU,KAxJR,CAAAllB,IAAA,OAAAzE,MAAA,WA4JP,GADAsC,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuD,YAAY,GAC9FvD,KAAKonB,UAAV,CAGA,IAAIX,EAEAgB,EACAC,EAEArb,EACAC,EACA6D,EACAwX,EACJ,GAAI3nB,KAAKqnB,QAAS,CAId,IAHArnB,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKmnB,UACjCnnB,KAAK+lB,UAAUE,SAAW,EACrB3Z,EAAI,EAAGA,EAAItM,KAAK2lB,WAAYrZ,IAC7B,IAAKD,EAAI,EAAGA,EAAIrM,KAAK0lB,UAAWrZ,IAC5Bqb,EAAM1nB,KAAK+lB,UAAU6B,mBAEjBvb,GADJob,EAAK3b,KAAKI,IAAI,EAAGwb,EAAM,KACT,GAAKpb,EAAImb,GAAM,MAE7BhB,EAAIzmB,KAAK2mB,SAASe,EAAM,GAAGb,WAAWxa,EAAIob,EAAInb,EAAImb,KACvC,GAAM,KAAQ,IAErBznB,KAAKmmB,0BAA6BM,GAAK,GAAM,KAAQ,MAASA,GAAK,EAAK,KAAQ,MAASA,GAAK,EAAK,KAAQ,MAE/GkB,GAAOlB,GAAK,GAAM,KAAQ,IAE1BzmB,KAAKqD,cAAc,GAAKskB,GAAOlB,GAAK,GAAM,KAAQ,IAClDzmB,KAAKqD,cAAc,GAAKskB,GAAOlB,GAAK,EAAK,KAAQ,IACjDzmB,KAAKqD,cAAc,GAAKskB,GAAOlB,GAAK,EAAK,KAAQ,IACjDzmB,KAAKqD,cAAc,GAAKskB,EAGxB3nB,KAAKmD,eAAe,GAAakJ,EAAIrM,KAAK4lB,iBAAhB,KAAmC5lB,KAAK4lB,iBAAmB6B,EAAK,GAC1FznB,KAAKmD,eAAe,GAAK,MAAQmJ,EAAItM,KAAK4lB,iBAAmB5lB,KAAK4lB,iBAAmB6B,EAAK,IAC1FznB,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAKnD,KAAK4lB,iBAAmB6B,EAAKznB,KAAKmlB,SAC3DnlB,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,aAGvCvE,KAAKqnB,SAAU,MAEd,CAED,IADArnB,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKmnB,UAC5BhX,EAAI,EAAGA,EAAInQ,KAAKslB,gBAAgBliB,OAAQ+M,IAEzC9D,EAAIrM,KAAKolB,cAAcjV,GACvB7D,EAAItM,KAAKqlB,cAAclV,GACvBnQ,KAAK+lB,UAAUE,SAAW5Z,EAAIrM,KAAK0lB,UAAYpZ,EAC/Cob,EAAM1nB,KAAKslB,gBAAgBnV,GAEvB9D,GADJob,EAAK3b,KAAKI,IAAI,EAAGwb,EAAM,KACT,GAAKpb,EAAImb,GAAM,IAG7BE,IADAlB,EAAIzmB,KAAK2mB,SAASe,EAAM,GAAGb,WAAWxa,EAAIob,EAAInb,EAAImb,KACtC,GAAM,KAAQ,IAC1BznB,KAAKqD,cAAc,GAAKskB,GAAOlB,GAAK,GAAM,KAAQ,IAClDzmB,KAAKqD,cAAc,GAAKskB,GAAOlB,GAAK,EAAK,KAAQ,IACjDzmB,KAAKqD,cAAc,GAAKskB,GAAOlB,GAAK,EAAK,KAAQ,IACjDzmB,KAAKqD,cAAc,GAAKskB,EAGxB3nB,KAAKmD,eAAe,GAAakJ,EAAIrM,KAAK4lB,iBAAhB,KAAmC5lB,KAAK4lB,iBAAmB6B,EAAK,GACtFznB,KAAKmD,eAAe,GAAK,IACzBnD,KAAKmD,eAAe,GAAK,GAC7BnD,KAAKmD,eAAe,GAAKmJ,EAAItM,KAAK4lB,iBAAmB5lB,KAAK4lB,iBAAmB6B,EAAK,GAC9EznB,KAAKmD,eAAe,GAAK,IACzBnD,KAAKmD,eAAe,GAAK,GAC7BnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAKnD,KAAK4lB,iBAAmB6B,EAAKznB,KAAKmlB,SAC3DnlB,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,yBACrF2e,GAAK,GAAM,KAAQ,IAErBzmB,KAAKmmB,0BAA6BM,GAAK,GAAM,KAAQ,MAASA,GAAK,EAAK,KAAQ,MAASA,GAAK,EAAK,KAAQ,KAE/GzmB,KAAK0E,OAAO+D,cAAczI,KAAKuE,YAEnCvE,KAAKolB,cAAchiB,OAAS,EAC5BpD,KAAKqlB,cAAcjiB,OAAS,EAC5BpD,KAAKslB,gBAAgBliB,OAAS,EAElCpD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKonB,WAAY,KApPV,CAAAjlB,IAAA,aAAAzE,MAAA,SAsPA+N,EAAIE,GAAI,IAAAkc,EAAA7nB,KACfA,KAAKonB,WAAY,EACjB,IAIIjX,EACA9D,EACAC,EACAwb,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7B,EAhBA8B,EAAKvoB,KAAKulB,QAAUvlB,KAAKknB,WAEzBsB,EAAiB,GAAV,EAAID,GAgBf,KAAIC,EAAM,GACF1c,KAAKG,UAAYuc,EAAM,EAAM,GAAK,KAAQjoB,EAAO0I,QAAQwf,sBADjE,CApBe,IAAAC,EAAA,WAyBX,GAAU,GAANH,EACA,OAAAI,OAAA,IACuB,SAAvBC,IAEAvc,EAAIP,KAAKmR,MAAM4K,EAAKnC,UAAY5Z,KAAKG,UACrCK,EAAIR,KAAKmR,MAAM4K,EAAKlC,WAAa7Z,KAAKG,WAClB,SAAhB4c,IACAhB,EAAK9B,UAAUE,SAAW5Z,EAAIwb,EAAKnC,UAAYpZ,EAC/C,IACIwc,EADApB,EAAMG,EAAK9B,UAAU6B,mBAEzBkB,EAAWpB,EAAM,EACjB,IAIIqB,EACAC,EALAvB,EAAK3b,KAAKI,IAAI,EAAG4c,EAAW,GAChCzc,EAAIP,KAAKmR,MAAM5Q,EAAIob,GAAMA,EAMzB,IAAIwB,GAAM,EACV,IAAKF,EANLzc,EAAIR,KAAKmR,MAAM3Q,EAAImb,GAAMA,EAMZsB,EAAKzc,EAAImb,EAAIsB,IAAM,CAC5B,GAAIA,EAAKlB,EAAKlC,YAEV,IADAkC,EAAK9B,UAAUE,SAAW5Z,EAAIwb,EAAKnC,UAAYqD,EAC1CC,EAAK3c,EAAG2c,EAAK3c,EAAIob,GAAMuB,EAAKnB,EAAKnC,UAAWsD,IAC7C,GAAInB,EAAK9B,UAAU6B,oBAAsBF,EAIrC,OAHArb,EAAI2c,EACJ1c,EAAIyc,OACJF,SAQRI,GAAM,EAEV,IAAKA,EACD,MAER,GAAKA,EAAL,CAKA,GAAIvB,GAAOG,EAAKlB,SAASvjB,OAAS,GAC1BolB,EAAM,EAAG,CACT,KAAI1c,KAAKG,SAAWH,KAAKI,IAAI,EAAIsc,EAAM,EAAK,IAUxC,YADAI,IARA,GAAIf,EAAKrC,WAAaqC,EAAKZ,YACnBnb,KAAKG,SAAW,GAEhB,YADA2c,IAWpB,GAAIlB,GAAOG,EAAKlB,SAASvjB,OAAS,EAIlC,GAAIykB,EAAKjnB,UACM,GAAP8mB,EACAkB,QAFR,CAOAK,GAAM,EACNxB,EAAK3b,KAAKI,IAAI,EAAG4c,EAAW,GAC5B,IAAII,EAAMpd,KAAKI,IAAI,EAAGwb,EAAM,GAC5B,IAAKqB,EAAKzc,EAAGyc,EAAKzc,EAAImb,GAAMsB,EAAKlB,EAAKlC,WAAYoD,IAC9C,IAAKC,EAAK3c,EAAG2c,EAAK3c,EAAIob,GAAMuB,EAAKnB,EAAKnC,UAAWsD,IACzCA,EAAKE,GAAO,GAAKH,EAAKG,GAAO,IAEjCzC,EAAIoB,EAAKlB,SAASe,EAAM,GAAGb,WAAWmC,EAAKE,EAAKH,EAAKG,GACrDd,EAAO3B,GAAK,GAAM,IAClB4B,EAAO5B,GAAK,EAAK,IACjB6B,EAAO7B,GAAK,EAAK,IAEbwC,GACInB,EAAOM,IACPN,EAAOM,GACPH,EAAOG,IACPH,EAAOG,GACPL,EAAOM,IACPN,EAAOM,GACPH,EAAOG,IACPH,EAAOG,GACPL,EAAOM,IACPN,EAAOM,GACPH,EAAOG,IACPH,EAAOG,KAGXW,GAAM,EACNnB,EAAOG,EAAOG,EACdL,EAAOG,EAAOG,EACdL,EAAOG,EAAOG,IAK1BF,EAAKH,EAAOH,EACZO,EAAKH,EAAOH,EACZO,EAAKH,EAAOH,EACZ,IAAIrZ,EAAI7C,KAAKC,KAAKqc,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAAc,IAANC,GACnD,KAAIV,EAAKjnB,UACD+N,EAAI,IAOZ,GAJIA,EAAI,MACJA,EAAI,KACRA,EAAI7C,KAAKI,IAAIyC,EAAG,GAEZ7C,KAAKG,SAAW0C,EAChBia,QADJ,CAIA,IAAKG,EAAKzc,EAAGyc,EAAKzc,EAAImb,GAAMsB,EAAKlB,EAAKlC,WAAYoD,IAE9C,IADAlB,EAAK9B,UAAUE,SAAW5Z,EAAIwb,EAAKnC,UAAYqD,EAC1CC,EAAK3c,EAAG2c,EAAK3c,EAAIob,GAAMuB,EAAKnB,EAAKnC,UAAWsD,IAC7CnB,EAAK9B,UAAUG,UAAU4C,GACzBjB,EAAKtC,UACW,GAAZuD,GACAjB,EAAKrC,aAKjBqC,EAAKzC,cAAcrmB,KAAKsN,GACxBwb,EAAKxC,cAActmB,KAAKuN,GACxBub,EAAKvC,gBAAgBvmB,KAAK+pB,SA1EtBF,SArBAA,IAiGRC,GAEJD,IA5IJ,IAAKzY,EAAI,EAAGA,EAAIqY,EAAMjoB,EAAO0I,QAAQwf,qBAAsBtY,IAAK,KAAAgZ,EAAAT,IAAA,qBAAAS,EAAA,OAAAA,EAAAR,MA9QzD,CAAAxmB,IAAA,QAAAzE,MAAA,WA+ZP,IADAsC,KAAK+lB,UAAUE,SAAW,EACnBjmB,KAAK+lB,UAAUE,SAAWjmB,KAAK+lB,UAAU3iB,QAC5CpD,KAAK+lB,UAAUG,UAAU,GAC7B7lB,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA2nB,EAAA1nB,WAAA,QAAA4C,MAAA1C,KAAA0C,MACAA,KAAKqnB,SAAU,EACfrnB,KAAKonB,WAAY,EACjBpnB,KAAKulB,QAAU,EACfvlB,KAAKwlB,WAAa,MAraXV,EAAA,CACUvkB,EAAOC,eAuahCD,EAAOukB,WAAaA,EAxaxB,CAyaGvkB,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT6oB,EADS,WAEX,SAAAA,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAKxsB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAopB,GACrCppB,KAAK4pB,UAAY,IACjB5pB,KAAK6pB,gBAAkB,EACvB7pB,KAAK8pB,aAAe,SACpB9pB,KAAKmB,aAAe,EACpBnB,KAAK+pB,iBAAkB,EACvB/pB,KAAKgqB,cAAgB,EACrBhqB,KAAKiqB,eAAiB,KACtBjqB,KAAKyB,OAAQ,EACbzB,KAAKkqB,SAAW,IAAIza,MACpBzP,KAAKmqB,IAAM,IAAI5pB,EAAO6pB,cACtBpqB,KAAKqqB,WAAa,IAAI5a,MACtBzP,KAAKsqB,UAAY,IAAI7a,MACrBzP,KAAK4B,SAAU,EACf5B,KAAKmB,aAAenB,KAAK4B,QAAU,EAAI,EACvC5B,KAAKuqB,UAAW,EAChBvqB,KAAKwqB,UAAYnB,EACjBrpB,KAAKyqB,UAAYnB,EACjBtpB,KAAK0qB,UAAYnB,EACjBvpB,KAAK2qB,UAAYnB,EACjBxpB,KAAK4qB,UAAYnB,EACjBzpB,KAAK6qB,UAAYnB,EACjB1pB,KAAK8qB,UAAYnB,EAxBV,OAAAxsB,OAAA+E,EAAA,EAAA/E,CAAAisB,EAAA,EAAAjnB,IAAA,eAAAzE,MAAA,SA0BE0E,EAAOC,EAAS0oB,GACzB/qB,KAAKoI,UAAY2iB,EACjB/qB,KAAKgrB,WAAa3oB,EAClBrC,KAAKuC,OAAOH,EAAOpC,KAAKgrB,cA7BjB,CAAA7oB,IAAA,UAAAzE,MAAA,WA+BD,IAAAutB,EAAAjrB,KACNA,KAAKwC,gBACLxC,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMC,iBAAkB,SAACjE,GAAQqsB,EAAKnoB,uBAAuBlE,KAE7GoB,KAAKqqB,WAAWjnB,OAAS,EACzBpD,KAAKgE,WAAWd,UAChBlD,KAAKgE,WAAa,KAClBhE,KAAKiD,aAAaC,UAClBlD,KAAKiD,aAAe,KACpBjD,KAAKmE,OAAOjB,UACZlD,KAAKmE,OAAS,KACdnE,KAAKoE,QAAQlB,UACblD,KAAKoE,QAAU,KACfpE,KAAKsE,YAAYpB,UACjBlD,KAAKsE,YAAc,KACnBtE,KAAKuE,UAAUrB,UACflD,KAAKuE,UAAY,KAEjB,IAAK,IAAI4L,EAAI,EAAGA,EAAInQ,KAAKsqB,UAAUlnB,OAAQ+M,IACvCnQ,KAAKsqB,UAAUna,GAAGjN,UAEtBlD,KAAKsqB,UAAUlnB,OAAS,EACxBpD,KAAKsqB,UAAY,KACbtqB,KAAKyD,WACLzD,KAAKyD,UAAUP,UACnBlD,KAAKyD,UAAY,KACjBzD,KAAKwE,KAAKtB,UACVlD,KAAKwE,KAAO,KACZxE,KAAKmD,eAAeC,OAAS,EAC7BpD,KAAKmD,eAAiB,KACtBnD,KAAKqD,cAAcD,OAAS,EAC5BpD,KAAKqD,cAAgB,KACrBrD,KAAKsD,cAAgB,KACrBtD,KAAKuD,WAAa,KAClBvD,KAAKoI,UAAY,KACjBpI,KAAKkE,cAAgB,KACrBlE,KAAK0E,OAAOxB,UACZlD,KAAK0E,OAAS,KACd1E,KAAKyC,QAAU,OArER,CAAAN,IAAA,gBAAAzE,MAAA,WAwEPsC,KAAK2E,iBAAkB,IAxEhB,CAAAxC,IAAA,iBAAAzE,MAAA,WA2EPsC,KAAK2E,iBAAkB,EACvB3E,KAAK8E,SAAW,IA5ET,CAAA3C,IAAA,cAAAzE,MAAA,WA+EPsC,KAAK4B,SAAW5B,KAAK4B,UA/Ed,CAAAO,IAAA,eAAAzE,MAAA,SAiFEwtB,GACTlrB,KAAKqqB,WAAWjnB,OAAS,EACzBpD,KAAKmrB,WAAaD,IAnFX,CAAA/oB,IAAA,eAAAzE,MAAA,WAqFM,OAAOsC,KAAKmrB,aArFlB,CAAAhpB,IAAA,sBAAAzE,MAAA,SAsFS0tB,GACA,iBAAZA,EACA7qB,EAAO0I,QAAQoiB,mBAAqB9qB,EAAO0I,QAAQqiB,WAClC,iBAAZF,EACL7qB,EAAO0I,QAAQoiB,mBAAqB9qB,EAAO0I,QAAQsiB,iBAClC,gBAAZH,IACL7qB,EAAO0I,QAAQoiB,mBAAqB9qB,EAAO0I,QAAQuiB,mBA5FhD,CAAArpB,IAAA,sBAAAzE,MAAA,WA+FP,OAAO6C,EAAO0I,QAAQoiB,qBA/Ff,CAAAlpB,IAAA,SAAAzE,MAAA,SAiGJ0E,EAAO2C,GAAM,IAAA0mB,EAAAzrB,KAChBA,KAAKsD,cAAgB,IAAIhD,EAAQ8E,KAAKC,SAEtCrF,KAAKmqB,IAAIuB,WAAWnrB,EAAO0F,cAAcE,YAAc,GAAI5F,EAAO0F,cAAcC,aAAc3F,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cACrJlG,KAAK2E,iBAAkB,EACvB3E,KAAKkE,cAAgBa,EAErB/E,KAAKyC,QAAUL,EACfpC,KAAKyC,QAAQ6C,iBAAiBhF,EAAQqC,OAAOC,MAAMC,iBAAkB,SAACjE,GAAQ6sB,EAAK3oB,uBAAuBlE,KAC1GoB,KAAKyC,QAAQ8C,qBA1GN,CAAApD,IAAA,iBAAAzE,MAAA,eAAAyE,IAAA,yBAAAzE,MAAA,SAkHYkB,GACnBgG,QAAQC,IAAI,mBAGZ7E,KAAK2F,aACL3F,KAAKyD,UAAY,KACjBzD,KAAK0E,OAAS1E,KAAKyC,QAAQmD,UAC3B5F,KAAKgE,WAAazD,EAAOsF,cAAcC,kBAAkB9F,KAAK0E,QAAQ,GACtE1E,KAAKiD,aAAe1C,EAAOsF,cAAcC,kBAAkB9F,KAAK0E,QAAQ,GAGxE1E,KAAK0E,OAAO6E,oBAAoBvJ,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,YAAa,GAAG,GACtFnJ,KAAK+F,WACL,IAEIjH,EAAIyB,EAAO0F,cAAcC,aAAe3F,EAAO0F,cAAcE,YAC7DC,EAAc,EAAE,GAAU,IAAJtH,EAAS,GAAU,IAAJA,GAAU,GAAS,GAAJA,EAAS,GAAS,GAAJA,GACtEkB,KAAKmE,OAASnE,KAAK0E,OAAO2B,mBAAmB,EAAG,GAChDrG,KAAKmE,OAAOmC,iBALG,EAAE,IAAM,GAAK,IAAM,IAAM,GAAK,GAAK,GAAK,IAKhB,EAAG,GAC1CtG,KAAKoE,QAAUpE,KAAK0E,OAAO2B,mBAAmB,EAAG,GACjDrG,KAAKoE,QAAQkC,iBANA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAMG,EAAG,GACzCtG,KAAKsE,YAActE,KAAK0E,OAAO2B,mBAAmB,EAAG,GACrDrG,KAAKsE,YAAYgC,iBAAiBF,EAAa,EAAG,GA4BlD,GA1BApG,KAAKuE,UAAYvE,KAAK0E,OAAO6B,kBAAkB,GAC/CvG,KAAKuE,UAAU+B,iBAFD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEW,EAAG,GAE5CtG,KAAKuD,WAAa,IAAIjD,EAAQ8E,KAAKC,SACnCrF,KAAKuD,WAAWiD,kBAAsD,IAAnCjG,EAAO0F,cAAcE,YAAuD,IAApC5F,EAAO0F,cAAcC,aAAmB,GACnHlG,KAAKuD,WAAWkD,YAAY,GAAwC,GAAnClG,EAAO0F,cAAcE,aAAmB,GAAyC,GAApC5F,EAAO0F,cAAcC,cAAoB,GACvHlG,KAAKwE,KAAOxE,KAAK0E,OAAOgC,cAAcnG,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,aAAc5F,EAAQqG,uBAAuBC,MAAM,EAAM,EAAG,QACzJ5G,KAAKmD,eAAiB,CAAC,EAAK,EAAK,EAAK,GACtCnD,KAAKqD,cAAgB,CAAC,EAAK,EAAK,EAAK,GAErCrD,KAAKsqB,UAAY,KACjBtqB,KAAKsqB,UAAY,IAAI7a,MACrBzP,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKwqB,UAAWlqB,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OACrI5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKyqB,UAAWnqB,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OACrI5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK2qB,UAAWrqB,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OACrI5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK4qB,UAAWtqB,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OACrI5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK6qB,UAAWvqB,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OACrI5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK8qB,UAAWxqB,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OAErI5G,KAAKwD,kBAAoB,IAAIlD,EAAQ8E,KAAKC,SAC1CrF,KAAKwD,kBAAkBiD,YAAY,MAAiB,MAAiB,GACrEzG,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,wBAC3F9H,KAAK0E,OAAOqD,WAAWzH,EAAQ0H,sBAAsBC,MACrDjI,KAAKkI,iBACLlI,KAAKwI,QACiB,MAAlBxI,KAAKoI,UAAmB,CACxBpI,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,KACzBnD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cAC5B,IAAIqF,EAAM/H,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKoI,UAAW9H,EAAQqG,uBAAuBC,MAAM,GAAM,EAAM,OAC3H5G,KAAK0E,OAAO6D,mBAAmBvI,KAAKwE,MACpCjE,EAAOsF,cAAc4C,cAAczI,KAAK0E,OAAQ1E,KAAKuE,UAAWvE,KAAKwD,kBAAmB8E,EAAKtI,KAAKmE,OAAQnE,KAAKoE,QAASpE,KAAKmD,eAAgBnD,KAAKqD,eAClJiF,EAAIpF,UACJlD,KAAKoI,UAAY,KACjBpI,KAAKuqB,UAAW,EAEpBvqB,KAAK0E,OAAO2D,WAAWrI,KAAKgE,YAC5BhE,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKmE,OAAQ,EAAG7D,EAAQmH,4BAA4BC,SACrF1H,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuD,YACvFvD,KAAK0E,OAAOoG,wBACZ9K,KAAK0I,WACLC,cAAc,IAAI/F,MAAMtC,EAAQqC,OAAOC,MAAMgG,aA3LtC,CAAAzG,IAAA,WAAAzE,MAAA,WA6LA,IAAAiuB,EAAA3rB,KACY,MAAfA,KAAK0E,QAAkB1E,KAAK8I,SAAW,GAAK9I,KAAK+I,UAAY,GAEjE/I,KAAKyC,QAAQ6C,iBAAiBhF,EAAQqC,OAAOC,MAAMG,YAAa,SAACnE,GAAQ+sB,EAAK3oB,aAAapE,OAhMpF,CAAAuD,IAAA,aAAAzE,MAAA,WAmMPsC,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMG,YAAa/C,KAAKgD,gBAnMjE,CAAAb,IAAA,WAAAzE,MAAA,WAsMPsC,KAAK8I,SAAW9I,KAAKyC,QAAQuG,WAAazI,EAAO0I,QAAQC,aACzDlJ,KAAK+I,UAAY/I,KAAKyC,QAAQ0G,YAAc5I,EAAO0I,QAAQC,aAAe3I,EAAO0I,QAAQG,iBACzFpJ,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,WAG/E,MAAf/I,KAAK0E,QAAkB1E,KAAK8I,SAAW,GAAK9I,KAAK+I,UAAY,IAEjE/I,KAAK0E,OAAO6E,oBAAoBvJ,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,YAAa,GAAG,GACtFnJ,KAAKsD,cAAckG,WACnBxJ,KAAKsD,cAAckD,kBAAkB,EAAsC,IAAlCjG,EAAO0I,QAAQG,iBAAuB,GAC/EpJ,KAAKsD,cAAcmD,YAAY,GAAuB,GAAhBzG,KAAK8I,UAAgB,GAA4D,IAApD9I,KAAK+I,UAAYxI,EAAO0I,QAAQG,mBAAyB,MAhNrH,CAAAjH,IAAA,OAAAzE,MAAA,WAmNP,IAAIsZ,EAAMhX,KAAKqqB,WAAWjnB,OAC1B,GAAI4T,EAAM,EAAG,CAOT,IAAI4U,EANA5rB,KAAKmrB,WACLnrB,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqB+C,KAAMrK,EAAQsH,qBAAqBE,wBAG5F9H,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,wBAK/F,IADA,IAAI+jB,GAAM,EACD1b,EAAI,EAAGA,EAAI6G,IAChB4U,EAAO5rB,KAAKqqB,WAAWla,IACZ2b,KAAOhgB,KAAKG,SAAW,KAEzB2f,EAAKG,KAAoB,IAAbH,EAAK3kB,MAAe,GACjC2kB,EAAKI,KAAoB,IAAbJ,EAAK3kB,MAAe,GAChC2kB,EAAKG,KAAoB,IAAbH,EAAK3kB,MAAe1G,EAAO0F,cAAcE,aACrDylB,EAAKI,KAAoB,IAAbJ,EAAK3kB,MAAe1G,EAAO0F,cAAcC,cAAiBlG,KAAKmrB,cACvEU,GAAMD,EAAKK,WACXjsB,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKsqB,UAAUxe,KAAKmR,MAAM2O,EAAKK,YAC3DJ,EAAKD,EAAKK,UAEVL,EAAKE,KACL9rB,KAAKmD,eAAe,GAAKyoB,EAAKG,MAAwB,EAAhBjgB,KAAKG,SAAe,IAAO2f,EAAK3kB,MAAQ,IAC9EjH,KAAKmD,eAAe,GAAKyoB,EAAKI,MAAwB,EAAhBlgB,KAAKG,SAAe,IAAO2f,EAAK3kB,MAAQ,IAC9EjH,KAAKmD,eAAe,GAAKyoB,EAAK3kB,OAAyB,GAAhB6E,KAAKG,SAAiB,IAC7DjM,KAAKqD,cAAc,GAAKyI,KAAKG,SAC7BjM,KAAKqD,cAAc,GAAKuoB,EAAKjd,EAAI3O,KAAKqD,cAAc,GACpDrD,KAAKqD,cAAc,GAAKuoB,EAAK9M,EAAI9e,KAAKqD,cAAc,GACpDrD,KAAKqD,cAAc,GAAKuoB,EAAK7d,EAAI/N,KAAKqD,cAAc,KAIpDrD,KAAKmD,eAAe,GAAKyoB,EAAKG,KAC9B/rB,KAAKmD,eAAe,GAAKyoB,EAAKI,KAC9BhsB,KAAKmD,eAAe,GAAKyoB,EAAK3kB,MAC9BjH,KAAKqD,cAAc,GAAKuoB,EAAKjd,EAC7B3O,KAAKqD,cAAc,GAAKuoB,EAAK9M,EAC7B9e,KAAKqD,cAAc,GAAKuoB,EAAK7d,EAC7B/N,KAAKqD,cAAc,GAAK,GAE5BrD,KAAKmD,eAAe,GAAKyoB,EAAKzT,MAC9BnY,KAAKmD,eAAe,GAAKyoB,EAAK3kB,MAC9BjH,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC1BvE,KAAKuqB,WACFvqB,KAAKksB,WACLlsB,KAAKksB,YACTlsB,KAAKuqB,UAAW,IAIxBqB,EAAK5M,KAAO,GACZhf,KAAKmqB,IAAIgC,gBAAgBP,EAAKG,KAAMH,EAAKI,MACzCJ,EAAKQ,YAAYpsB,KAAKmqB,IAAIkC,KAAMrsB,KAAKmqB,IAAImC,MACzCnc,MAGAnQ,KAAKqqB,WAAWjX,OAAOjD,EAAG,GAC1B6G,KAGRhX,KAAKqD,cAAc,GAAK,EAE5BrD,KAAKmqB,IAAIoC,UAAU,KACnBvsB,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBC,IAAKvH,EAAQsH,qBAAqBE,0BAtRpF,CAAA3F,IAAA,eAAAzE,MAAA,SAwREkB,GACT,GAAKoB,KAAKyB,OAAmC,GAA1BzB,KAAKqqB,WAAWjnB,OAAnC,CA+CI,IAAI6H,EADR,GA5CIjL,KAAK2E,iBACL3E,KAAKoH,OAETpH,KAAKyB,MAAQzB,KAAKqqB,WAAWjnB,OAAS,EA2BlCpD,KAAK4B,QACgB,GAAjB5B,KAAK8E,WACL9E,KAAK8E,SAAW,EAChB9E,KAAKkL,SAAWlL,KAAKmB,aACrBnB,KAAKmL,WAAa,IAAIzM,MAAM0M,WAIX,GAAjBpL,KAAK8E,WACL9E,KAAK8E,SAAW,EAChB9E,KAAKkL,SAAWlL,KAAKmB,aACrBnB,KAAKmL,WAAa,IAAIzM,MAAM0M,WAGhCpL,KAAKmB,cAAgBnB,KAAK8E,UAAY9E,KAAK2E,iBAE3CsG,IAAO,IAAIvM,MAAM0M,UAAYpL,KAAKmL,WAA7B,KACI,GACLF,EAAK,EACLjL,KAAKmB,aAAenB,KAAK8E,SACzB9E,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,aAGlGkC,EAAK1K,EAAO8K,OAAOC,aAAaL,EAAI,EAAG,EAAG,GAC1CjL,KAAKmB,aAAenB,KAAKkL,UAAYlL,KAAK8E,SAAW9E,KAAKkL,UAAYD,EACtEjL,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,YAGjG,MAALnK,GACAoB,KAAK0E,OAAO6G,aAtVT,CAAApJ,IAAA,uBAAAzE,MAAA,WAyVPsC,KAAKyC,QAAQC,oBAAoBpC,EAAQqC,OAAOC,MAAMG,YAAa/C,KAAKgD,cACxE,IAAI6D,EAAM,IAAIvG,EAAQwG,WAAW9G,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,aAAa,EAAO,UAI3F,OAHAnJ,KAAKgD,aAAa,MAClBhD,KAAK0E,OAAOgJ,iBAAiB7G,GAC7B7G,KAAK0E,OAAO6G,UACL1E,IA9VA,CAAA1E,IAAA,qBAAAzE,MAAA,SAgWQmJ,GACf7G,KAAKgD,aAAa,MAClBhD,KAAK0E,OAAOgJ,iBAAiB7G,KAlWtB,CAAA1E,IAAA,kBAAAzE,MAAA,SAoWKmJ,EAAKkkB,GACb/qB,KAAKyD,WACLzD,KAAKyD,UAAUP,UACnBlD,KAAKyD,UAAY,KACjBzD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACxBrD,KAAKqD,cAAc,GAAK,EACbyI,KAAK8B,IAAI9B,KAAK8B,IAAI5N,KAAKyC,QAAQuG,WAAYhJ,KAAKyC,QAAQ0G,aAAc2C,KAAK+B,IAAIhH,EAAIK,MAAQ,EAAGL,EAAIM,OAAS,IAGtH,IAGIkF,EAAGC,EAHHvF,EAAI,IAAIzG,EAAQ8E,KAAKC,SAErB0I,GADK,IAAIxN,EAAOyG,OACZ,IAAI1G,EAAQwG,WAHb,SAGoC,EAAM,IAiBjD,IAfA9G,KAAK0E,OAAO6E,oBALL,QAKqC,IAAI,GAChDvJ,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKoE,QAAS,EAAG9D,EAAQmH,4BAA4BC,SACtF1H,KAAK0E,OAAO8C,kBAAkB,EAAGxH,KAAKsE,YAAa,EAAGhE,EAAQmH,4BAA4BC,SAC1F1H,KAAK0E,OAAO2D,WAAWrI,KAAKiD,cAC5BjD,KAAK0E,OAAOoG,wBACZ9K,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKwE,MACjCxE,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK0D,EAAIK,MAC7BH,EAAEyC,WACFzC,EAAEN,YAAY,KAAmB,KAAmB,GACpDzG,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG9C,GAAG,GACrF/G,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKwE,MAC5B6H,EAAI,EAAGA,EAAIP,KAAKoC,KAAKrH,EAAIK,MApBvB,KAoBsCmF,IACzC,IAAKC,EAAI,EAAGA,EAAIR,KAAKoC,KAAKrH,EAAIM,OArB3B,KAqB2CmF,IAC1CtM,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,GAvBrB,KAuB2BkJ,GAAwB,GAAZxF,EAAIK,MAAayG,IACvD3N,KAAKmD,eAAe,GAxBrB,IAwB0BmJ,GAAyB,GAAbzF,EAAIM,OAAcwG,IACvD3N,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOgJ,iBAAiBK,GAC7BlH,EAAIsH,WAAWJ,EAAGA,EAAEK,KAAM,CAAE/B,EA5B7B,IA4BuCA,EAAGC,EA5B1C,IA4BoDA,IAG3D,IAAI2B,EA/BG,IA+BW1N,EAAO0F,cAAcC,aAAe3F,EAAO0F,cAAcE,YAQ3E,IAPAnG,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK,EACzBnD,KAAKmD,eAAe,GAAK0D,EAAIK,MAC7BH,EAAEyC,WACFzC,EAAEN,YAAY,KAAmB,GAAc,GAAPwH,GAAY,GACpDjO,KAAK0E,OAAOkG,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG9C,GAAG,GAChFsF,EAAI,EAAGA,EAAIP,KAAKoC,KAAK3N,EAAO0F,cAAcE,YAvCxC,KAuC6DkG,IAChE,IAAKC,EAAI,EAAGA,EAAIR,KAAKoC,KAAK3N,EAAO0F,cAAcC,aAxC5C,KAwCkEoG,IACjEtM,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAC3BxI,KAAKmD,eAAe,GA1CrB,KA0C2BkJ,GAA+C,GAAnC9L,EAAO0F,cAAcE,YAAmBwH,IAC9E3N,KAAKmD,eAAe,GAAKmJ,EAAI2B,GAA4C,GAApC1N,EAAO0F,cAAcC,aAA2B,GAAP+H,GAC9EjO,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,WAC/BvE,KAAK0E,OAAOgJ,iBAAiBK,GAC7Bgd,EAAS5c,WAAWJ,EAAGA,EAAEK,KAAM,CAAE/B,EA/ClC,IA+C4CA,EAAGC,EA/C/C,IA+CyDA,IAGhEyB,EAAE7K,YAhaK,CAAAf,IAAA,WAAAzE,MAAA,SAkaFkgB,GACL5d,KAAKkqB,SAAS9mB,OAAS,EACvB,IAAK,IAAI+M,EAAI,EAAGA,EAAIyN,EAAMxa,OAAQ+M,IAC9BnQ,KAAKkqB,SAASnrB,KAAK6e,EAAMzN,IAC7BnQ,KAAKwsB,cAAcxsB,KAAKgqB,iBAtajB,CAAA7nB,IAAA,gBAAAzE,MAAA,SAwaGkgB,GACV5d,KAAKgqB,cAAgBpM,EAAQ5d,KAAKkqB,SAAS9mB,OAASwa,EAAQ,EAC5D5d,KAAK8pB,aAAe9pB,KAAKkqB,SAASlqB,KAAKgqB,eACnChqB,KAAKiqB,gBACLjqB,KAAKiqB,mBA5aF,CAAA9nB,IAAA,kBAAAzE,MAAA,SA8aK2O,EAAGC,GAEfD,GAAK9L,EAAO0I,QAAQC,aACpBoD,GAAK/L,EAAO0I,QAAQC,aACpB,IAAIuC,EAAsB,IAAhBzL,KAAK8I,SAA0C,GAA1B9I,KAAKqJ,aAAanC,MAAclH,KAAKqJ,aAAagD,EAAIrM,KAAKqJ,aAAanC,MAAQ3G,EAAO0F,cAAcwmB,SAASpgB,EAA8B,GAA1BrM,KAAKqJ,aAAanC,MAC/JyE,IAAyB,IAAjB3L,KAAK+I,UAA4C,GAA3B/I,KAAKqJ,aAAalC,OAAenH,KAAKqJ,aAAaiD,EAAItM,KAAKqJ,aAAalC,OAAS5G,EAAO0F,cAAcwmB,SAASngB,EAA+B,GAA3BtM,KAAKqJ,aAAalC,QACpKoF,EAAKvM,KAAKqJ,aAAanC,MAAQ3G,EAAO0F,cAAc+E,QACxDhL,KAAKwM,aAAeH,EAAoB,GAAhBrM,KAAK8I,SAAgB2C,GAAMc,EAAKhM,EAAO0F,cAAcE,YAAiD,GAAnC5F,EAAO0F,cAAcE,YAChHnG,KAAKyM,cAAgBH,EAAqB,GAAjBtM,KAAK+I,UAAiB4C,EAAKpL,EAAO0I,QAAQG,kBAAoBmD,EAAKhM,EAAO0F,cAAcE,YAAkD,GAApC5F,EAAO0F,cAAcC,eAtb7I,CAAA/D,IAAA,eAAAzE,MAAA,SAwbE2O,EAAGC,GACPtM,KAAK2E,kBAEV3E,KAAK8M,gBAAgBT,EAAGC,GACxBtM,KAAKiN,YAAcjN,KAAKwM,YACxBxM,KAAKkN,YAAclN,KAAKyM,YACxBzM,KAAK0sB,WAAa,EAClB1sB,KAAK2sB,WAAa,KA/bX,CAAAxqB,IAAA,iBAAAzE,MAAA,SAicI2O,EAAGC,GACTtM,KAAK+pB,iBAAoB/pB,KAAKmrB,aAC/BnrB,KAAKgqB,gBACDhqB,KAAKgqB,cAAgBhqB,KAAKkqB,SAAS9mB,OAAS,IAC5CpD,KAAKgqB,cAAgB,GACzBhqB,KAAKwsB,cAAcxsB,KAAKgqB,kBAtcrB,CAAA7nB,IAAA,cAAAzE,MAAA,SAycC2O,EAAGC,GACX,GAAKtM,KAAK2E,gBAAV,CAGA,IAOIgI,EACAC,EACAggB,EACAC,EAVAjD,EAAY5pB,KAAK4pB,UACjBrpB,EAAO0I,QAAQoiB,oBAAsB9qB,EAAO0I,QAAQsiB,iBACpD3B,EAAY5pB,KAAK4pB,UACZrpB,EAAO0I,QAAQoiB,oBAAsB9qB,EAAO0I,QAAQuiB,gBACzD5B,EAAY5pB,KAAK4pB,UAAY,GACxBrpB,EAAO0I,QAAQoiB,oBAAsB9qB,EAAO0I,QAAQqiB,aACzD1B,EAAY5pB,KAAK4pB,WAMrB5pB,KAAK8M,gBAAgBT,EAAGC,GACxBK,EAAQ3M,KAAKwM,YACbI,EAAQ5M,KAAKyM,YAEbmgB,EAASjgB,EAAQ3M,KAAKiN,YACtB4f,EAASjgB,EAAQ5M,KAAKkN,YAQtB,IALA,IACI4f,EAAKC,EACLC,EAAKC,EACLC,EAAMC,EACNnhB,EAAGya,EAJHkC,EAAI7c,KAAK+B,IAAI/B,KAAKC,KAAK6gB,EAASA,EAASC,EAASA,GAAU,GAAM,GAK7D1c,EAAI,EAAGA,EAAIwY,EAAGxY,IAAK,CACxBnE,GAAKmE,EAAI,GAAKwY,EACdmE,EAAMngB,EAAQ3M,KAAKiN,YACnB8f,EAAMngB,EAAQ5M,KAAKkN,YACnB4f,GAAO9gB,EACP+gB,GAAO/gB,EACP8gB,EAAM9sB,KAAKiN,YAAc6f,EACzBC,EAAM/sB,KAAKkN,YAAc6f,EACzBC,EAAMJ,EAAS5sB,KAAK0sB,WACpBO,EAAMJ,EAAS7sB,KAAK2sB,WACpBK,GAAOhhB,EACPihB,GAAOjhB,EACPghB,EAAMhtB,KAAK0sB,WAAaM,EACxBC,EAAMjtB,KAAK2sB,WAAaM,EACxB,IAIIG,EAJAC,EAAW,GAAMvhB,KAAK8B,IAAIgc,EAAW9d,KAAKC,KAAKihB,EAAMA,EAAMC,EAAMA,GAAO,IAE5EjtB,KAAKmqB,IAAImD,gBAAgBR,EAAKC,EAAW,GAANC,EAAiB,GAANC,EAAW,GAAI,IAG7D,IAAK,IAAInuB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAII8e,EAJAjP,EAAI3O,KAAKmrB,WAAa,IAAuB,IAAhBrf,KAAKG,SAClC2f,EAAO,IAAIrrB,EAAOgtB,WAItB,GAHA3B,EAAKzT,MAAwB,IAAhBrM,KAAKG,SAClB2f,EAAKE,KAAM,EAEPhgB,KAAKG,SAAW,GAAK,CACrB,IAAIuhB,EAA8E,KAApE1hB,KAAKG,SAAWjM,KAAK6pB,gBAAyC,GAAvB7pB,KAAK6pB,iBACtD4D,GAAYztB,KAAK8pB,cAAgB,GAAM,KAAQ0D,EAC/CE,GAAY1tB,KAAK8pB,cAAgB,EAAK,KAAQ0D,EAC9CG,GAAY3tB,KAAK8pB,cAAgB,EAAK,KAAQ0D,EAIlD5P,GAHA6P,EAAUA,EAAU,EAAI,EAAKA,EAAU,IAAM,IAAMA,IAG/B,IAFpBC,EAAUA,EAAU,EAAI,EAAKA,EAAU,IAAM,IAAMA,IAEb,GADtCC,EAAUA,EAAU,EAAI,EAAKA,EAAU,IAAM,IAAMA,QAInD/P,EAAQ5d,KAAK8pB,aAsDjB,GApDA8B,EAAKjd,GAAMiP,GAAS,GAAM,KAAQ,IAClCgO,EAAK9M,GAAMlB,GAAS,EAAK,KAAQ,IACjCgO,EAAK7d,GAAM6P,GAAS,EAAK,KAAQ,IACjCsP,EAAuB,IAAhBphB,KAAKG,SAAiB,GAC7BkhB,EAAuB,IAAhBrhB,KAAKG,SAAiB,GAI7BihB,GADAlhB,EAAIF,KAAKC,KAAKmhB,EAAOA,EAAOC,EAAOA,GAEnCA,GAAQnhB,EAERkhB,GADAzG,EAAoB,GAAhB3a,KAAKG,SAAgB,GAEzBkhB,GAAQ1G,EAEJ9X,EAAI,IACA7C,KAAKG,SAAW,GAChB2f,EAAK3kB,MAAwB,EAAhB6E,KAAKG,SAGlB2f,EAAK3kB,MAAwB,EAAhB6E,KAAKG,SAEtB2f,EAAKgC,oBAAoBd,EAAsB,IAAhBhhB,KAAKG,SAAiB,GAAI8gB,EAAsB,IAAhBjhB,KAAKG,SAAiB,GAAI,EAAG,EAAG,GAC/F2f,EAAKK,SAA2B,EAAhBngB,KAAKG,UAEhB0C,EAAI,IACL7C,KAAKG,SAAW,IAChB2f,EAAK3kB,MAAwB,EAAhB6E,KAAKG,SAClB2f,EAAKK,SAAW,IAGhBL,EAAK3kB,MAAwB,GAAhB6E,KAAKG,SAAiB,EACnC2f,EAAKK,SAA2B,EAAhBngB,KAAKG,UAEzBmhB,EAAqB,GAAhBthB,KAAKG,SAAiB,GAC3B2f,EAAKgC,oBAAoBd,EAAME,EAAMI,EAAK,GAAIL,EAAME,EAAMG,EAAK,GAAI,EAAG,EAAG,IAEpEze,EAAI,IACTye,EAAqB,GAAhBthB,KAAKG,SAAiB,GAC3B2f,EAAK3kB,MAAwB,GAAhB6E,KAAKG,SAAiB,GACnC2f,EAAKgC,oBAAoBd,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAAIH,EAAMG,EAAI,GAAKthB,KAAKI,IAAImhB,EAAU,KAC7FzB,EAAKK,SAAW,EAChBL,EAAKE,KAAM,IAGXF,EAAKgC,oBAAoBd,EAAMI,EAAMH,EAAMI,EAAY,GAANH,EAAgB,GAANC,EAAU,IACrErB,EAAKK,SAAWngB,KAAKG,SAAW,GAAM,EAAI,EAC1C2f,EAAK3kB,MAAwB,GAAhB6E,KAAKG,SAAiB,KAEvC2f,EAAK3kB,OAAS,IAEd2kB,EAAK3kB,OAAoB,GAAXomB,EACdrtB,KAAKqqB,WAAWtrB,KAAK6sB,GACjB5rB,KAAKqqB,WAAWjnB,OAAS,IAAK,CAC9B,IAAIyqB,EAAK/hB,KAAKmR,MAAsB,IAAhBnR,KAAKG,UACzBjM,KAAKqqB,WAAWjX,OAAOya,EAAI,KAIvC7tB,KAAK0sB,WAAaE,EAClB5sB,KAAK2sB,WAAaE,EAClB7sB,KAAKiN,YAAcN,EACnB3M,KAAKkN,YAAcN,KAzkBZ,CAAAzK,IAAA,QAAAzE,MAAA,WA4kBPsC,KAAKuqB,UAAW,EAChBvqB,KAAKqqB,WAAWjnB,OAAS,EACzBpD,KAAK0E,OAAOoG,wBACZ9K,KAAK0E,OAAO8D,MAAM,EAAG,EAAG,EAAG,GAEL,MAAlBxI,KAAKyD,WACLzD,KAAK+O,iBAllBF,CAAA5M,IAAA,eAAAzE,MAAA,WAqlBP,IAAImJ,EAAM,IAAIvG,EAAQwG,WAAW,KAAM,MAAM,EAAO,UACpDvG,EAAOutB,eAAeC,mBAAmBlnB,EAAK7G,KAAKkE,cAAe3D,EAAO0F,cAAcmE,YAAY,GAAO,GAAO,GACjHpK,KAAKyD,UAAYlD,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQmC,EAAKvG,EAAQqG,uBAAuBC,MAAM,GAAO,EAAO,aACzH5G,KAAKqJ,aAAe9I,EAAO0F,cAAcqD,kBAAkBtJ,KAAKmB,aAAcnB,KAAK8I,SAAU9I,KAAK+I,eAxlB3FqgB,EAAA,GA2lBf7oB,EAAO6oB,UAAYA,EA3lBvB,CA4lBG7oB,IAAWA,EAAS,KAGvB,SAAWA,GAAQ,IACTytB,EADS,SAAAC,GAEX,SAAAD,EAAYttB,EAAW2oB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAI,IAAAuE,EAAA,OAAA/wB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAguB,IAC/CE,EAAA/wB,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA6wB,GAAA1wB,KAAA0C,MAAM,EAAOU,KACRmpB,gBAAkB,GAEvBqE,EAAKtE,UAAY,EACjBsE,EAAKC,QAAU,GACfD,EAAKE,aAAe,EACpBF,EAAK7D,WAAa,IAAI5a,MACtBye,EAAK1D,UAAYnB,EACjB6E,EAAKzD,UAAYnB,EACjB4E,EAAKxD,UAAYnB,EACjB2E,EAAKvD,UAAYnB,EACjB0E,EAAKtD,UAAYnB,EACjByE,EAAKrD,UAAYnB,EACjBwE,EAAKpD,UAAYnB,EAd8BuE,EAFxC,OAAA/wB,OAAAiT,EAAA,EAAAjT,CAAA6wB,EAAAC,GAAA9wB,OAAA+E,EAAA,EAAA/E,CAAA6wB,EAAA,EAAA7rB,IAAA,eAAAzE,MAAA,SAkBE0E,EAAOC,EAASC,GACzBtC,KAAKquB,UAAY,IAAI/tB,EAAQwG,WAAWvG,EAAO0F,cAAcE,YAAcnG,KAAKmuB,QAAS5tB,EAAO0F,cAAcC,aAAelG,KAAKmuB,SAAS,EAAM,GACjJ,IAAIrgB,EAAK,IAAIvN,EAAOyG,OACpB8G,EAAG7G,MAAMjH,KAAKquB,UAAUnnB,MAAQ5E,EAAO4E,MAAOlH,KAAKquB,UAAUlnB,OAAS7E,EAAO6E,QAC7EnH,KAAKquB,UAAUjnB,KAAK9E,EAAQwL,EAAI,KAAM,KAAM,MAAM,GAClD9N,KAAKsuB,UAAYhsB,EACjBjC,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6wB,EAAA5wB,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAaoC,EAAOC,EAASC,KAxBtB,CAAAH,IAAA,UAAAzE,MAAA,WA2BPsC,KAAKsuB,UAAY,KACjBtuB,KAAKqqB,WAAWjnB,OAAS,EACzBpD,KAAKquB,UAAUnrB,UACflD,KAAKquB,UAAY,KACjB,IAAK,IAAIle,EAAI,EAAGA,EAAInQ,KAAKsqB,UAAUlnB,OAAQ+M,IACvCnQ,KAAKsqB,UAAUna,GAAGjN,UAEtBlD,KAAKsqB,UAAUlnB,OAAS,EACxBpD,KAAKsqB,UAAY,KACjBjqB,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6wB,EAAA5wB,WAAA,UAAA4C,MAAA1C,KAAA0C,QApCO,CAAAmC,IAAA,QAAAzE,MAAA,WAuCPsC,KAAKsqB,UAAY,KACjBtqB,KAAKsqB,UAAY,IAAI7a,MACrBzP,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKwqB,UAAWlqB,EAAQqG,uBAAuBC,MAAM,GAAM,IAC/H5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAKyqB,UAAWnqB,EAAQqG,uBAAuBC,MAAM,GAAM,IAC/H5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK0qB,UAAWpqB,EAAQqG,uBAAuBC,MAAM,GAAM,IAC/H5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK2qB,UAAWrqB,EAAQqG,uBAAuBC,MAAM,GAAM,IAC/H5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK4qB,UAAWtqB,EAAQqG,uBAAuBC,MAAM,GAAM,IAC/H5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK6qB,UAAWvqB,EAAQqG,uBAAuBC,MAAM,GAAM,IAC/H5G,KAAKsqB,UAAUvrB,KAAKwB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQ1E,KAAK8qB,UAAWxqB,EAAQqG,uBAAuBC,MAAM,GAAM,MA/CxH,CAAAzE,IAAA,OAAAzE,MAAA,WAqDP,IAHA,IAAIkuB,EACAC,GAAM,EACN7U,EAAMhX,KAAKqqB,WAAWjnB,OACjB+M,EAAI,EAAGA,EAAI6G,IAChB4U,EAAO5rB,KAAKqqB,WAAWla,IACd4b,KAAoB,IAAbH,EAAK3kB,MAAc,GAC/B2kB,EAAKI,KAAoB,IAAbJ,EAAK3kB,MAAc,GAC/B2kB,EAAKG,KAAoB,IAAbH,EAAK3kB,MAAc1G,EAAO0F,cAAcE,aACpDylB,EAAKI,KAAoB,IAAbJ,EAAK3kB,MAAe1G,EAAO0F,cAAcC,eAC/C0lB,EAAKE,KAAOhgB,KAAKG,SAAW,KAC1B4f,GAAMD,EAAKK,WACXjsB,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKsqB,UAAUsB,EAAKK,WAChDJ,EAAKD,EAAKK,UAEdjsB,KAAKmD,eAAe,GAAKyoB,EAAKG,MAAwB,EAAhBjgB,KAAKG,SAAe,IAAO2f,EAAK3kB,MAAQ,IAAM1G,EAAO0F,cAAcE,YACzGnG,KAAKmD,eAAe,GAAK5C,EAAO0F,cAAcC,aAAe0lB,EAAKI,MAAwB,EAAhBlgB,KAAKG,SAAe,IAAO2f,EAAK3kB,MAAQ,IAClHjH,KAAKmD,eAAe,GAAKyoB,EAAK3kB,OAAyB,GAAhB6E,KAAKG,SAAiB,IACzD2f,EAAKE,KAAOhgB,KAAKG,SAAW,IAC5BjM,KAAKqD,cAAc,GAAKyI,KAAKG,SAC7BjM,KAAKqD,cAAc,GAAKuoB,EAAKjd,EAAI3O,KAAKqD,cAAc,GACpDrD,KAAKqD,cAAc,GAAKuoB,EAAK9M,EAAI9e,KAAKqD,cAAc,GACpDrD,KAAKqD,cAAc,GAAKuoB,EAAK7d,EAAI/N,KAAKqD,cAAc,KAGpDrD,KAAKqD,cAAc,GAAKuoB,EAAKjd,EAC7B3O,KAAKqD,cAAc,GAAKuoB,EAAK9M,EAC7B9e,KAAKqD,cAAc,GAAKuoB,EAAK7d,EAC7B/N,KAAKqD,cAAc,GAAK,GAE5BrD,KAAKmD,eAAe,GAAKyoB,EAAKE,IAAsB,IAAhBhgB,KAAKG,SAAiB2f,EAAKzT,MAE/DnY,KAAKmD,eAAe,GAAKyoB,EAAK3kB,MAC9BjH,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAG5J,KAAKqD,eACzFrD,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKmD,gBACvFnD,KAAK0E,OAAO+D,cAAczI,KAAKuE,aAGnCqnB,EAAK5M,KAAO,GACZ4M,EAAK7gB,SACLoF,MAGAnQ,KAAKqqB,WAAWjX,OAAOjD,EAAG,GAC1B6G,KAGRhX,KAAKqD,cAAc,GAAK,IAhGjB,CAAAlB,IAAA,aAAAzE,MAAA,SAkGA+N,EAAIE,GAGX,IAAIgB,EACAC,EAHJ5M,KAAKouB,eAML,IAEIhB,EACAtD,EAOAoD,EAAMC,EACNnhB,EAAGya,EAEH8H,EACA1P,EAdA2P,EAAc,IAAL/iB,EACTgjB,EAAc,IAAL9iB,EAGT0hB,EAAW,GAAMvhB,KAAK8B,IAAI5N,KAAK4pB,UAAW9d,KAAKC,KAAKyiB,EAAQA,EAAQC,EAAQA,GAAS,IACrF9F,EAAI7c,KAAK+B,IAAI/B,KAAKC,KAAKyiB,EAAQA,EAAQC,EAAQA,GAAQ,IACvDzuB,KAAKY,UACDysB,EAAW,MACXA,EAAW,KAOnB,IAAK,IAAIld,EAAI,EAAGA,EAAIwY,EAAGxY,IAAK,CACxB,IAAK,IAAIue,EAAK,EAAGA,EAAK,KAClB9hB,EAAQd,KAAKmR,MAAMnR,KAAKG,SAAW1L,EAAO0F,cAAcC,cACxDyG,EAAQb,KAAKmR,MAAMnR,KAAKG,SAAW1L,EAAO0F,cAAcE,gBAExD0Y,GADAiL,EAAe9pB,KAAKquB,UAAUxH,WAAWla,EAAQpM,EAAO0F,cAAcE,aAAe5F,EAAO0F,cAAcE,YAAcnG,KAAKmuB,UAAW5tB,EAAO0F,cAAcC,aAAe0G,GAASrM,EAAO0F,cAAcC,cAAgB3F,EAAO0F,cAAcC,aAAelG,KAAKmuB,YAC1O,GAAK,KAClB,IALUO,KAQ1B,GAAI7P,EAAQ,EACR,QACJ0P,EAAaziB,KAAKI,IAAI2S,EAAQ,IAAO,IACpB,IACb0P,GAAc,IAClB,IAII3Q,EAJAjP,EAAoB,IAAhB7C,KAAKG,SACT2f,EAAO,IAAIrrB,EAAOgtB,WAItB,GAHA3B,EAAKzT,MAAwB,IAAhBrM,KAAKG,SAClB2f,EAAKE,KAAM,EAEPhgB,KAAKG,SAAW,GAAK,CACrB,IAAIuhB,EAA8E,KAApE1hB,KAAKG,SAAWjM,KAAK6pB,gBAAyC,GAAvB7pB,KAAK6pB,iBACtD4D,GAAY3D,GAAgB,GAAM,KAAQ0D,EAC1CE,GAAY5D,GAAgB,EAAK,KAAQ0D,EACzCG,GAAY7D,GAAgB,EAAK,KAAQ0D,EAI7C5P,GAHA6P,EAAUA,EAAU,EAAI,EAAKA,EAAU,IAAM,IAAMA,IAG/B,IAFpBC,EAAUA,EAAU,EAAI,EAAKA,EAAU,IAAM,IAAMA,IAEb,GADtCC,EAAUA,EAAU,EAAI,EAAKA,EAAU,IAAM,IAAMA,QAInD/P,EAAQkM,EAsDZ,GApDA8B,EAAKjd,GAAMiP,GAAS,GAAM,KAAQ,IAClCgO,EAAK9M,GAAMlB,GAAS,EAAK,KAAQ,IACjCgO,EAAK7d,GAAM6P,GAAS,EAAK,KAAQ,IACjCsP,EAAuB,IAAhBphB,KAAKG,SAAiB,GAC7BkhB,EAAuB,IAAhBrhB,KAAKG,SAAiB,GAG7BihB,GADAlhB,EAAIF,KAAKC,KAAKmhB,EAAOA,EAAOC,EAAOA,GAEnCA,GAAQnhB,EAERkhB,GADAzG,EAAoB,GAAhB3a,KAAKG,SAAgB,GAEzBkhB,GAAQ1G,EACJ9X,EAAI,IAGJid,EAAK3kB,MAAuC,EAA/B6E,KAAKI,IAAIJ,KAAKG,SAAU,IAAaohB,EAAWkB,GAAcvuB,KAAKY,SAAW,GAAM,GACjGgrB,EAAKK,SAAWngB,KAAKmR,MAAsB,EAAhBnR,KAAKG,UACX,GAAjB2f,EAAKK,WACLL,EAAKK,SAAW,GACpBL,EAAKgC,oBAAoBjhB,EAAwB,IAAhBb,KAAKG,SAAiB,IAAKW,EAAwB,IAAhBd,KAAKG,SAAiB,IAAK,EAAG,EAAG,IAGhG0C,EAAI,IAGTid,EAAK3kB,MAAuC,EAA/B6E,KAAKI,IAAIJ,KAAKG,SAAU,IAAaohB,EAAWkB,GAAcvuB,KAAKY,SAAW,GAAM,GACjGgrB,EAAKK,SAAWngB,KAAKmR,MAAsB,EAAhBnR,KAAKG,UACX,GAAjB2f,EAAKK,WACLL,EAAKK,SAAW,GACpBL,EAAKgC,oBAAoBjhB,EAAwB,IAAhBb,KAAKG,SAAiB,GAAIW,EAAwB,IAAhBd,KAAKG,SAAiB,GAAI,EAAG,EAAG,IAG9F0C,EAAI,IAETye,EAAmC,IAAb,GAAhBthB,KAAKG,SAAiB,IAAasiB,EAAalB,GAAYrtB,KAAKY,SAAW,GAAM,GACxFgrB,EAAK3kB,OAAyB,GAAhB6E,KAAKG,SAAiB,GAAOsiB,EAAalB,GAAYrtB,KAAKY,SAAW,GAAM,GAC1FgrB,EAAKgC,oBAAoBjhB,EAAQugB,EAAMtgB,EAAQugB,EAAMqB,EAAQpB,EAAIqB,EAAQrB,EAAIptB,KAAKY,SAAW,GAAK,IAClGgrB,EAAKK,SAAW,EAChBL,EAAKE,IAAMhgB,KAAKG,SAAW,KAK3BmhB,EAAkC,GAA7BthB,KAAKI,IAAIJ,KAAKG,SAAU,GAAWsiB,GAAcvuB,KAAKY,SAAW,GAAM,GAC5EgrB,EAAKgC,oBAAoBjhB,EAAQugB,EAAMtgB,EAAQugB,EAAMqB,EAAQpB,EAAIqB,EAAQrB,EAAIptB,KAAKY,SAAW,EAAI,IACjGgrB,EAAKK,SAAWngB,KAAKG,SAAW,GAAM,EAAI,EAC1C2f,EAAK3kB,OAAyB,IAAhB6E,KAAKG,SAAiB,IAAOsiB,EAAalB,GAAYrtB,KAAKY,SAAW,GAAM,GAC1FgrB,EAAKE,MAAuB,GAAjBF,EAAKK,UAAiBmB,EAAK,KAG1CxB,EAAK3kB,OAAS,GACdjH,KAAKqqB,WAAWtrB,KAAK6sB,GACjB5rB,KAAKqqB,WAAWjnB,OAAS,IAAK,CAC9B,IAAIyqB,EAAqB,IAAhB/hB,KAAKG,SACdjM,KAAKqqB,WAAWjX,OAAOya,EAAI,OA9M5B,CAAA1rB,IAAA,QAAAzE,MAAA,WAmNPsC,KAAKouB,aAAe,EACpBpuB,KAAKqqB,WAAWjnB,OAAS,EACzB/C,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6wB,EAAA5wB,WAAA,QAAA4C,MAAA1C,KAAA0C,UArNOguB,EAAA,CACUztB,EAAOC,eAuNhCD,EAAOytB,WAAaA,EAxNxB,CAyNGztB,IAAWA,EAAS,KASnB,SAAWoC,GAAQ,IACTC,EADS,WAEX,SAAAA,EAAY+rB,GAAOxxB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA4C,GACf5C,KAAK2uB,UAAOlvB,EACZO,KAAKvC,YAASgC,EACdO,KAAK2uB,KAAOA,EALL,OAAAxxB,OAAA+E,EAAA,EAAA/E,CAAAyF,EAAA,EAAAT,IAAA,QAAAzE,MAAA,WAQP,OAAO,IAAIkF,EAAM5C,KAAK2uB,UARf/rB,EAAA,GAWfA,EAAMC,iBAAmB,mBACzBD,EAAMG,YAAc,cACpBH,EAAMgG,SAAW,WACjBjG,EAAOC,MAAQA,EAdnB,EAFOtC,EAkBRA,IAAYA,EAAU,KADDqC,SAAWrC,EAAQqC,OAAS,KAIpD,SAAWrC,IAEP,SAAWqC,GAAQ,IACTisB,EADS,SAAAC,GAEX,SAAAD,IAAe,OAAAzxB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA4uB,GAAAzxB,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAAyxB,GAAAtxB,KAAA0C,KACL4uB,EAAWE,QAHV,OAAA3xB,OAAAiT,EAAA,EAAAjT,CAAAyxB,EAAAC,GAAAD,EAAA,CACUtuB,EAAQqC,OAAOC,OAKxCgsB,EAAWE,MAAQ,QACnBnsB,EAAOisB,WAAaA,EAPxB,CAQYtuB,EAAQqC,SAAWrC,EAAQqC,OAAS,KAVpD,CAWGrC,IAAYA,EAAU,KAGzB,SAAWA,IAEP,SAAWqC,GAAQ,IASTosB,EATS,WAUX,SAAAA,IAA2B,IAAftxB,EAAe4B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,KAAMlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA+uB,GACvB/uB,KAAKgvB,UAAY,IAAIvf,MACrBzP,KAAKvC,OAASA,GAAUuC,KAZjB,OAAA7C,OAAA+E,EAAA,EAAA/E,CAAA4xB,EAAA,EAAA5sB,IAAA,mBAAAzE,MAAA,SAoBMixB,EAAMM,QACUxvB,IAAzBO,KAAKgvB,UAAUL,KACf3uB,KAAKgvB,UAAUL,GAAQ,IAAIlf,QACqB,IAAhDzP,KAAKkvB,sBAAsBP,EAAMM,IACjCjvB,KAAKgvB,UAAUL,GAAM5vB,KAAKkwB,KAxBvB,CAAA9sB,IAAA,sBAAAzE,MAAA,SAgCSixB,EAAMM,GACtB,IAAIrY,EAAQ5W,KAAKkvB,sBAAsBP,EAAMM,IAC9B,IAAXrY,GACA5W,KAAKgvB,UAAUL,GAAMvb,OAAOwD,EAAO,KAnChC,CAAAzU,IAAA,gBAAAzE,MAAA,SA0CGyxB,GACV,IAAIC,EAAgBpvB,KAAKgvB,UAAUG,EAAMR,MACzC,QAAsBlvB,IAAlB2vB,EAA6B,CAC7B,IAAIvjB,EAAIujB,EAAchsB,OACtB+rB,EAAM1xB,OAASuC,KAAKvC,OACpB,IAAK,IAAI0S,EAAI,EAAGA,EAAItE,EAAGsE,IACnBif,EAAcjf,GAAGgf,MAhDlB,CAAAhtB,IAAA,wBAAAzE,MAAA,SAyDWixB,EAAMM,GACxB,QAA6BxvB,IAAzBO,KAAKgvB,UAAUL,GAGf,IAFA,IAAI7vB,EAAIkB,KAAKgvB,UAAUL,GACnB9iB,EAAI/M,EAAEsE,OACD+M,EAAI,EAAGA,EAAItE,EAAGsE,IACnB,GAAI8e,GAAYnwB,EAAEqR,GACd,OAAOA,EAEnB,OAAQ,IAjED,CAAAhO,IAAA,mBAAAzE,MAAA,SAyEMixB,EAAMM,GACnB,OAAgB,MAAZA,GACwD,IAAhDjvB,KAAKkvB,sBAAsBP,EAAMM,QAGZxvB,IAAzBO,KAAKgvB,UAAUL,IACP3uB,KAAKgvB,UAAUL,GAAMvrB,OAAS,MA/EvC2rB,EAAA,GAoFfpsB,EAAOosB,gBAAkBA,EApF7B,CAqFYzuB,EAAQqC,SAAWrC,EAAQqC,OAAS,KAvFpD,CAwFGrC,IAAYA,EAAU,KAGzB,SAAWA,IAEP,SAAW8E,GAAM,IACPiqB,EADO,SAAAA,IAAAlyB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAqvB,IAGbA,EAAcC,WAAa,YAC3BD,EAAcE,aAAe,cAC7BF,EAAcG,WAAa,aAC3BpqB,EAAKiqB,cAAgBA,EANzB,CAOU/uB,EAAQ8E,OAAS9E,EAAQ8E,KAAO,KAT9C,CAUG9E,IAAYA,EAAU,KAGzB,SAAWA,IAEP,SAAW8E,GAAM,IACPqqB,EADO,WAaT,SAAAA,IAAwC,IAA5BpjB,EAA4BhN,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAxB,EAAGiN,EAAqBjN,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAjB,EAAG6Z,EAAc7Z,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAV,EAAG8Z,EAAO9Z,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAAGlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAyvB,GACpCzvB,KAAKqM,EAAIA,EACTrM,KAAKsM,EAAIA,EACTtM,KAAKkZ,EAAIA,EACTlZ,KAAKmZ,EAAIA,EAjBJ,OAAAhc,OAAA+E,EAAA,EAAA/E,CAAAsyB,EAAA,EAAAttB,IAAA,MAAAzE,MAAA,SA+DLoB,GACA,OAAO,IAAI2wB,EAASzvB,KAAKqM,EAAIvN,EAAEuN,EAAGrM,KAAKsM,EAAIxN,EAAEwN,EAAGtM,KAAKkZ,EAAIpa,EAAEoa,KAhEtD,CAAA/W,IAAA,WAAAzE,MAAA,SA8EAoB,GACL,OAAO,IAAI2wB,EAASzvB,KAAKqM,EAAIvN,EAAEuN,EAAGrM,KAAKsM,EAAIxN,EAAEwN,EAAGtM,KAAKkZ,EAAIpa,EAAEoa,KA/EtD,CAAA/W,IAAA,cAAAzE,MAAA,SA2FGoB,GACRkB,KAAKqM,GAAKvN,EAAEuN,EACZrM,KAAKsM,GAAKxN,EAAEwN,EACZtM,KAAKkZ,GAAKpa,EAAEoa,IA9FP,CAAA/W,IAAA,cAAAzE,MAAA,SA0GGoB,GACRkB,KAAKqM,GAAKvN,EAAEuN,EACZrM,KAAKsM,GAAKxN,EAAEwN,EACZtM,KAAKkZ,GAAKpa,EAAEoa,IA7GP,CAAA/W,IAAA,SAAAzE,MAAA,SA8HFgyB,GAA4B,IAAjBC,EAAiBtwB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAC/B,OAAQW,KAAKqM,GAAKqjB,EAAUrjB,GAAKrM,KAAKsM,GAAKojB,EAAUpjB,GAAKtM,KAAKkZ,GAAKwW,EAAUxW,KAAMyW,GAAU3vB,KAAKmZ,GAAKuW,EAAUvW,KA/H7G,CAAAhX,IAAA,aAAAzE,MAAA,SAqJEgyB,EAAWE,GAA4B,IAAjBD,EAAiBtwB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAC1CkO,EAAMzB,KAAKyB,IACf,OAASA,EAAIvN,KAAKqM,EAAIqjB,EAAUrjB,GAAKujB,GAAeriB,EAAIvN,KAAKsM,EAAIojB,EAAUpjB,GAAKsjB,GAAeriB,EAAIvN,KAAKkZ,EAAIwW,EAAUxW,GAAK0W,KAAeD,GAAWpiB,EAAIvN,KAAKmZ,EAAIuW,EAAUvW,GAAKyW,KAvJ5K,CAAAztB,IAAA,QAAAzE,MAAA,WAiKL,OAAO,IAAI+xB,EAASzvB,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAKkZ,EAAGlZ,KAAKmZ,KAjK5C,CAAAhX,IAAA,WAAAzE,MAAA,SAsKAmyB,GACL7vB,KAAKqM,EAAIwjB,EAAexjB,EACxBrM,KAAKsM,EAAIujB,EAAevjB,EACxBtM,KAAKkZ,EAAI2W,EAAe3W,EACxBlZ,KAAKmZ,EAAI0W,EAAe1W,IA1KnB,CAAAhX,IAAA,SAAAzE,MAAA,WAsLLsC,KAAKqM,GAAKrM,KAAKqM,EACfrM,KAAKsM,GAAKtM,KAAKsM,EACftM,KAAKkZ,GAAKlZ,KAAKkZ,IAxLV,CAAA/W,IAAA,UAAAzE,MAAA,SAsMDoyB,GACJ9vB,KAAKqM,GAAKyjB,EACV9vB,KAAKsM,GAAKwjB,EACV9vB,KAAKkZ,GAAK4W,IAzML,CAAA3tB,IAAA,QAAAzE,MAAA,SA8MHqyB,EAAIC,EAAIC,GACVjwB,KAAKqM,EAAI0jB,EACT/vB,KAAKsM,EAAI0jB,EACThwB,KAAKkZ,EAAI+W,IAjNJ,CAAA9tB,IAAA,YAAAzE,MAAA,WA8NL,IAAIwyB,EAAOlwB,KAAKoD,OAGhB,OAFY,GAAR8sB,GACAlwB,KAAKmwB,QAAQ,EAAID,GACdA,IAjOF,CAAA/tB,IAAA,eAAAzE,MAAA,SAmPIoB,GACT,OAAO,IAAI2wB,EAASzvB,KAAKsM,EAAIxN,EAAEoa,EAAIlZ,KAAKkZ,EAAIpa,EAAEwN,EAAGtM,KAAKkZ,EAAIpa,EAAEuN,EAAIrM,KAAKqM,EAAIvN,EAAEoa,EAAGlZ,KAAKqM,EAAIvN,EAAEwN,EAAItM,KAAKsM,EAAIxN,EAAEuN,KApPnG,CAAAlK,IAAA,aAAAzE,MAAA,SAyQEoB,GACP,OAAQkB,KAAKqM,EAAIvN,EAAEuN,EAAIrM,KAAKsM,EAAIxN,EAAEwN,EAAItM,KAAKkZ,EAAIpa,EAAEoa,IA1Q5C,CAAA/W,IAAA,UAAAzE,MAAA,WAyRS,GAAVsC,KAAKmZ,IAETnZ,KAAKqM,GAAKrM,KAAKmZ,EACfnZ,KAAKsM,GAAKtM,KAAKmZ,EACfnZ,KAAKkZ,GAAKlZ,KAAKmZ,KA7RV,CAAAhX,IAAA,WAAAzE,MAAA,WAmSL,MAAO,iBAAmBsC,KAAKqM,EAAI,OAASrM,KAAKsM,EAAI,OAAStM,KAAKkZ,EAAI,OAASlZ,KAAKmZ,EAAI,MAnSpF,CAAAhX,IAAA,SAAArC,IAAA,WAuBL,OAAOgM,KAAKC,KAAK/L,KAAKowB,iBAvBjB,CAAAjuB,IAAA,gBAAArC,IAAA,WA6BL,OAAOE,KAAKqM,EAAIrM,KAAKqM,EAAIrM,KAAKsM,EAAItM,KAAKsM,EAAItM,KAAKkZ,EAAIlZ,KAAKkZ,KA7BpD,EAAA/W,IAAA,eAAAzE,MAAA,SAkCWoB,EAAGiP,GACnB,OAAOjC,KAAKukB,KAAKvxB,EAAEwxB,WAAWviB,IAAMjP,EAAEsE,OAAS2K,EAAE3K,WAnC5C,CAAAjB,IAAA,WAAAzE,MAAA,SAwCO6yB,EAAKC,GACjB,IAAInkB,EAAKkkB,EAAIlkB,EAAImkB,EAAInkB,EACjBC,EAAKikB,EAAIjkB,EAAIkkB,EAAIlkB,EACjB4M,EAAKqX,EAAIrX,EAAIsX,EAAItX,EACrB,OAAOpN,KAAKC,KAAKM,EAAIA,EAAIC,EAAIA,EAAI4M,EAAIA,OA5ChCuW,EAAA,GAySbA,EAASgB,OAAS,IAAIhB,EAAS,EAAG,EAAG,GAIrCA,EAASiB,OAAS,IAAIjB,EAAS,EAAG,EAAG,GAIrCA,EAASkB,OAAS,IAAIlB,EAAS,EAAG,EAAG,GACrCrqB,EAAKqqB,SAAWA,EAlTpB,CAmTUnvB,EAAQ8E,OAAS9E,EAAQ8E,KAAO,KArT9C,CAsTG9E,IAAYA,EAAU,KAGzB,SAAWA,IAEP,SAAW8E,GAAM,IACPC,EADO,WAKT,SAAAA,IAAsB,IAAVsjB,EAAUtpB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,KAAMlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAqF,GACT,MAALsjB,GAAyB,IAAZA,EAAEvlB,OACfpD,KAAK4wB,QAAU,IAAIC,aAAalI,EAAEmI,MAAM,IAExC9wB,KAAK4wB,QAAU,IAAIC,aAAa,CAC5B,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,IAbZ,OAAA1zB,OAAA+E,EAAA,EAAA/E,CAAAkI,EAAA,EAAAlD,IAAA,SAAAzE,MAAA,SAkCFqzB,GAEH,IAAIC,EAAMD,EAAIH,QAAQ,GAClBK,EAAMF,EAAIH,QAAQ,GAClBM,EAAMH,EAAIH,QAAQ,GAClBO,EAAMJ,EAAIH,QAAQ,GAClBQ,EAAML,EAAIH,QAAQ,GAClBS,EAAMN,EAAIH,QAAQ,GAClBU,EAAMP,EAAIH,QAAQ,GAClBW,EAAMR,EAAIH,QAAQ,GAClBY,EAAMT,EAAIH,QAAQ,GAClBa,EAAMV,EAAIH,QAAQ,GAClBc,EAAMX,EAAIH,QAAQ,IAClBe,EAAMZ,EAAIH,QAAQ,IAClBgB,EAAMb,EAAIH,QAAQ,IAClBiB,EAAMd,EAAIH,QAAQ,IAClBkB,EAAMf,EAAIH,QAAQ,IAClBmB,EAAMhB,EAAIH,QAAQ,IAClBoB,EAAMhyB,KAAK4wB,QAAQ,GACnBqB,EAAMjyB,KAAK4wB,QAAQ,GACnBsB,EAAMlyB,KAAK4wB,QAAQ,GACnBuB,EAAMnyB,KAAK4wB,QAAQ,GACnBwB,EAAMpyB,KAAK4wB,QAAQ,GACnByB,EAAMryB,KAAK4wB,QAAQ,GACnB0B,EAAMtyB,KAAK4wB,QAAQ,GACnB2B,EAAMvyB,KAAK4wB,QAAQ,GACnB4B,EAAMxyB,KAAK4wB,QAAQ,GACnB6B,EAAMzyB,KAAK4wB,QAAQ,GACnB8B,EAAM1yB,KAAK4wB,QAAQ,IACnB+B,EAAM3yB,KAAK4wB,QAAQ,IACnBgC,EAAM5yB,KAAK4wB,QAAQ,IACnBiC,EAAM7yB,KAAK4wB,QAAQ,IACnBkC,EAAM9yB,KAAK4wB,QAAQ,IACnBmC,EAAM/yB,KAAK4wB,QAAQ,IAEvB5wB,KAAK4wB,QAAQ,GAAKI,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAC5D5yB,KAAK4wB,QAAQ,GAAKI,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,EAC5D7yB,KAAK4wB,QAAQ,GAAKI,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAMvB,EAAM2B,EAC5D9yB,KAAK4wB,QAAQ,GAAKI,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAAMxB,EAAM4B,EAC5D/yB,KAAK4wB,QAAQ,GAAKQ,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAC5D5yB,KAAK4wB,QAAQ,GAAKQ,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAC5D7yB,KAAK4wB,QAAQ,GAAKQ,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAC5D9yB,KAAK4wB,QAAQ,GAAKQ,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAC5D/yB,KAAK4wB,QAAQ,GAAKY,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAC5D5yB,KAAK4wB,QAAQ,GAAKY,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAC5D7yB,KAAK4wB,QAAQ,IAAMY,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAC7D9yB,KAAK4wB,QAAQ,IAAMY,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAC7D/yB,KAAK4wB,QAAQ,IAAMgB,EAAMI,EAAMH,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAC7D5yB,KAAK4wB,QAAQ,IAAMgB,EAAMK,EAAMJ,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAC7D7yB,KAAK4wB,QAAQ,IAAMgB,EAAMM,EAAML,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EAC7D9yB,KAAK4wB,QAAQ,IAAMgB,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,IApFxD,CAAA5wB,IAAA,UAAAzE,MAAA,SAyFDs1B,GAEJ,IAAIhC,EAAMgC,EAAIpC,QAAQ,GAClBK,EAAM+B,EAAIpC,QAAQ,GAClBM,EAAM8B,EAAIpC,QAAQ,GAClBO,EAAM6B,EAAIpC,QAAQ,GAClBQ,EAAM4B,EAAIpC,QAAQ,GAClBS,EAAM2B,EAAIpC,QAAQ,GAClBU,EAAM0B,EAAIpC,QAAQ,GAClBW,EAAMyB,EAAIpC,QAAQ,GAClBY,EAAMwB,EAAIpC,QAAQ,GAClBa,EAAMuB,EAAIpC,QAAQ,GAClBc,EAAMsB,EAAIpC,QAAQ,IAClBe,EAAMqB,EAAIpC,QAAQ,IAClBgB,EAAMoB,EAAIpC,QAAQ,IAClBiB,EAAMmB,EAAIpC,QAAQ,IAClBkB,EAAMkB,EAAIpC,QAAQ,IAClBmB,EAAMiB,EAAIpC,QAAQ,IAClBoB,EAAMhyB,KAAK4wB,QAAQ,GACnBqB,EAAMjyB,KAAK4wB,QAAQ,GACnBsB,EAAMlyB,KAAK4wB,QAAQ,GACnBuB,EAAMnyB,KAAK4wB,QAAQ,GACnBwB,EAAMpyB,KAAK4wB,QAAQ,GACnByB,EAAMryB,KAAK4wB,QAAQ,GACnB0B,EAAMtyB,KAAK4wB,QAAQ,GACnB2B,EAAMvyB,KAAK4wB,QAAQ,GACnB4B,EAAMxyB,KAAK4wB,QAAQ,GACnB6B,EAAMzyB,KAAK4wB,QAAQ,GACnB8B,EAAM1yB,KAAK4wB,QAAQ,IACnB+B,EAAM3yB,KAAK4wB,QAAQ,IACnBgC,EAAM5yB,KAAK4wB,QAAQ,IACnBiC,EAAM7yB,KAAK4wB,QAAQ,IACnBkC,EAAM9yB,KAAK4wB,QAAQ,IACnBmC,EAAM/yB,KAAK4wB,QAAQ,IAEvB5wB,KAAK4wB,QAAQ,GAAKoB,EAAMhB,EAAMiB,EAAMb,EAAMc,EAAMV,EAAMW,EAAMP,EAC5D5xB,KAAK4wB,QAAQ,GAAKoB,EAAMf,EAAMgB,EAAMZ,EAAMa,EAAMT,EAAMU,EAAMN,EAC5D7xB,KAAK4wB,QAAQ,GAAKoB,EAAMd,EAAMe,EAAMX,EAAMY,EAAMR,EAAMS,EAAML,EAC5D9xB,KAAK4wB,QAAQ,GAAKoB,EAAMb,EAAMc,EAAMV,EAAMW,EAAMP,EAAMQ,EAAMJ,EAC5D/xB,KAAK4wB,QAAQ,GAAKwB,EAAMpB,EAAMqB,EAAMjB,EAAMkB,EAAMd,EAAMe,EAAMX,EAC5D5xB,KAAK4wB,QAAQ,GAAKwB,EAAMnB,EAAMoB,EAAMhB,EAAMiB,EAAMb,EAAMc,EAAMV,EAC5D7xB,KAAK4wB,QAAQ,GAAKwB,EAAMlB,EAAMmB,EAAMf,EAAMgB,EAAMZ,EAAMa,EAAMT,EAC5D9xB,KAAK4wB,QAAQ,GAAKwB,EAAMjB,EAAMkB,EAAMd,EAAMe,EAAMX,EAAMY,EAAMR,EAC5D/xB,KAAK4wB,QAAQ,GAAK4B,EAAMxB,EAAMyB,EAAMrB,EAAMsB,EAAMlB,EAAMmB,EAAMf,EAC5D5xB,KAAK4wB,QAAQ,GAAK4B,EAAMvB,EAAMwB,EAAMpB,EAAMqB,EAAMjB,EAAMkB,EAAMd,EAC5D7xB,KAAK4wB,QAAQ,IAAM4B,EAAMtB,EAAMuB,EAAMnB,EAAMoB,EAAMhB,EAAMiB,EAAMb,EAC7D9xB,KAAK4wB,QAAQ,IAAM4B,EAAMrB,EAAMsB,EAAMlB,EAAMmB,EAAMf,EAAMgB,EAAMZ,EAC7D/xB,KAAK4wB,QAAQ,IAAMgC,EAAM5B,EAAM6B,EAAMzB,EAAM0B,EAAMtB,EAAMuB,EAAMnB,EAC7D5xB,KAAK4wB,QAAQ,IAAMgC,EAAM3B,EAAM4B,EAAMxB,EAAMyB,EAAMrB,EAAMsB,EAAMlB,EAC7D7xB,KAAK4wB,QAAQ,IAAMgC,EAAM1B,EAAM2B,EAAMvB,EAAMwB,EAAMpB,EAAMqB,EAAMjB,EAC7D9xB,KAAK4wB,QAAQ,IAAMgC,EAAMzB,EAAM0B,EAAMtB,EAAMuB,EAAMnB,EAAMoB,EAAMhB,IA3IxD,CAAA5vB,IAAA,cAAAzE,MAAA,SAgJGu1B,EAAQC,EAAQC,GAOxBnzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,IAAMuC,EACnBnzB,KAAK4wB,QAAQ,IAAMuC,EACnBnzB,KAAK4wB,QAAQ,KAAOuC,EACpBnzB,KAAK4wB,QAAQ,KAAOuC,IAlKf,CAAAhxB,IAAA,eAAAzE,MAAA,SAuKIu1B,EAAQC,EAAQC,GAOzBnzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,IAAMuC,EACnBnzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,IAAMuC,EACnBnzB,KAAK4wB,QAAQ,IAAMqC,EACnBjzB,KAAK4wB,QAAQ,IAAMsC,EACnBlzB,KAAK4wB,QAAQ,KAAOuC,EACpBnzB,KAAK4wB,QAAQ,KAAOqC,EACpBjzB,KAAK4wB,QAAQ,KAAOsC,EACpBlzB,KAAK4wB,QAAQ,KAAOuC,IAzLf,CAAAhxB,IAAA,oBAAAzE,MAAA,SA8LS2O,EAAGC,EAAG4M,GAOpBlZ,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMvkB,EACtCrM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMvkB,EACtCrM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMvkB,EACtCrM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMvkB,EACtCrM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMtkB,EACtCtM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMtkB,EACtCtM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMtkB,EACtCtM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMtkB,EACtCtM,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM1X,EACtClZ,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM1X,EACtClZ,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,IAAM1X,EACvClZ,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,IAAM1X,IAhNlC,CAAA/W,IAAA,qBAAAzE,MAAA,SAqNU2O,EAAGC,EAAG4M,GAOrBlZ,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAKvkB,EAAIrM,KAAK4wB,QAAQ,GAAKtkB,EAAItM,KAAK4wB,QAAQ,GAAK1X,EAAIlZ,KAAK4wB,QAAQ,GACjG5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAKvkB,EAAIrM,KAAK4wB,QAAQ,GAAKtkB,EAAItM,KAAK4wB,QAAQ,GAAK1X,EAAIlZ,KAAK4wB,QAAQ,GACjG5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,GAAKvkB,EAAIrM,KAAK4wB,QAAQ,GAAKtkB,EAAItM,KAAK4wB,QAAQ,IAAM1X,EAAIlZ,KAAK4wB,QAAQ,IACnG5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAMvkB,EAAIrM,KAAK4wB,QAAQ,IAAMtkB,EAAItM,KAAK4wB,QAAQ,IAAM1X,EAAIlZ,KAAK4wB,QAAQ,MA/NhG,CAAAzuB,IAAA,iBAAAzE,MAAA,SAoOM01B,EAASC,GAAyB,IAAnBC,EAAmBj0B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,KACnCsP,EAAI3O,KAAKuzB,gBAAgBF,EAAMD,EAAU/tB,EAASmuB,WAClDF,GAEAtzB,KAAKwG,mBAAmB8sB,EAAWjnB,GAAIinB,EAAWhnB,GAAIgnB,EAAWpa,GACjElZ,KAAKyzB,OAAO9kB,GACZ3O,KAAKwG,kBAAkB8sB,EAAWjnB,EAAGinB,EAAWhnB,EAAGgnB,EAAWpa,IAG9DlZ,KAAKyzB,OAAO9kB,KA7OX,CAAAxM,IAAA,kBAAAzE,MAAA,SAmPO01B,EAASC,GAAyB,IAAnBC,EAAmBj0B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,KACpCsP,EAAI3O,KAAKuzB,gBAAgBF,EAAMD,EAAU/tB,EAASmuB,WAClDF,GAEAtzB,KAAK0zB,mBAAmBJ,EAAWjnB,EAAGinB,EAAWhnB,EAAGgnB,EAAWpa,GAC/DlZ,KAAK2zB,QAAQhlB,GACb3O,KAAK0zB,oBAAoBJ,EAAWjnB,GAAIinB,EAAWhnB,GAAIgnB,EAAWpa,IAGlElZ,KAAK2zB,QAAQhlB,KA5PZ,CAAAxM,IAAA,QAAAzE,MAAA,WAmQL,OAAO,IAAI2H,EAASoK,MAAMrS,UAAU0zB,MAAMxzB,KAAK0C,KAAK4wB,YAnQ/C,CAAAzuB,IAAA,iBAAAzE,MAAA,SAwQMk2B,EAAiBC,GAC5B,GAAID,EAAS,GAAKA,EAAS,EACvB,MAAM,IAAIE,MAAM,gBACpB9zB,KAAK4wB,QAAQgD,GAAUC,EAASxnB,EAChCrM,KAAK4wB,QAAQgD,EAAS,GAAKC,EAASvnB,EACpCtM,KAAK4wB,QAAQgD,EAAS,GAAKC,EAAS3a,EACpClZ,KAAK4wB,QAAQgD,EAAS,IAAMC,EAAS1a,IA9QhC,CAAAhX,IAAA,eAAAzE,MAAA,SAmRIk2B,EAAiBC,GAC1B,GAAID,EAAS,GAAKA,EAAS,EACvB,MAAM,IAAIE,MAAM,gBACpBD,EAASxnB,EAAIrM,KAAK4wB,QAAQgD,GAC1BC,EAASvnB,EAAItM,KAAK4wB,QAAQgD,EAAS,GACnCC,EAAS3a,EAAIlZ,KAAK4wB,QAAQgD,EAAS,GACnCC,EAAS1a,EAAInZ,KAAK4wB,QAAQgD,EAAS,MAzR9B,CAAAzxB,IAAA,WAAAzE,MAAA,SA8RAq2B,GACL/zB,KAAK4wB,QAAQ/yB,IAAIk2B,EAAenD,WA/R3B,CAAAzuB,IAAA,kBAAAzE,MAAA,SAoSOs2B,GAAsC,IAA9Bpd,EAA8BvX,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAtB,EAAG40B,EAAmB50B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAC9C40B,GACAj0B,KAAKi0B,YACT,IAAIC,EAAMF,EAAO5wB,OAASwT,EAC1B,GAAIsd,EAAM,GACN,MAAM,IAAIJ,MAAM,mBACXI,EAAM,KACXA,EAAM,IACV,IAAK,IAAIzN,EAAI,EAAGA,EAAIyN,EAAKzN,IACrBzmB,KAAK4wB,QAAQnK,GAAKuN,EAAOvN,EAAI7P,GAC7Bqd,GACAj0B,KAAKi0B,cA/SJ,CAAA9xB,IAAA,gBAAAzE,MAAA,SAoTKs2B,GAAsC,IAA9Bpd,EAA8BvX,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAtB,EAAG40B,EAAmB50B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAGhD,GAFI40B,GACAj0B,KAAKi0B,YACLrd,EAAQ,EACR,IAAK,IAAIzG,EAAI,EAAGA,EAAIyG,EAAOzG,IACvB6jB,EAAO7jB,GAAK,EAGpB,IADA,IAAI+jB,EAAMl0B,KAAK4wB,QAAQxtB,OACdqjB,EAAI,EAAGA,EAAIyN,EAAKzN,IACrBuN,EAAOvN,EAAI7P,GAAS5W,KAAK4wB,QAAQnK,GACjCwN,GACAj0B,KAAKi0B,cA/TJ,CAAA9xB,IAAA,cAAAzE,MAAA,SAoUGy2B,EAAcN,GACtB,GAAIM,EAAM,GAAKA,EAAM,EACjB,MAAM,IAAIL,MAAM,aACpB9zB,KAAK4wB,QAAc,EAANuD,EAAU,GAAKN,EAASxnB,EACrCrM,KAAK4wB,QAAc,EAANuD,EAAU,GAAKN,EAASvnB,EACrCtM,KAAK4wB,QAAc,EAANuD,EAAU,GAAKN,EAAS3a,EACrClZ,KAAK4wB,QAAc,EAANuD,EAAU,GAAKN,EAAS1a,IA1UhC,CAAAhX,IAAA,YAAAzE,MAAA,SA+UCy2B,EAAcN,GACpB,GAAIM,EAAM,GAAKA,EAAM,EACjB,MAAM,IAAIL,MAAM,aACpBD,EAASxnB,EAAIrM,KAAK4wB,QAAc,EAANuD,GAC1BN,EAASvnB,EAAItM,KAAK4wB,QAAc,EAANuD,EAAU,GACpCN,EAAS3a,EAAIlZ,KAAK4wB,QAAc,EAANuD,EAAU,GACpCN,EAAS1a,EAAInZ,KAAK4wB,QAAc,EAANuD,EAAU,KArV/B,CAAAhyB,IAAA,iBAAAzE,MAAA,SAuVM02B,GACXA,EAAKxD,QAAQ/yB,IAAImC,KAAK4wB,WAxVjB,CAAAzuB,IAAA,YAAAzE,MAAA,WA6VmC,IAAlC22B,EAAkCh1B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAf,cAErBmf,EAAM,GAEN8V,EADIt0B,KAAKu0B,QACF3D,QACP4D,EAAM,IAAIpvB,EAAKqqB,SAAS6E,EAAG,IAAKA,EAAG,IAAKA,EAAG,KAC/CA,EAAG,IAAM,EACTA,EAAG,IAAM,EACTA,EAAG,IAAM,EACT,IAAIrtB,EAAQ,IAAI7B,EAAKqqB,SACrBxoB,EAAMoF,EAAIP,KAAKC,KAAKuoB,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAC/DrtB,EAAMqF,EAAIR,KAAKC,KAAKuoB,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAC/DrtB,EAAMiS,EAAIpN,KAAKC,KAAKuoB,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAE5DA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,IAChIrtB,EAAMiS,GAAKjS,EAAMiS,GACrBob,EAAG,IAAMrtB,EAAMoF,EACfioB,EAAG,IAAMrtB,EAAMoF,EACfioB,EAAG,IAAMrtB,EAAMoF,EACfioB,EAAG,IAAMrtB,EAAMqF,EACfgoB,EAAG,IAAMrtB,EAAMqF,EACfgoB,EAAG,IAAMrtB,EAAMqF,EACfgoB,EAAG,IAAMrtB,EAAMiS,EACfob,EAAG,IAAMrtB,EAAMiS,EACfob,EAAG,KAAOrtB,EAAMiS,EAChB,IAAIub,EAAM,IAAIrvB,EAAKqqB,SACnB,OAAQ4E,GACJ,KAAK/zB,EAAQ8E,KAAKiqB,cAAcC,WAC5BmF,EAAItb,EAAIrN,KAAKukB,MAAMiE,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,GAAK,GACjD,IAAIJ,EAAMpoB,KAAKC,MAAMuoB,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAC1HG,EAAIpoB,GAAKioB,EAAG,GAAKA,EAAG,IAAMJ,EAC1BO,EAAInoB,GAAKgoB,EAAG,GAAKA,EAAG,IAAMJ,EAC1BO,EAAIvb,GAAKob,EAAG,GAAKA,EAAG,IAAMJ,EAC1B,MACJ,KAAK5zB,EAAQ8E,KAAKiqB,cAAcG,WAC5B,IAAIkF,EAAKJ,EAAG,GAAKA,EAAG,GAAKA,EAAG,IACxBI,EAAK,GACLD,EAAItb,EAAIrN,KAAKC,KAAK,EAAI2oB,GAAM,EAC5BD,EAAIpoB,GAAKioB,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAItb,GACnCsb,EAAInoB,GAAKgoB,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAItb,GACnCsb,EAAIvb,GAAKob,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAItb,IAE7Bmb,EAAG,GAAKA,EAAG,IAAQA,EAAG,GAAKA,EAAG,KACpCG,EAAIpoB,EAAIP,KAAKC,KAAK,EAAIuoB,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAO,EAChDG,EAAItb,GAAKmb,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAIpoB,GACnCooB,EAAInoB,GAAKgoB,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAIpoB,GACnCooB,EAAIvb,GAAKob,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAIpoB,IAE9BioB,EAAG,GAAKA,EAAG,KAChBG,EAAInoB,EAAIR,KAAKC,KAAK,EAAIuoB,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAO,EAChDG,EAAIpoB,GAAKioB,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAInoB,GACnCmoB,EAAItb,GAAKmb,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAInoB,GACnCmoB,EAAIvb,GAAKob,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAInoB,KAGnCmoB,EAAIvb,EAAIpN,KAAKC,KAAK,EAAIuoB,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAM,EAChDG,EAAIpoB,GAAKioB,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAIvb,GACnCub,EAAInoB,GAAKgoB,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAIvb,GACnCub,EAAItb,GAAKmb,EAAG,GAAKA,EAAG,KAAO,EAAIG,EAAIvb,IAEvC,MACJ,KAAK5Y,EAAQ8E,KAAKiqB,cAAcE,aAC5BkF,EAAInoB,EAAIR,KAAK6oB,MAAML,EAAG,IAET,GAATA,EAAG,KAAqB,GAAVA,EAAG,IACjBG,EAAIpoB,EAAIP,KAAKuB,MAAMinB,EAAG,GAAIA,EAAG,KAC7BG,EAAIvb,EAAIpN,KAAKuB,MAAMinB,EAAG,GAAIA,EAAG,MAG7BG,EAAIvb,EAAI,EACRub,EAAIpoB,EAAIP,KAAKuB,MAAMinB,EAAG,GAAIA,EAAG,KAOzC,OAHA9V,EAAIzf,KAAKy1B,GACThW,EAAIzf,KAAK01B,GACTjW,EAAIzf,KAAKkI,GACFuX,IA1aF,CAAArc,IAAA,WAAAzE,MAAA,WAgbLsC,KAAK4wB,QAAU,IAAIC,aAAa,CAC5B,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,MApbR,CAAA1uB,IAAA,gBAAAzE,MAAA,SAocKk3B,EAAOC,GACjB70B,KAAK4wB,QAAQ/yB,IAAIwH,EAASyvB,YAAY90B,KAAM40B,EAAOC,GAASjE,WArcvD,CAAAzuB,IAAA,SAAAzE,MAAA,WA2cL,IAAIq3B,EAAI/0B,KAAKg1B,YACTC,EAAanpB,KAAKyB,IAAIwnB,GAAK,MAC/B,GAAIE,EAAY,CACZF,EAAI,EAAIA,EACR,IAAIG,EAAMl1B,KAAK4wB,QAAQ,GACnBuE,EAAMn1B,KAAK4wB,QAAQ,GACnBwE,EAAMp1B,KAAK4wB,QAAQ,GACnByE,EAAMr1B,KAAK4wB,QAAQ,IACnB0E,EAAMt1B,KAAK4wB,QAAQ,GACnB2E,EAAMv1B,KAAK4wB,QAAQ,GACnB4E,EAAMx1B,KAAK4wB,QAAQ,GACnB6E,EAAMz1B,KAAK4wB,QAAQ,IACnB8E,EAAM11B,KAAK4wB,QAAQ,GACnB+E,EAAM31B,KAAK4wB,QAAQ,GACnBgF,EAAM51B,KAAK4wB,QAAQ,IACnBiF,EAAM71B,KAAK4wB,QAAQ,IACnBkF,EAAM91B,KAAK4wB,QAAQ,GACnBmF,EAAM/1B,KAAK4wB,QAAQ,GACnBoF,EAAMh2B,KAAK4wB,QAAQ,IACnBqF,EAAMj2B,KAAK4wB,QAAQ,IACvB5wB,KAAK4wB,QAAQ,GAAKmE,GAAKQ,GAAOK,EAAMK,EAAMJ,EAAMG,GAAOR,GAAOG,EAAMM,EAAMJ,EAAME,GAAON,GAAOE,EAAMK,EAAMJ,EAAMG,IAChH/1B,KAAK4wB,QAAQ,IAAMmE,GAAKO,GAAOM,EAAMK,EAAMJ,EAAMG,GAAOR,GAAOE,EAAMO,EAAMJ,EAAMC,GAAOL,GAAOC,EAAMM,EAAMJ,EAAME,IACjH91B,KAAK4wB,QAAQ,GAAKmE,GAAKO,GAAOK,EAAMM,EAAMJ,EAAME,GAAOR,GAAOG,EAAMO,EAAMJ,EAAMC,GAAOL,GAAOC,EAAMK,EAAMJ,EAAMG,IAChH91B,KAAK4wB,QAAQ,IAAMmE,GAAKO,GAAOK,EAAMK,EAAMJ,EAAMG,GAAOR,GAAOG,EAAMM,EAAMJ,EAAME,GAAON,GAAOE,EAAMK,EAAMJ,EAAMG,IACjH91B,KAAK4wB,QAAQ,IAAMmE,GAAKI,GAAOS,EAAMK,EAAMJ,EAAMG,GAAOZ,GAAOO,EAAMM,EAAMJ,EAAME,GAAOV,GAAOM,EAAMK,EAAMJ,EAAMG,IACjH/1B,KAAK4wB,QAAQ,GAAKmE,GAAKG,GAAOU,EAAMK,EAAMJ,EAAMG,GAAOZ,GAAOM,EAAMO,EAAMJ,EAAMC,GAAOT,GAAOK,EAAMM,EAAMJ,EAAME,IAChH91B,KAAK4wB,QAAQ,IAAMmE,GAAKG,GAAOS,EAAMM,EAAMJ,EAAME,GAAOZ,GAAOO,EAAMO,EAAMJ,EAAMC,GAAOT,GAAOK,EAAMK,EAAMJ,EAAMG,IACjH91B,KAAK4wB,QAAQ,GAAKmE,GAAKG,GAAOS,EAAMK,EAAMJ,EAAMG,GAAOZ,GAAOO,EAAMM,EAAMJ,EAAME,GAAOV,GAAOM,EAAMK,EAAMJ,EAAMG,IAChH91B,KAAK4wB,QAAQ,GAAKmE,GAAKI,GAAOK,EAAMS,EAAMR,EAAMO,GAAOZ,GAAOG,EAAMU,EAAMR,EAAMM,GAAOV,GAAOE,EAAMS,EAAMR,EAAMO,IAChH/1B,KAAK4wB,QAAQ,IAAMmE,GAAKG,GAAOM,EAAMS,EAAMR,EAAMO,GAAOZ,GAAOE,EAAMW,EAAMR,EAAMK,GAAOT,GAAOC,EAAMU,EAAMR,EAAMM,IACjH91B,KAAK4wB,QAAQ,IAAMmE,GAAKG,GAAOK,EAAMU,EAAMR,EAAMM,GAAOZ,GAAOG,EAAMW,EAAMR,EAAMK,GAAOT,GAAOC,EAAMS,EAAMR,EAAMO,IACjH91B,KAAK4wB,QAAQ,KAAOmE,GAAKG,GAAOK,EAAMS,EAAMR,EAAMO,GAAOZ,GAAOG,EAAMU,EAAMR,EAAMM,GAAOV,GAAOE,EAAMS,EAAMR,EAAMO,IAClH91B,KAAK4wB,QAAQ,KAAOmE,GAAKI,GAAOK,EAAMK,EAAMJ,EAAMG,GAAOR,GAAOG,EAAMM,EAAMJ,EAAME,GAAON,GAAOE,EAAMK,EAAMJ,EAAMG,IAClH31B,KAAK4wB,QAAQ,IAAMmE,GAAKG,GAAOM,EAAMK,EAAMJ,EAAMG,GAAOR,GAAOE,EAAMO,EAAMJ,EAAMC,GAAOL,GAAOC,EAAMM,EAAMJ,EAAME,IACjH11B,KAAK4wB,QAAQ,KAAOmE,GAAKG,GAAOK,EAAMM,EAAMJ,EAAME,GAAOR,GAAOG,EAAMO,EAAMJ,EAAMC,GAAOL,GAAOC,EAAMK,EAAMJ,EAAMG,IAClH11B,KAAK4wB,QAAQ,IAAMmE,GAAKG,GAAOK,EAAMK,EAAMJ,EAAMG,GAAOR,GAAOG,EAAMM,EAAMJ,EAAME,GAAON,GAAOE,EAAMK,EAAMJ,EAAMG,IAErH,OAAOT,IAhfF,CAAA9yB,IAAA,UAAAzE,MAAA,SAqfD82B,GAA2Bn1B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAC/BuF,QAAQC,IAAI,6BAtfP,CAAA1C,IAAA,YAAAzE,MAAA,SA4gBCw4B,GAA8C72B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GACpD,GAAI62B,EAAW9yB,OAAS,EACpB,OAAO,EAEX,IAAI+yB,EAAYD,EAAW,GACvBE,EAAUF,EAAW,GACrBG,EAAYH,EAAW,GAU3B,OATAl2B,KAAKwJ,WACLxJ,KAAKyG,YAAY0vB,EAAU9pB,EAAG8pB,EAAU7pB,EAAG6pB,EAAUjd,GACrDlZ,KAAKyzB,OAAOzzB,KAAKuzB,gBAAgBjzB,EAAQ8E,KAAKqqB,SAASgB,OAAQ4F,EAAUhqB,IACzErM,KAAKyzB,OAAOzzB,KAAKuzB,gBAAgBjzB,EAAQ8E,KAAKqqB,SAASiB,OAAQ2F,EAAU/pB,IACzEtM,KAAKyzB,OAAOzzB,KAAKuzB,gBAAgBjzB,EAAQ8E,KAAKqqB,SAASkB,OAAQ0F,EAAUnd,IACzElZ,KAAK4wB,QAAQ,IAAMwF,EAAQ/pB,EAC3BrM,KAAK4wB,QAAQ,IAAMwF,EAAQ9pB,EAC3BtM,KAAK4wB,QAAQ,IAAMwF,EAAQld,EAC3BlZ,KAAK4wB,QAAQ,IAAM,GACZ,IA5hBF,CAAAzuB,IAAA,kBAAAzE,MAAA,SAiiBOirB,GAOZ,OAAO,IAAIvjB,EAAKqqB,SAAS9G,EAAEtc,EAAIrM,KAAK4wB,QAAQ,GAAKjI,EAAErc,EAAItM,KAAK4wB,QAAQ,GAAKjI,EAAEzP,EAAIlZ,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAIjI,EAAEtc,EAAIrM,KAAK4wB,QAAQ,GAAKjI,EAAErc,EAAItM,KAAK4wB,QAAQ,GAAKjI,EAAEzP,EAAIlZ,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAIjI,EAAEtc,EAAIrM,KAAK4wB,QAAQ,GAAKjI,EAAErc,EAAItM,KAAK4wB,QAAQ,GAAKjI,EAAEzP,EAAIlZ,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAK,KAxiBjS,CAAAzuB,IAAA,uBAAAzE,MAAA,SA8iBYirB,GAOjB,OAAO,IAAIvjB,EAAKqqB,SAAS9G,EAAEtc,EAAIrM,KAAK4wB,QAAQ,GAAKjI,EAAErc,EAAItM,KAAK4wB,QAAQ,GAAKjI,EAAEzP,EAAIlZ,KAAK4wB,QAAQ,GAAIjI,EAAEtc,EAAIrM,KAAK4wB,QAAQ,GAAKjI,EAAErc,EAAItM,KAAK4wB,QAAQ,GAAKjI,EAAEzP,EAAIlZ,KAAK4wB,QAAQ,GAAIjI,EAAEtc,EAAIrM,KAAK4wB,QAAQ,GAAKjI,EAAErc,EAAItM,KAAK4wB,QAAQ,GAAKjI,EAAEzP,EAAIlZ,KAAK4wB,QAAQ,IAAK,KArjB1O,CAAAzuB,IAAA,mBAAAzE,MAAA,SA2jBQ44B,EAAKC,GAIlB,IAHA,IAAIpmB,EAAI,EACJwY,EAAI,IAAIvjB,EAAKqqB,SACb5e,EAAK,IAAIzL,EAAKqqB,SACXtf,EAAI,GAAKmmB,EAAIlzB,QAChBulB,EAAEtc,EAAIiqB,EAAInmB,GACVwY,EAAErc,EAAIgqB,EAAInmB,EAAI,GACdwY,EAAEzP,EAAIod,EAAInmB,EAAI,GACdU,EAAK7Q,KAAKw2B,gBAAgB7N,GAC1B4N,EAAKpmB,GAAKU,EAAGxE,EACbkqB,EAAKpmB,EAAI,GAAKU,EAAGvE,EACjBiqB,EAAKpmB,EAAI,GAAKU,EAAGqI,EACjB/I,GAAK,IAvkBJ,CAAAhO,IAAA,YAAAzE,MAAA,WA8kBL,IAAIuzB,EAAMjxB,KAAK4wB,QAAQ,GACnBM,EAAMlxB,KAAK4wB,QAAQ,GACnBO,EAAMnxB,KAAK4wB,QAAQ,GACnBQ,EAAMpxB,KAAK4wB,QAAQ,GACnBU,EAAMtxB,KAAK4wB,QAAQ,GACnBW,EAAMvxB,KAAK4wB,QAAQ,GACnBY,EAAMxxB,KAAK4wB,QAAQ,GACnBa,EAAMzxB,KAAK4wB,QAAQ,GACnBe,EAAM3xB,KAAK4wB,QAAQ,IACnBgB,EAAM5xB,KAAK4wB,QAAQ,IACnBiB,EAAM7xB,KAAK4wB,QAAQ,IACnBkB,EAAM9xB,KAAK4wB,QAAQ,IACvB5wB,KAAK4wB,QAAQ,GAAKQ,EAClBpxB,KAAK4wB,QAAQ,GAAKY,EAClBxxB,KAAK4wB,QAAQ,GAAKgB,EAClB5xB,KAAK4wB,QAAQ,GAAKK,EAClBjxB,KAAK4wB,QAAQ,GAAKa,EAClBzxB,KAAK4wB,QAAQ,GAAKiB,EAClB7xB,KAAK4wB,QAAQ,GAAKM,EAClBlxB,KAAK4wB,QAAQ,GAAKU,EAClBtxB,KAAK4wB,QAAQ,IAAMkB,EACnB9xB,KAAK4wB,QAAQ,IAAMO,EACnBnxB,KAAK4wB,QAAQ,IAAMW,EACnBvxB,KAAK4wB,QAAQ,IAAMe,IArmBd,CAAAxvB,IAAA,WAAAzE,MAAA,WAymBL,IADA,IAAI+4B,EAAM,eACDtmB,EAAI,EAAGA,EAAInQ,KAAK4wB,QAAQxtB,OAAQ+M,IACrCsmB,GAAOz2B,KAAK4wB,QAAQzgB,GAAK,QACnBA,EAAI,GAAK,GAAM,IACjBsmB,GAAO,MAEf,OAAOA,IA9mBF,CAAAt0B,IAAA,kBAAAzE,MAAA,SAgnBO21B,EAAMqD,GAClB,IAOIC,EAPAC,EAAKvD,EAAKhnB,EACVwqB,EAAKxD,EAAK/mB,EACVwqB,EAAKzD,EAAKna,EAEVuN,EAAI3a,KAAKyG,IAAImkB,GACb5G,EAAIhkB,KAAK2G,IAAIikB,GAGjB,GAAU,GAANE,GAAiB,GAANC,GAAiB,GAANC,EAEtBH,EAAU,IAAItxB,EAAS,CACnB,EAAG,EAAG,EAAG,EACT,EAAGohB,GAAIqJ,EAAG,EACV,EAAGA,EAAGrJ,EAAG,EACT,EAAG,EAAG,EAAG,SAGZ,GAAU,GAANoQ,GAAiB,GAAND,GAAiB,GAANE,EAE3BH,EAAU,IAAItxB,EAAS,CACnBohB,EAAG,EAAGqJ,EAAG,EACT,EAAG,EAAG,EAAG,GACRA,EAAG,EAAGrJ,EAAG,EACV,EAAG,EAAG,EAAG,SAGZ,GAAU,GAANqQ,GAAiB,GAANF,GAAiB,GAANC,EAE3BF,EAAU,IAAItxB,EAAS,CACnBohB,GAAIqJ,EAAG,EAAG,EACVA,EAAGrJ,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,QAGZ,CAED,IAAIsQ,EAAM1D,EAAKjD,cACf,GAAItkB,KAAKyB,IAAIwpB,EAAM,GAAK,KAAQ,CAC5B,IAAI/qB,EAAI,EAAIF,KAAKC,KAAKgrB,GACtBH,EAAKvD,EAAKhnB,EAAIL,EACd6qB,EAAKxD,EAAK/mB,EAAIN,EACd8qB,EAAKzD,EAAKna,EAAIlN,EAElB,IAAIqT,EAAI,EAAIoH,EACZkQ,EAAU,IAAItxB,EAAS,CACnBuxB,EAAKA,EAAKvX,EAAIoH,EAAGmQ,EAAKC,EAAKxX,EAAIyX,EAAKhH,EAAG8G,EAAKE,EAAKzX,EAAIwX,EAAK/G,EAAG,EAC7D8G,EAAKC,EAAKxX,EAAIyX,EAAKhH,EAAG+G,EAAKA,EAAKxX,EAAIoH,EAAGoQ,EAAKC,EAAKzX,EAAIuX,EAAK9G,EAAG,EAC7D8G,EAAKE,EAAKzX,EAAIwX,EAAK/G,EAAG+G,EAAKC,EAAKzX,EAAIuX,EAAK9G,EAAGgH,EAAKA,EAAKzX,EAAIoH,EAAG,EAC7D,EAAG,EAAG,EAAG,IAGjB,OAAOkQ,IArqBF,CAAAx0B,IAAA,cAAArC,IAAA,WAoBL,OAASE,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,MAClJ5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KAC/I5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KACjJ5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KAC/I5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KACjJ5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,IAAM5wB,KAAK4wB,QAAQ,KAAO5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,GAAK5wB,KAAK4wB,QAAQ,MAzBjJ,CAAAzuB,IAAA,WAAArC,IAAA,WA4BL,OAAO,IAAIsF,EAAKqqB,SAASzvB,KAAK4wB,QAAQ,GAAI5wB,KAAK4wB,QAAQ,GAAI5wB,KAAK4wB,QAAQ,QA5BnE,EAAAzuB,IAAA,cAAAzE,MAAA,SA2bUs5B,EAASpC,EAAOC,GAC/B,IAAI/1B,GAAI,IAAIsG,EAAK6xB,YAAaC,aAAaF,GACvCjpB,GAAI,IAAI3I,EAAK6xB,YAAaC,aAAatC,GAC3C,OAAOxvB,EAAK6xB,WAAWE,KAAKr4B,EAAGiP,EAAG8mB,GAASuC,iBA9btC/xB,EAAA,GAwqBbA,EAASmuB,UAAY1nB,KAAK0B,GAAK,IAC/BpI,EAAKC,SAAWA,EAzqBpB,CA0qBU/E,EAAQ8E,OAAS9E,EAAQ8E,KAAO,KA5qB9C,CA6qBG9E,IAAYA,EAAU,KAIzB,SAAWA,IAEP,SAAW8E,GAAM,IACP6xB,EADO,WAET,SAAAA,IAAwC,IAA5B5qB,EAA4BhN,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAxB,EAAGiN,EAAqBjN,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAjB,EAAG6Z,EAAc7Z,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAV,EAAG8Z,EAAO9Z,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAAGlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAi3B,GACpCj3B,KAAKqM,EAAI,EACTrM,KAAKsM,EAAI,EACTtM,KAAKkZ,EAAI,EACTlZ,KAAKmZ,EAAI,EACTnZ,KAAKqM,EAAIA,EACTrM,KAAKsM,EAAIA,EACTtM,KAAKkZ,EAAIA,EACTlZ,KAAKmZ,EAAIA,EAVJ,OAAAhc,OAAA+E,EAAA,EAAA/E,CAAA85B,EAAA,EAAA90B,IAAA,eAAAzE,MAAA,SAmBIqJ,GACT,IAEIuB,EAFA4sB,EAAMnuB,EAAE6pB,QAAQ,GAAI0E,EAAMvuB,EAAE6pB,QAAQ,GAAI8E,EAAM3uB,EAAE6pB,QAAQ,GAAIuE,EAAMpuB,EAAE6pB,QAAQ,GAAI2E,EAAMxuB,EAAE6pB,QAAQ,GAAI+E,EAAM5uB,EAAE6pB,QAAQ,GAAIwE,EAAMruB,EAAE6pB,QAAQ,GAAI4E,EAAMzuB,EAAE6pB,QAAQ,GAAIgF,EAAM7uB,EAAE6pB,QAAQ,IAChL8D,EAAKQ,EAAMK,EAAMK,EAgCrB,OA9BIlB,EAAK,GACLpsB,EAAM,GAAK,EAAIwD,KAAKC,KAAK2oB,EAAK,IAC9B10B,KAAKqM,GAAKspB,EAAMH,GAAOltB,EACvBtI,KAAKsM,GAAK8oB,EAAMM,GAAOptB,EACvBtI,KAAKkZ,GAAKoc,EAAMH,GAAO7sB,EACvBtI,KAAKmZ,EAAI,IAAO7Q,GAGX4sB,EAAMK,GAASL,EAAMU,GACtBttB,EAAM,GAAK,EAAIwD,KAAKC,KAAK,EAAImpB,EAAMK,EAAMK,IACzC51B,KAAKqM,GAAK8oB,EAAMG,GAAOhtB,EACvBtI,KAAKsM,GAAKopB,EAAMN,GAAO9sB,EACvBtI,KAAKkZ,GAAKsc,EAAMG,GAAOrtB,EACvBtI,KAAKmZ,EAAI,IAAO7Q,GAEVitB,EAAML,GAASK,EAAMK,GAC3BttB,EAAM,EAAKwD,KAAKC,KAAK,EAAIwpB,EAAML,EAAMU,GACrC51B,KAAKqM,EAAI,IAAO/D,EAChBtI,KAAKsM,GAAKkpB,EAAMG,GAAOrtB,EACvBtI,KAAKkZ,GAAKwc,EAAMN,GAAO9sB,EACvBtI,KAAKmZ,GAAKgc,EAAMG,GAAOhtB,GAEjBstB,EAAMV,GAASU,EAAML,IAC3BjtB,EAAM,EAAKwD,KAAKC,KAAK,EAAI6pB,EAAMV,EAAMK,GACrCv1B,KAAKqM,GAAKmpB,EAAMG,GAAOrtB,EACvBtI,KAAKsM,EAAI,IAAOhE,EAChBtI,KAAKkZ,GAAKic,EAAMG,GAAOhtB,EACvBtI,KAAKmZ,GAAKuc,EAAMN,GAAO9sB,GAGxBtI,OArDF,CAAAmC,IAAA,aAAAzE,MAAA,WAuDiB,IAAfD,EAAe4B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,KACZg4B,EAAKr3B,KAAKqM,EAAIrM,KAAKqM,EAAGirB,EAAKt3B,KAAKsM,EAAItM,KAAKsM,EAAGirB,EAAKv3B,KAAKkZ,EAAIlZ,KAAKkZ,EAAGse,EAAKx3B,KAAKqM,EAAIgrB,EAAII,EAAKz3B,KAAKqM,EAAIirB,EAAII,EAAK13B,KAAKqM,EAAIkrB,EAAII,EAAK33B,KAAKsM,EAAIgrB,EAAIM,EAAK53B,KAAKsM,EAAIirB,EAAIM,EAAK73B,KAAKkZ,EAAIqe,EAAIO,EAAK93B,KAAKmZ,EAAIke,EAAIU,EAAK/3B,KAAKmZ,EAAIme,EAAIU,EAAKh4B,KAAKmZ,EAAIoe,EAmBpO,OAlBK95B,IACDA,EAAS,IAAI2H,EAAKC,UACtB5H,EAAOmzB,QAAQ,GAAK,GAAK+G,EAAKE,GAC9Bp6B,EAAOmzB,QAAQ,GAAK6G,EAAKO,EACzBv6B,EAAOmzB,QAAQ,GAAK8G,EAAKK,EACzBt6B,EAAOmzB,QAAQ,GAAK,EACpBnzB,EAAOmzB,QAAQ,GAAK6G,EAAKO,EACzBv6B,EAAOmzB,QAAQ,GAAK,GAAK4G,EAAKK,GAC9Bp6B,EAAOmzB,QAAQ,GAAKgH,EAAKE,EACzBr6B,EAAOmzB,QAAQ,GAAK,EACpBnzB,EAAOmzB,QAAQ,GAAK8G,EAAKK,EACzBt6B,EAAOmzB,QAAQ,GAAKgH,EAAKE,EACzBr6B,EAAOmzB,QAAQ,IAAM,GAAK4G,EAAKG,GAC/Bl6B,EAAOmzB,QAAQ,IAAM,EACrBnzB,EAAOmzB,QAAQ,IAAM,EACrBnzB,EAAOmzB,QAAQ,IAAM,EACrBnzB,EAAOmzB,QAAQ,IAAM,EACrBnzB,EAAOmzB,QAAQ,IAAM,EACdnzB,IA3EF,CAAA0E,IAAA,gBAAAzE,MAAA,SAiFK21B,EAAM4E,GAChB,IAAI9f,EAAyB,GAAjB8f,EACRC,EAAQpsB,KAAK2G,IAAI0F,GACjBggB,EAAQrsB,KAAKyG,IAAI4F,GACrBnY,KAAKqM,EAAIgnB,EAAKhnB,EAAI6rB,EAClBl4B,KAAKsM,EAAI+mB,EAAK/mB,EAAI4rB,EAClBl4B,KAAKkZ,EAAIma,EAAKna,EAAIgf,EAClBl4B,KAAKmZ,EAAIgf,IAxFJ,CAAAh2B,IAAA,YAAAzE,MAAA,WA2FLsC,KAAKqM,GAAKrM,KAAKqM,EACfrM,KAAKsM,GAAKtM,KAAKsM,EACftM,KAAKkZ,GAAKlZ,KAAKkZ,IA7FV,CAAA/W,IAAA,WAAAzE,MAAA,WAgGL,MAAO,mBAAqBsC,KAAKqM,EAAI,OAASrM,KAAKsM,EAAI,OAAStM,KAAKkZ,EAAI,OAASlZ,KAAKmZ,EAAI,OAhGtF,EAAAhX,IAAA,OAAAzE,MAAA,SAYG06B,EAAIC,EAAIxD,GAEhB,OAAIuD,EAAG/rB,EAAIgsB,EAAGhsB,EAAI+rB,EAAG9rB,EAAI+rB,EAAG/rB,EAAI8rB,EAAGlf,EAAImf,EAAGnf,EAAIkf,EAAGjf,EAAIkf,EAAGlf,EAAI,EACjD,IAAI8d,EAAWmB,EAAG/rB,EAAIwoB,IAAYwD,EAAGhsB,EAAI+rB,EAAG/rB,GAAI+rB,EAAG9rB,EAAIuoB,IAAYwD,EAAG/rB,EAAI8rB,EAAG9rB,GAAI8rB,EAAGlf,EAAI2b,IAAYwD,EAAGnf,EAAIkf,EAAGlf,GAAIkf,EAAGjf,EAAI0b,IAAYwD,EAAGlf,EAAIkf,EAAGlf,IAEnJ,IAAI8d,EAAWmB,EAAG/rB,EAAIwoB,GAAWwD,EAAGhsB,EAAI+rB,EAAG/rB,GAAI+rB,EAAG9rB,EAAIuoB,GAAWwD,EAAG/rB,EAAI8rB,EAAG9rB,GAAI8rB,EAAGlf,EAAI2b,GAAWwD,EAAGnf,EAAIkf,EAAGlf,GAAIkf,EAAGjf,EAAI0b,GAAWwD,EAAGlf,EAAIkf,EAAGlf,QAjB7I8d,EAAA,GAmGb7xB,EAAK6xB,WAAaA,EAnGtB,CAoGU32B,EAAQ8E,OAAS9E,EAAQ8E,KAAO,KAtG9C,CAuGG9E,IAAYA,EAAU,KAGzB,SAAWA,IAEP,SAAW8E,GAAM,IACPkzB,EADO,SAAAC,GAAA,SAAAD,IAAA,OAAAn7B,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAs4B,GAAAn7B,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAAm7B,GAAAt5B,MAAAgB,KAAAX,YAAA,OAAAlC,OAAAiT,EAAA,EAAAjT,CAAAm7B,EAAAC,GAAAp7B,OAAA+E,EAAA,EAAA/E,CAAAm7B,EAAA,EAAAn2B,IAAA,WAAAzE,MAAA,SAEA86B,EAAKC,EAAIC,GAGd,IAAIC,EAAKF,EAAGpsB,EAAImsB,EAAInsB,EAChBusB,EAAKH,EAAGnsB,EAAIksB,EAAIlsB,EAChBusB,EAAKJ,EAAGvf,EAAIsf,EAAItf,EAChBgb,EAAM,EAAIpoB,KAAKC,KAAK4sB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GACjDF,GAAMzE,EACN0E,GAAM1E,EACN2E,GAAM3E,EAEN,IAAI4E,EAAKJ,EAAGpsB,EAAIusB,EAAKH,EAAGxf,EAAI0f,EACxBG,EAAKL,EAAGxf,EAAIyf,EAAKD,EAAGrsB,EAAIwsB,EACxBG,EAAKN,EAAGrsB,EAAIusB,EAAKF,EAAGpsB,EAAIqsB,EAMxBM,EAAKL,GAFTI,GAHA9E,EAAM,EAAIpoB,KAAKC,KAAK+sB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAK1BH,GAHnBE,GAAM7E,GAIFgF,EAAKL,GALTC,GAAM5E,GAKayE,EAAKK,EACpBG,EAAKR,EAAKI,EAAKH,EAAKE,EACxB94B,KAAKo5B,gBAAgB,CACjBN,EAAIC,EAAIC,IAAMF,EAAKN,EAAInsB,EAAI0sB,EAAKP,EAAIlsB,EAAI0sB,EAAKR,EAAItf,GACjD+f,EAAIC,EAAIC,IAAMF,EAAKT,EAAInsB,EAAI6sB,EAAKV,EAAIlsB,EAAI6sB,EAAKX,EAAItf,GACjDyf,EAAIC,EAAIC,IAAMF,EAAKH,EAAInsB,EAAIusB,EAAKJ,EAAIlsB,EAAIusB,EAAKL,EAAItf,GACjD,EAAK,EAAK,EAAK,MA5Bd,CAAA/W,IAAA,WAAAzE,MAAA,SA+BA86B,EAAKC,EAAIC,GAId,IAAIC,EAAKH,EAAInsB,EAAIosB,EAAGpsB,EAChBusB,EAAKJ,EAAIlsB,EAAImsB,EAAGnsB,EAChBusB,EAAKL,EAAItf,EAAIuf,EAAGvf,EAChBgb,EAAM,EAAIpoB,KAAKC,KAAK4sB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GACjDF,GAAMzE,EACN0E,GAAM1E,EACN2E,GAAM3E,EAEN,IAAI4E,EAAKJ,EAAGpsB,EAAIusB,EAAKH,EAAGxf,EAAI0f,EACxBG,EAAKL,EAAGxf,EAAIyf,EAAKD,EAAGrsB,EAAIwsB,EACxBG,EAAKN,EAAGrsB,EAAIusB,EAAKF,EAAGpsB,EAAIqsB,EAMxBM,EAAKL,GAFTI,GAHA9E,EAAM,EAAIpoB,KAAKC,KAAK+sB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAK1BH,GAHnBE,GAAM7E,GAIFgF,EAAKL,GALTC,GAAM5E,GAKayE,EAAKK,EACpBG,EAAKR,EAAKI,EAAKH,EAAKE,EACxB94B,KAAKo5B,gBAAgB,CACjBN,EAAIC,EAAIC,IAAMF,EAAKN,EAAInsB,EAAI0sB,EAAKP,EAAIlsB,EAAI0sB,EAAKR,EAAItf,GACjD+f,EAAIC,EAAIC,IAAMF,EAAKT,EAAInsB,EAAI6sB,EAAKV,EAAIlsB,EAAI6sB,EAAKX,EAAItf,GACjDyf,EAAIC,EAAIC,IAAMF,EAAKH,EAAInsB,EAAIusB,EAAKJ,EAAIlsB,EAAIusB,EAAKL,EAAItf,GACjD,EAAK,EAAK,EAAK,MA1Dd,CAAA/W,IAAA,yBAAAzE,MAAA,SA6Dc27B,EAAMC,EAAOC,EAAQC,EAAKC,EAAOC,GACpD15B,KAAKo5B,gBAAgB,CACjB,EAAMK,GAASH,EAAQD,GAAO,GAAMA,EAAOC,IAAUD,EAAOC,GAAQ,EACpE,EAAK,EAAMG,GAASD,EAAMD,IAAUA,EAASC,IAAQD,EAASC,GAAM,EACpE,EAAK,GAAME,EAAOD,IAAUC,EAAOD,GAAQ,EAAMC,EAAOD,GAASA,EAAQC,GACzE,EAAK,EAAK,EAAK,MAlEd,CAAAv3B,IAAA,gBAAAzE,MAAA,SAqEKwJ,EAAOC,EAAQsyB,EAAOC,GAChC15B,KAAKo5B,gBAAgB,CACjB,EAAMK,EAAQvyB,EAAO,EAAK,EAAK,EAC/B,EAAK,EAAMuyB,EAAQtyB,EAAQ,EAAK,EAChC,EAAK,GAAMuyB,EAAOD,IAAUC,EAAOD,GAAQ,EAAMC,EAAOD,GAASA,EAAQC,GACzE,EAAK,EAAK,EAAK,MA1Ed,CAAAv3B,IAAA,2BAAAzE,MAAA,SA6EgBi8B,EAAcC,EAAaH,EAAOC,GACvD,IAAIxG,EAAS,EAAMpnB,KAAK+tB,IAAIF,EAAe,GACvC1G,EAASC,EAAS0G,EACtB55B,KAAKo5B,gBAAgB,CACjBnG,EAAQ,EAAK,EAAK,EAClB,EAAKC,EAAQ,EAAK,EAClB,EAAK,GAAMwG,EAAOD,IAAUC,EAAOD,GAAQ,EAAMC,EAAOD,GAASA,EAAQC,GACzE,EAAK,EAAK,EAAK,MApFd,CAAAv3B,IAAA,mBAAAzE,MAAA,SAuFQ27B,EAAMC,EAAOC,EAAQC,EAAKC,EAAOC,GAC9C15B,KAAKo5B,gBAAgB,CACjB,GAAOE,EAAQD,GAAO,EAAK,GAAMA,EAAOC,IAAUD,EAAOC,GACzD,EAAK,GAAOE,EAAMD,GAAS,GAAMA,EAASC,IAAQD,EAASC,GAC3D,EAAK,EAAK,GAAKE,EAAOD,IAASA,EAAQC,IAASD,EAAQC,GACxD,EAAK,EAAK,EAAK,MA5Fd,CAAAv3B,IAAA,UAAAzE,MAAA,SA+FDwJ,EAAOC,EAAQsyB,EAAOC,GAC1B15B,KAAKo5B,gBAAgB,CACjB,EAAMlyB,EAAO,EAAK,EAAK,EACvB,EAAK,EAAMC,EAAQ,EAAK,EACxB,EAAK,EAAK,GAAKuyB,EAAOD,IAASA,EAAQC,IAASD,EAAQC,GACxD,EAAK,EAAK,EAAK,MApGd,CAAAv3B,IAAA,yBAAAzE,MAAA,SAwGc27B,EAAMC,EAAOC,EAAQC,EAAKC,EAAOC,GACpD15B,KAAKo5B,gBAAgB,CACjB,EAAMK,GAASH,EAAQD,GAAO,GAAMC,EAAQD,IAASC,EAAQD,GAAO,EACpE,EAAK,EAAMI,GAASD,EAAMD,IAAUC,EAAMD,IAAWC,EAAMD,GAAS,EACpE,EAAK,GAAME,EAAQC,IAASD,EAAQC,GAAO,EAAMD,EAAQC,GAAQD,EAAQC,GACzE,EAAK,GAAM,EAAK,MA7Gf,CAAAv3B,IAAA,gBAAAzE,MAAA,SAiHKwJ,EAAOC,EAAQsyB,EAAOC,GAChC15B,KAAKo5B,gBAAgB,CACjB,EAAMK,EAAQvyB,EAAO,EAAK,EAAK,EAC/B,EAAK,EAAMuyB,EAAQtyB,EAAQ,EAAK,EAChC,EAAK,GAAMsyB,EAAQC,IAASD,EAAQC,GAAO,EAAMD,EAAQC,GAAQD,EAAQC,GACzE,EAAK,GAAM,EAAK,MAtHf,CAAAv3B,IAAA,2BAAAzE,MAAA,SA0HgBi8B,EAAcC,EAAaH,EAAOC,GACvD,IAAIxG,EAAS,EAAMpnB,KAAK+tB,IAAIF,EAAe,GACvC1G,EAASC,EAAS0G,EACtB55B,KAAKo5B,gBAAgB,CACjBnG,EAAQ,EAAK,EAAK,EAClB,EAAKC,EAAQ,EAAK,EAClB,EAAK,GAAMwG,EAAOD,IAAUA,EAAQC,GAAO,EAAMD,EAAQC,GAAQD,EAAQC,GACzE,EAAK,GAAM,EAAK,MAjIf,CAAAv3B,IAAA,mBAAAzE,MAAA,SAoIQ27B,EAAMC,EAAOC,EAAQC,EAAKC,EAAOC,GAC9C15B,KAAKo5B,gBAAgB,CACjB,GAAOE,EAAQD,GAAO,EAAK,GAAMA,EAAOC,IAAUD,EAAOC,GACzD,EAAK,GAAOE,EAAMD,GAAS,GAAMA,EAASC,IAAQD,EAASC,GAC3D,EAAK,GAAM,GAAOE,EAAOD,IAASA,EAAQC,IAASD,EAAQC,GAC3D,EAAK,EAAK,EAAK,MAzId,CAAAv3B,IAAA,UAAAzE,MAAA,SA4IDwJ,EAAOC,EAAQsyB,EAAOC,GAC1B15B,KAAKo5B,gBAAgB,CACjB,EAAMlyB,EAAO,EAAK,EAAK,EACvB,EAAK,EAAMC,EAAQ,EAAK,EACxB,EAAK,GAAM,GAAOuyB,EAAOD,IAASA,EAAQC,IAASD,EAAQC,GAC3D,EAAK,EAAK,EAAK,QAjJdpB,EAAA,CACqBlzB,EAAKC,UAoJvCD,EAAKkzB,oBAAsBA,EArJ/B,CAsJUh4B,EAAQ8E,OAAS9E,EAAQ8E,KAAO,KAxJ9C,CAyJG9E,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACVmH,EADU,SAAAA,IAAAtK,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAyH,IAGhBA,EAA4BqyB,QAAU,SACtCryB,EAA4BsyB,QAAU,SACtCtyB,EAA4BC,QAAU,SACtCD,EAA4BuyB,QAAU,SACtCvyB,EAA4BwyB,QAAU,SACtC35B,EAAQmH,4BAA8BA,EAR1C,CASGnH,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACVqG,EADU,SAAAA,IAAAxJ,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA2G,IAGhBA,EAAuBC,KAAO,OAC9BtG,EAAQqG,uBAAyBA,EAJrC,CAKGrG,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACV45B,EADU,SAAAA,IAAA/8B,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAk6B,IAGhBA,EAAqBC,OAAS,SAC9BD,EAAqBE,MAAQ,QAC7BF,EAAqBG,QAAU,UAC/BH,EAAqBI,cAAgB,eACrCJ,EAAqBK,KAAO,OAC5BL,EAAqBM,WAAa,YAClCN,EAAqBO,MAAQ,QAC7BP,EAAqBQ,UAAY,WACjCp6B,EAAQ45B,qBAAuBA,EAXnC,CAYG55B,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACVsH,EADU,oBAAAA,IAAAzK,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA4H,GAAA,OAAAzK,OAAA+E,EAAA,EAAA/E,CAAAyK,EAAA,OAAAzF,IAAA,OAAAzE,MAAA,WAGRkK,EAAqBC,IAAMvH,EAAQ0B,UAAU24B,GAAG9yB,IAChDD,EAAqB+C,KAAOrK,EAAQ0B,UAAU24B,GAAGhwB,KACjD/C,EAAqB2C,aAAejK,EAAQ0B,UAAU24B,GAAGC,UACzDhzB,EAAqByC,kBAAoB/J,EAAQ0B,UAAU24B,GAAGE,UAC9DjzB,EAAqBsC,aAAe5J,EAAQ0B,UAAU24B,GAAGG,UACzDlzB,EAAqBmzB,kBAAoBz6B,EAAQ0B,UAAU24B,GAAGK,UAC9DpzB,EAAqB6C,uBAAyBnK,EAAQ0B,UAAU24B,GAAGM,oBACnErzB,EAAqBszB,4BAA8B56B,EAAQ0B,UAAU24B,GAAGQ,oBACxEvzB,EAAqBE,uBAAyBxH,EAAQ0B,UAAU24B,GAAGS,oBACnExzB,EAAqB0C,4BAA8BhK,EAAQ0B,UAAU24B,GAAGU,wBAZhEzzB,EAAA,GAkBhBtH,EAAQsH,qBAAuBA,EAlBnC,CAmBGtH,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACV0H,EADU,SAAAA,IAAA7K,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgI,IAGhBA,EAAsBC,KAAO,OAC7BD,EAAsBszB,MAAQ,QAC9BtzB,EAAsBuzB,eAAiB,eACvCvzB,EAAsBwzB,KAAO,OAC7Bl7B,EAAQ0H,sBAAwBA,EAPpC,CAQG1H,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACVm7B,EADU,WAEZ,SAAAA,EAAYC,EAAaC,GAIrB,GAJuCx+B,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAy7B,GACvCz7B,KAAK47B,aAAeF,EACpB17B,KAAK67B,iBAAmBF,EACxB37B,KAAK87B,UAAYx7B,EAAQ0B,UAAU24B,GAAGoB,gBACjC/7B,KAAK87B,UACN,MAAM,IAAIhI,MAAM,2BAPZ,OAAA32B,OAAA+E,EAAA,EAAA/E,CAAAs+B,EAAA,EAAAt5B,IAAA,mBAAAzE,MAAA,SAiBKs+B,EAAMC,EAAuBP,GAC1C17B,KAAKk8B,MAAQF,EACM,GAAfC,GAAoBP,GAAe17B,KAAK47B,eACxCI,EAAOA,EAAKlL,MAAMmL,EAAcj8B,KAAK67B,iBAAmBH,EAAc17B,KAAK67B,mBAE/Ev7B,EAAQ0B,UAAU24B,GAAGwB,WAAW77B,EAAQ0B,UAAU24B,GAAGyB,aAAcp8B,KAAK87B,WACxEx7B,EAAQ0B,UAAU24B,GAAG0B,WAAW/7B,EAAQ0B,UAAU24B,GAAGyB,aAAc,IAAIvL,aAAamL,GAAO17B,EAAQ0B,UAAU24B,GAAG2B,aAChHh8B,EAAQ0B,UAAU24B,GAAGwB,WAAW77B,EAAQ0B,UAAU24B,GAAGyB,aAAc,QAxB3D,CAAAj6B,IAAA,UAAAzE,MAAA,WA2BR4C,EAAQ0B,UAAU24B,GAAG4B,aAAav8B,KAAK87B,WACvC97B,KAAK87B,UAAY,KACjB97B,KAAKk8B,MAAM94B,OAAS,EACpBpD,KAAK47B,aAAe,EACpB57B,KAAK67B,iBAAmB,IA/BhB,CAAA15B,IAAA,UAAArC,IAAA,WAUI,OAAOE,KAAKk8B,QAVhB,CAAA/5B,IAAA,WAAArC,IAAA,WAYR,OAAOE,KAAK87B,YAZJ,CAAA35B,IAAA,kBAAArC,IAAA,WAeR,OAAOE,KAAK67B,qBAfJJ,EAAA,GAkChBn7B,EAAQm7B,eAAiBA,EAlC7B,CAmCGn7B,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACVk8B,EADU,WAEZ,SAAAA,EAAYC,GAAuBt/B,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAw8B,GAC/Bx8B,KAAKy8B,WAAaA,EAClBz8B,KAAK87B,UAAYx7B,EAAQ0B,UAAU24B,GAAGoB,eAJ9B,OAAA5+B,OAAA+E,EAAA,EAAA/E,CAAAq/B,EAAA,EAAAr6B,IAAA,mBAAAzE,MAAA,SAUKs+B,EAA0BU,EAAuBC,GAC9D38B,KAAKk8B,MAAQF,EACM,GAAfU,GAAoBC,GAAS38B,KAAKy8B,aAClCT,EAAOA,EAAKlL,MAAM4L,EAAaA,EAAcC,IAEjDr8B,EAAQ0B,UAAU24B,GAAGwB,WAAW77B,EAAQ0B,UAAU24B,GAAGiC,qBAAsB58B,KAAK87B,WAChFx7B,EAAQ0B,UAAU24B,GAAG0B,WAAW/7B,EAAQ0B,UAAU24B,GAAGiC,qBAAsB,IAAIC,YAAYb,GAAO17B,EAAQ0B,UAAU24B,GAAG2B,aACvHh8B,EAAQ0B,UAAU24B,GAAGwB,WAAW77B,EAAQ0B,UAAU24B,GAAGiC,qBAAsB,QAjBnE,CAAAz6B,IAAA,UAAAzE,MAAA,WAoBR4C,EAAQ0B,UAAU24B,GAAG4B,aAAav8B,KAAK87B,WACvC97B,KAAK87B,UAAY,KACjB97B,KAAKy8B,WAAa,EAClBz8B,KAAKk8B,MAAM94B,OAAS,IAvBZ,CAAAjB,IAAA,WAAArC,IAAA,WAQR,OAAOE,KAAK87B,cARJU,EAAA,GA0BhBl8B,EAAQk8B,cAAgBA,EA1B5B,CA2BGl8B,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACVw8B,EADU,WAEZ,SAAAA,EAAY51B,EAAOC,EAAQ41B,EAAQC,EAA4BC,GAAkC,IAAjBC,EAAiB79B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA88B,GAC7F98B,KAAKk9B,SAAU,EACfl9B,KAAKm9B,WAAa78B,EAAQ0B,UAAU24B,GAAGj0B,gBACvC1G,KAAKo9B,iBAAmBH,EACxBj9B,KAAKq9B,aAAeP,EAAQQ,YAE5Bt9B,KAAKkH,MAAQA,EACblH,KAAKmH,OAASA,EACdnH,KAAKu9B,QAAUR,EACf/8B,KAAKw9B,QAAUR,EACfh9B,KAAKk9B,QAAUA,EACXl9B,KAAKw9B,UACLx9B,KAAKy9B,UAAY,IAAIC,UAAU19B,KAAKkH,MAAOlH,KAAKmH,QAChDnH,KAAKsH,gBAAgBtH,KAAKy9B,UAAW,IAfjC,OAAAtgC,OAAA+E,EAAA,EAAA/E,CAAA2/B,EAAA,EAAA36B,IAAA,iBAAAzE,MAAA,WAiDR,OAAOsC,KAAKm9B,aAjDJ,CAAAh7B,IAAA,uBAAAzE,MAAA,SAsDSigC,GAAsB,IAAdC,EAAcv+B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAChCW,KAAKw9B,SACL54B,QAAQi5B,MAAM,eACdF,aAAkBr9B,EAAQwG,YAC1B9G,KAAKy9B,UAAYE,EAAOF,UACxBz9B,KAAKsH,gBAAgBq2B,EAAOF,UAAWG,IAGvC59B,KAAKsH,gBAAgBq2B,EAAQC,KA9DzB,CAAAz7B,IAAA,kBAAAzE,MAAA,SAiEIigC,GAAsB,IAAdC,EAAcv+B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAC/BW,KAAK29B,OAASA,EACd39B,KAAK49B,SAAWA,EACZ59B,KAAK89B,aAAex9B,EAAQ0B,UAAUC,aACtCjC,KAAK+9B,aArED,CAAA57B,IAAA,WAAAzE,MAAA,WAyER,IAAIigC,EAAS39B,KAAK29B,OACdC,EAAW59B,KAAK49B,SA0BpB,GAzBI59B,KAAK89B,YAAcx9B,EAAQ0B,UAAUC,YACrC3B,EAAQ0B,UAAU24B,GAAGqD,cAAc19B,EAAQ0B,UAAU24B,GAAG,WAAar6B,EAAQ0B,UAAUC,YAAc,KAGrG3B,EAAQ0B,UAAU24B,GAAGqD,cAAc19B,EAAQ0B,UAAU24B,GAAG,UAAY36B,KAAK89B,cAE7Ex9B,EAAQ0B,UAAU24B,GAAGsD,YAAY39B,EAAQ0B,UAAU24B,GAAGuD,WAAYl+B,KAAKm9B,YACvE78B,EAAQ0B,UAAU24B,GAAGwD,YAAY79B,EAAQ0B,UAAU24B,GAAGyD,+BAAgC,GACtF99B,EAAQ0B,UAAU24B,GAAG0D,cAAc/9B,EAAQ0B,UAAU24B,GAAGuD,WAAY59B,EAAQ0B,UAAU24B,GAAG2D,eAAgBh+B,EAAQ0B,UAAU24B,GAAG4D,eAC9Hj+B,EAAQ0B,UAAU24B,GAAG0D,cAAc/9B,EAAQ0B,UAAU24B,GAAGuD,WAAY59B,EAAQ0B,UAAU24B,GAAG6D,eAAgBl+B,EAAQ0B,UAAU24B,GAAG4D,eAE1Hv+B,KAAKk9B,QAKT58B,EAAQ0B,UAAU24B,GAAG0D,cAAc/9B,EAAQ0B,UAAU24B,GAAGuD,WAAY59B,EAAQ0B,UAAU24B,GAAG8D,mBAAoBn+B,EAAQ0B,UAAU24B,GAAG+D,QACrG,GAAzB1+B,KAAKo9B,iBACL98B,EAAQ0B,UAAU24B,GAAG0D,cAAc/9B,EAAQ0B,UAAU24B,GAAGuD,WAAY59B,EAAQ0B,UAAU24B,GAAGgE,mBAAoBr+B,EAAQ0B,UAAU24B,GAAG+D,SAGlIp+B,EAAQ0B,UAAU24B,GAAG0D,cAAc/9B,EAAQ0B,UAAU24B,GAAGuD,WAAY59B,EAAQ0B,UAAU24B,GAAGgE,mBAAoBr+B,EAAQ0B,UAAU24B,GAAGiE,sBAClIt+B,EAAQ0B,UAAU24B,GAAGkE,eAAev+B,EAAQ0B,UAAU24B,GAAGuD,aAE7D59B,EAAQ0B,UAAU24B,GAAGmE,WAAWx+B,EAAQ0B,UAAU24B,GAAGuD,WAAYN,EAAUt9B,EAAQ0B,UAAU24B,GAAGoE,KAAMz+B,EAAQ0B,UAAU24B,GAAGoE,KAAMz+B,EAAQ0B,UAAU24B,GAAGqE,cAAerB,IAChKr9B,EAAQ0B,UAAU24B,GAAGsE,UAAUj/B,KAAKm9B,YACrC,MAAM,IAAIrJ,MAAM,8BArGZ,CAAA3xB,IAAA,UAAAzE,MAAA,WA4GRo/B,EAAQoC,gBAAkB,KAC1B5+B,EAAQ0B,UAAU24B,GAAGwE,cAAcn/B,KAAKm9B,YACxCn9B,KAAKm9B,WAAa,KAClBn9B,KAAKo9B,iBAAmB,IA/GhB,CAAAj7B,IAAA,OAAArC,IAAA,WA2CR,OAAOE,KAAKo/B,MAAQp/B,KAAKo/B,MAAQ,UAAYp/B,KAAK89B,YAAYn/B,YA3CtDd,IAAA,SA6CH8qB,GACL3oB,KAAKo/B,MAAQzW,IA9CL,CAAAxmB,IAAA,cAAArC,IAAA,WAoDR,OAAOE,KAAKq9B,iBApDJP,EAAA,GAkHhBA,EAAQQ,UAAY,EACpBh9B,EAAQw8B,QAAUA,EAnHtB,CAoHGx8B,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IACV++B,EADU,WAEZ,SAAAA,IAAeliC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAq/B,GACXr/B,KAAKs/B,WAAah/B,EAAQ0B,UAAU24B,GAAG4E,gBAH/B,OAAApiC,OAAA+E,EAAA,EAAA/E,CAAAkiC,EAAA,EAAAl9B,IAAA,UAAAzE,MAAA,WASJsC,KAAKw/B,WACLl/B,EAAQ0B,UAAU24B,GAAG8E,aAAaz/B,KAAKs/B,WAAYt/B,KAAKw/B,UACxDl/B,EAAQ0B,UAAU24B,GAAG+E,aAAa1/B,KAAKw/B,UACvCx/B,KAAKw/B,SAAW,MAEhBx/B,KAAK2/B,WACLr/B,EAAQ0B,UAAU24B,GAAG8E,aAAaz/B,KAAKs/B,WAAYt/B,KAAK2/B,UACxDr/B,EAAQ0B,UAAU24B,GAAG+E,aAAa1/B,KAAK2/B,UACvC3/B,KAAK2/B,SAAW,MAEpBr/B,EAAQ0B,UAAU24B,GAAGiF,cAAc5/B,KAAKs/B,YACxCt/B,KAAKs/B,WAAa,OApBV,CAAAn9B,IAAA,SAAAzE,MAAA,SAsBLmiC,EAAmBC,GAGtB,GAFA9/B,KAAKw/B,SAAWx/B,KAAK+/B,WAAWF,EAAmBv/B,EAAQ0B,UAAU24B,GAAGqF,eACxEhgC,KAAK2/B,SAAW3/B,KAAK+/B,WAAWD,EAAqBx/B,EAAQ0B,UAAU24B,GAAGsF,kBACrEjgC,KAAK2/B,WAAa3/B,KAAKw/B,SACxB,MAAM,IAAI1L,MAAM,oBAIpB,GAHAxzB,EAAQ0B,UAAU24B,GAAGuF,aAAalgC,KAAKs/B,WAAYt/B,KAAKw/B,UACxDl/B,EAAQ0B,UAAU24B,GAAGuF,aAAalgC,KAAKs/B,WAAYt/B,KAAK2/B,UACxDr/B,EAAQ0B,UAAU24B,GAAGwF,YAAYngC,KAAKs/B,aACjCh/B,EAAQ0B,UAAU24B,GAAGyF,oBAAoBpgC,KAAKs/B,WAAYh/B,EAAQ0B,UAAU24B,GAAG0F,aAChF,MAAM,IAAIvM,MAAMxzB,EAAQ0B,UAAU24B,GAAG2F,kBAAkBtgC,KAAKs/B,eA/BxD,CAAAn9B,IAAA,aAAAzE,MAAA,SAsCD6iC,EAAa5R,GACpB,IAAI6R,EAASlgC,EAAQ0B,UAAU24B,GAAG8F,aAAa9R,GAI/C,GAHAruB,EAAQ0B,UAAU24B,GAAG+F,aAAaF,EAAQD,GAC1CjgC,EAAQ0B,UAAU24B,GAAGgG,cAAcH,IAE9BlgC,EAAQ0B,UAAU24B,GAAGiG,mBAAmBJ,EAAQlgC,EAAQ0B,UAAU24B,GAAGkG,gBACtE,MAAM,IAAI/M,MAAMxzB,EAAQ0B,UAAU24B,GAAGmG,iBAAiBN,IAG1D,OAAOA,IA/CC,CAAAr+B,IAAA,YAAArC,IAAA,WAMR,OAAOE,KAAKs/B,eANJD,EAAA,GAkDhB/+B,EAAQ++B,UAAYA,EAlDxB,CAmDG/+B,IAAYA,EAAU,KAGzB,SAAWA,GACPA,EAAQygC,QAAU,QADF,IAEVC,EAFU,SAAAC,GAGZ,SAAAD,EAAYz5B,GAAQ,IAAA25B,EAAA,OAAA/jC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAghC,IAChBE,EAAA/jC,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA6jC,GAAA1jC,KAAA0C,QACKmhC,WAAa,KAClBD,EAAKE,QAAU75B,EAHC25B,EAHR,OAAA/jC,OAAAiT,EAAA,EAAAjT,CAAA6jC,EAAAC,GAAA9jC,OAAA+E,EAAA,EAAA/E,CAAA6jC,EAAA,EAAA7+B,IAAA,mBAAAzE,MAAA,WAqBR,GAAKsC,KAAKohC,QAEV,OAAuB,MAAnBphC,KAAKmhC,WACEnhC,KAAKqhC,mBACZrhC,KAAKohC,QAAQ97B,kBACbtF,KAAKohC,QAAQ97B,iBAAiB,4BAA6BtF,KAAKshC,iBAAiB,GACrFhhC,EAAQ0B,UAAU24B,GAAK36B,KAAKuhC,kBAC5BjhC,EAAQw8B,QAAQQ,UAAY,EACA,MAAxBh9B,EAAQ0B,UAAU24B,GACX36B,KAAKshC,gBAAgB,OAChCthC,KAAKmhC,WAAa,IAAI7gC,EAAQ0B,UACvBhC,KAAKqhC,sBAhCJ,CAAAl/B,IAAA,kBAAAzE,MAAA,WAqCR,IAFA,IAAI8jC,EAAQ,CAAC,QAAS,qBAAsB,YAAa,aACrDzd,EAAU,KACL5T,EAAI,EAAGA,EAAIqxB,EAAMp+B,OAAQ+M,IAAK,CACnC,IACI4T,EAAU/jB,KAAKohC,QAAQK,WAAWD,EAAMrxB,GAAI,CAAEuxB,uBAAuB,IAEzE,MAAO9iC,IACP,GAAImlB,EACA,MAER,OAAOA,IA7CC,CAAA5hB,IAAA,kBAAAzE,MAAA,WAgDC,OADa2B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,OAERW,KAAKohC,QAAQ1+B,qBACb1C,KAAKohC,QAAQ1+B,oBAAoB,4BAA6B1C,KAAKshC,iBAAiB,GAE5FthC,KAAK2I,cAAc,IAAIrI,EAAQqC,OAAOisB,cApD9B,CAAAzsB,IAAA,kBAAAzE,MAAA,WAuDR,IAAIkB,EAAI,IAAI0B,EAAQqC,OAAOC,MAAMtC,EAAQqC,OAAOC,MAAMC,kBACtDjE,EAAEnB,OAASuC,KACXA,KAAK2I,cAAc/J,KAzDX,CAAAuD,IAAA,YAAArC,IAAA,WAYR,OAAOE,KAAKmhC,aAZJ,CAAAh/B,IAAA,aAAArC,IAAA,WAeR,OAAOE,KAAKohC,QAAQl6B,QAfZ,CAAA/E,IAAA,cAAArC,IAAA,WAkBR,OAAOE,KAAKohC,QAAQj6B,WAlBZ65B,EAAA,CAEM1gC,EAAQqC,OAAOosB,iBA0DrCzuB,EAAQ0gC,QAAUA,EA5DtB,CA6DG1gC,IAAYA,EAAU,KAsBzB,SAAWA,GAAS,IACV0B,EADU,WAEZ,SAAAA,IAAe7E,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgC,GACXhC,KAAK2hC,eAAgB,EACrB3hC,KAAK4hC,gBAAiB,EACtB5hC,KAAK6hC,eAAiB,KACtB7hC,KAAK8hC,SAAW,GAChB9hC,KAAK+hC,SAAW,GAChB/hC,KAAKgiC,UAAY,GACjBhiC,KAAKiiC,UAAY,GACjB3hC,EAAQsH,qBAAqBs6B,OAVrB,OAAA/kC,OAAA+E,EAAA,EAAA/E,CAAA6E,EAAA,EAAAG,IAAA,sBAAAzE,MAAA,SAYQwJ,EAAiBC,EAAkBg7B,GAAmD,IAA9BC,IAA8B/iC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,KAAAA,UAAA,GACtGW,KAAKkH,MAAQA,EACblH,KAAKmH,OAASA,EACdnF,EAAU24B,GAAG0H,SAAS,EAAG,EAAGn7B,EAAOC,GACnCnH,KAAK4hC,eAAiBQ,EAElBA,GACApiC,KAAKsiC,UAAYtgC,EAAU24B,GAAG4H,iBAAmBvgC,EAAU24B,GAAG6H,iBAAmBxgC,EAAU24B,GAAG8H,mBAC9FzgC,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGgI,YACjC3gC,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGiI,gBAGjC5iC,KAAKsiC,UAAYtgC,EAAU24B,GAAG4H,iBAC9BvgC,EAAU24B,GAAGkI,QAAQ7gC,EAAU24B,GAAGgI,YAClC3gC,EAAU24B,GAAGkI,QAAQ7gC,EAAU24B,GAAGiI,iBA1B9B,CAAAzgC,IAAA,qBAAAzE,MAAA,SA6BOg+B,EAAuBC,GACtC,OAAO,IAAIr7B,EAAQm7B,eAAeC,EAAaC,KA9BvC,CAAAx5B,IAAA,oBAAAzE,MAAA,SAgCM++B,GACd,OAAO,IAAIn8B,EAAQk8B,cAAcC,KAjCzB,CAAAt6B,IAAA,gBAAAzE,MAAA,SAuCEwJ,EAAiBC,EAAkB41B,EAAQC,GAAwE,IAA5CC,EAA4C59B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAA1B,EAAGyjC,EAAuBzjC,UAAA+D,OAAA,EAAA/D,UAAA,QAAAI,EAAjBy9B,EAAiB79B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GACzHkoB,EAAM,IAAIjnB,EAAQw8B,QAAQ51B,EAAOC,EAAQ41B,EAAQC,EAA4BC,EAAiBC,GAElG,OADA3V,EAAIub,KAAOA,EACJvb,IA1CC,CAAAplB,IAAA,qBAAAzE,MAAA,SA4CO2gB,GAAkG,IAAzF+jB,EAAyF/iC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAC7G+iC,GACApiC,KAAKsiC,UAAYtgC,EAAU24B,GAAG4H,iBAAmBvgC,EAAU24B,GAAG6H,iBAAmBxgC,EAAU24B,GAAG8H,mBAC9FzgC,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGgI,YACjC3gC,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGiI,gBAGjC5iC,KAAKsiC,UAAYtgC,EAAU24B,GAAG4H,iBAC9BvgC,EAAU24B,GAAGkI,QAAQ7gC,EAAU24B,GAAGgI,YAClC3gC,EAAU24B,GAAGkI,QAAQ7gC,EAAU24B,GAAGiI,eAKjC5iC,KAAK+iC,kBACN/iC,KAAK+iC,gBAAkB/gC,EAAU24B,GAAGqI,qBAExChhC,EAAU24B,GAAGsI,gBAAgBjhC,EAAU24B,GAAGuI,YAAaljC,KAAK+iC,iBAK5D/gC,EAAU24B,GAAGwI,qBAAqBnhC,EAAU24B,GAAGuI,YAAalhC,EAAU24B,GAAGyI,kBAAmBphC,EAAU24B,GAAGuD,WAAY7f,EAAQglB,iBAAkB,KAlEvI,CAAAlhC,IAAA,wBAAAzE,MAAA,WAuERsE,EAAU24B,GAAGsI,gBAAgBjhC,EAAU24B,GAAGuI,YAAa,QAvE/C,CAAA/gC,IAAA,gBAAAzE,MAAA,WA0ER,OAAO,IAAI4C,EAAQ++B,YA1EX,CAAAl9B,IAAA,oBAAAzE,MAAA,SA+EM4lC,EAAUC,GAA6C,IAArCC,EAAqCnkC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAtB,EAC3CokC,EAAO,EACX,OAFqEpkC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAV,UAGvD,KAAKiB,EAAQmH,4BAA4BwyB,QACrCwJ,EAAO,EACP,MACJ,KAAKnjC,EAAQmH,4BAA4BuyB,QACrCyJ,EAAO,EACP,MACJ,KAAKnjC,EAAQmH,4BAA4BC,QACrC+7B,EAAO,EACP,MACJ,KAAKnjC,EAAQmH,4BAA4BsyB,QACrC0J,EAAO,EACP,MACJ,KAAKnjC,EAAQmH,4BAA4BqyB,QACrC2J,EAAO,EAGf,GAAIA,GAAQ,EACR,MAAM,IAAI3P,MAAM,6BACpB,IAAInL,EAAI,KAAO2a,EAAS3kC,WAGxBqB,KAAK8hC,SAASnZ,GAAK,CAAE8a,KAAMA,EACvBF,OAAQA,EAAOG,SACfC,OAAiC,EAAzBJ,EAAO5H,gBACfiI,OAAuB,EAAfJ,GAERxjC,KAAK6hC,gBACL7hC,KAAK6jC,SAASlb,KA7GV,CAAAxmB,IAAA,gCAAAzE,MAAA,SAkHkBomC,EAAaR,EAAUtH,GACjD,GAAIA,EAAK54B,OAAS,EACd,MAAM,IAAI0wB,MAAM,mBACpB,IAAInL,GAAKmb,GAAexjC,EAAQqJ,qBAAqBE,OAAS,IAAM,KAAO,IAAMy5B,EAAS3kC,WAC1FqB,KAAK+hC,SAASpZ,GAAKqT,EACfh8B,KAAK6hC,gBACL7hC,KAAK+jC,SAASpb,KAxHV,CAAAxmB,IAAA,gCAAAzE,MAAA,SA6HkBomC,EAAaR,EAAU9gB,GAAkCnjB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,IAE/EmjB,EAAOyR,YACX,IAAItL,GAAKmb,GAAexjC,EAAQqJ,qBAAqBE,OAAS,IAAM,KAAO,IAAMy5B,EAAS3kC,WAE1FqB,KAAKgiC,UAAUrZ,GAAKnG,EAAOoO,QACvB5wB,KAAK6hC,gBACL7hC,KAAKgkC,UAAUrb,KApIX,CAAAxmB,IAAA,eAAAzE,MAAA,SAsICumC,EAAS5lB,GAClB,IAAIyR,EAAI,KAAOmU,EAAQtlC,WAEvBqB,KAAKiiC,UAAUnS,GAAKzR,EAChBre,KAAK6hC,gBACL7hC,KAAKkkC,UAAUpU,KA3IX,CAAA3tB,IAAA,aAAAzE,MAAA,SA6IDymC,GACP,GAAe,MAAXA,GAAmBA,GAAWnkC,KAAK6hC,eAAvC,CAIA,IAAIuC,EACJ,IAAKA,KAHLpkC,KAAK6hC,eAAiBsC,EACtBniC,EAAU24B,GAAG0J,WAAWF,EAAQG,WAEtBtkC,KAAK8hC,SACX9hC,KAAK6jC,SAASO,GAClB,IAAKA,KAAKpkC,KAAK+hC,SACX/hC,KAAK+jC,SAASK,GAClB,IAAKA,KAAKpkC,KAAKgiC,UACXhiC,KAAKgkC,UAAUI,GACnB,IAAKA,KAAKpkC,KAAKiiC,UACXjiC,KAAKkkC,UAAUE,MA1JX,CAAAjiC,IAAA,QAAAzE,MAAA,WA4JwF,IAA9F6mC,EAA8FllC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAxF,EAAKmlC,EAAmFnlC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAA3E,EAAKolC,EAAsEplC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAA/D,EAAKwf,EAA0Dxf,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAlD,EAAKqlC,EAA6CrlC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAArC,EAAKslC,EAAgCtlC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAtB,EAAsBA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAChG2C,EAAU24B,GAAGiK,WAAWL,EAAKC,EAAOC,EAAM5lB,GAC1C7c,EAAU24B,GAAGkK,WAAWH,GACxB1iC,EAAU24B,GAAGmK,aAAaH,GAC1B3iC,EAAU24B,GAAGnyB,MAAMxI,KAAKsiC,aAhKhB,CAAAngC,IAAA,aAAAzE,MAAA,SAkKDqnC,GAEP,OADA/iC,EAAU24B,GAAGqK,UAAUhjC,EAAU24B,GAAGsK,IAC5BF,GACJ,KAAKzkC,EAAQ0H,sBAAsBwzB,KAC/Bx5B,EAAU24B,GAAGkI,QAAQ7gC,EAAU24B,GAAGuK,WAClC,MACJ,KAAK5kC,EAAQ0H,sBAAsBC,KAC/BjG,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGuK,WACjCljC,EAAU24B,GAAGwK,SAASnjC,EAAU24B,GAAG1yB,MACnC,MACJ,KAAK3H,EAAQ0H,sBAAsBszB,MAC/Bt5B,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGuK,WACjCljC,EAAU24B,GAAGwK,SAASnjC,EAAU24B,GAAGW,OACnC,MACJ,KAAKh7B,EAAQ0H,sBAAsBuzB,eAC/Bv5B,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGuK,WACjCljC,EAAU24B,GAAGwK,SAASnjC,EAAU24B,GAAGY,mBAlLnC,CAAAp5B,IAAA,eAAAzE,MAAA,SAsLC0nC,EAAWC,GAMpB,OALIrlC,KAAK4hC,iBACL5/B,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGgI,YACjC3iC,KAAK4hC,gBAAiB,GAE1B5/B,EAAU24B,GAAGyK,UAAUA,GACfC,GACJ,KAAK/kC,EAAQ45B,qBAAqBK,KAC9Bv4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAGJ,MACpC,MACJ,KAAKj6B,EAAQ45B,qBAAqBO,MAC9Bz4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAGF,OACpC,MACJ,KAAKn6B,EAAQ45B,qBAAqBE,MAC9Bp4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAGP,OACpC,MACJ,KAAK95B,EAAQ45B,qBAAqBG,QAC9Br4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAGN,SACpC,MACJ,KAAK/5B,EAAQ45B,qBAAqBQ,UAC9B14B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAG4K,UACpC,MACJ,KAAKjlC,EAAQ45B,qBAAqBC,OAC9Bn4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAGR,QACpC,MACJ,KAAK75B,EAAQ45B,qBAAqBM,WAC9Bx4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAG6K,QACpC,MACJ,KAAKllC,EAAQ45B,qBAAqBI,cAC9Bt4B,EAAU24B,GAAG2K,UAAUtjC,EAAU24B,GAAG8K,WAnNpC,CAAAtjC,IAAA,kBAAAzE,MAAA,SAuNIgoC,EAAcC,GACtB3lC,KAAK2hC,gBACL3/B,EAAU24B,GAAG+H,OAAO1gC,EAAU24B,GAAGiL,OACjC5lC,KAAK2hC,eAAgB,GAEzB3/B,EAAU24B,GAAGkL,UAAUH,EAAcC,KA5N7B,CAAAxjC,IAAA,gBAAAzE,MAAA,SA8NEooC,GAAgD,IAAnCC,EAAmC1mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAtB,EAAG2mC,EAAmB3mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,IAAH,EACvD2C,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAGuL,UAAWF,EAAe,EAAIF,EAAYrJ,WAA4B,EAAfuJ,EAAkBhkC,EAAU24B,GAAGwL,eAA6B,EAAbJ,KAhOrI,CAAA5jC,IAAA,YAAAzE,MAAA,SAuOFooC,GAA4C,IAA/BC,EAA+B1mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAlB,EAAG+mC,EAAe/mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,IAAH,EAC/C2C,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAG0L,MAAOD,EAAW,EAAIN,EAAYrJ,WAAwB,EAAX2J,EAAcpkC,EAAU24B,GAAGwL,eAA6B,EAAbJ,KAzOzH,CAAA5jC,IAAA,aAAAzE,MAAA,SA+ODooC,GAA6C,IAAhCC,EAAgC1mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAnB,EAAGinC,EAAgBjnC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,IAAH,EACjD2C,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAG4L,OAAQD,EAAY,EAAIR,EAAYrJ,WAAa6J,EAAWtkC,EAAU24B,GAAGwL,eAA6B,EAAbJ,KAjPxH,CAAA5jC,IAAA,eAAAzE,MAAA,SAuPCooC,GAA6C,IAAhCC,EAAgC1mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAnB,EAAGinC,EAAgBjnC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,IAAH,EACnD2C,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAG6L,UAAWF,EAAY,EAAIR,EAAYrJ,WAAa6J,EAAWtkC,EAAU24B,GAAGwL,eAA6B,EAAbJ,KAzP3H,CAAA5jC,IAAA,gBAAAzE,MAAA,SA+PEooC,GAA6C,IAAhCC,EAAgC1mC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAnB,EAAGinC,EAAgBjnC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,IAAH,EACpD2C,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAG8L,WAAYH,EAAY,EAAIR,EAAYrJ,WAAa6J,EAAWtkC,EAAU24B,GAAGwL,eAA6B,EAAbJ,KAjQ5H,CAAA5jC,IAAA,oBAAAzE,MAAA,SAuQMooC,GACd9jC,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAG+L,eAAgBZ,EAAYrJ,WAAYz6B,EAAU24B,GAAGwL,eAAgB,KAzQpG,CAAAhkC,IAAA,kBAAAzE,MAAA,SAiRIooC,GACZ9jC,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGiC,qBAAsBkJ,EAAYpC,UACvE1hC,EAAU24B,GAAGsL,aAAajkC,EAAU24B,GAAGgM,aAAcb,EAAYrJ,WAAYz6B,EAAU24B,GAAGwL,eAAgB,KAnRlG,CAAAhkC,IAAA,mBAAAzE,MAAA,SAqRKmmB,MArRL,CAAA1hB,IAAA,UAAAzE,MAAA,eAAAyE,IAAA,WAAAzE,MAAA,SA6RHkpC,GACL,IAAIC,EAAW7kC,EAAU24B,GAAGmM,kBAAkB9mC,KAAK6hC,eAAeyC,UAAWsC,GAC7E,GAAIC,EAAW,EACX,MAAM,IAAI/S,MAAM,uCAAyC8S,GAE7D,IAAIre,EAAKvoB,KAAK8hC,SAAS8E,GACvB5kC,EAAU24B,GAAGwB,WAAWn6B,EAAU24B,GAAGyB,aAAc7T,EAAGgb,QACtDvhC,EAAU24B,GAAGoM,oBAAoBF,EAAUte,EAAGkb,KAAMzhC,EAAU24B,GAAGqM,OAAO,EAAOze,EAAGob,OAAQpb,EAAGqb,QAC7F5hC,EAAU24B,GAAGsM,wBAAwBJ,KArS7B,CAAA1kC,IAAA,WAAAzE,MAAA,SAwSHkpC,GACL,IAAIhwB,EAAQ5U,EAAU24B,GAAGuM,mBAAmBlnC,KAAK6hC,eAAeyC,UAAWsC,GAC3E,IAAKhwB,EACD,MAAM,IAAIkd,MAAM,uBAAyB8S,GAC7C,IAAIO,EAAKnnC,KAAK+hC,SAAS6E,GACvB5kC,EAAU24B,GAAG,UAAYwM,EAAG/jC,OAAS,MAAMwT,EAAOuwB,KA7S1C,CAAAhlC,IAAA,YAAAzE,MAAA,SA+SFkpC,GACN,IAAIhwB,EAAQ5U,EAAU24B,GAAGuM,mBAAmBlnC,KAAK6hC,eAAeyC,UAAWsC,GAC3E,IAAKhwB,EACD,MAAM,IAAIkd,MAAM,uBAAyB8S,GAC7C5kC,EAAU24B,GAAGyM,iBAAiBxwB,GAAO,EAAO5W,KAAKgiC,UAAU4E,MAnTnD,CAAAzkC,IAAA,YAAAzE,MAAA,SAqTFkpC,GACN,IAAIrf,EAAMvnB,KAAKiiC,UAAU2E,GACrBrf,EAAIuW,YAAc97B,EAAUC,YAC5BslB,EAAIwW,WAGJ/7B,EAAU24B,GAAGqD,cAAch8B,EAAU24B,GAAG,UAAYpT,EAAIuW,cAE5D,IAAIjyB,EAAI7J,EAAU24B,GAAGuM,mBAAmBlnC,KAAK6hC,eAAeyC,UAAWsC,GACvE,IAAK/6B,EACD,MAAM,IAAIioB,MAAM,mBAAqB8S,GAErCrf,EAAIuW,YAAc97B,EAAUC,YAC5BD,EAAU24B,GAAG0M,UAAUx7B,EAAG7J,EAAUC,YAAc,GAGlDD,EAAU24B,GAAG0M,UAAUx7B,EAAG0b,EAAIuW,eArU1B,CAAA37B,IAAA,UAAAzE,MAAA,WAyUJsC,KAAK+iC,iBACL/gC,EAAU24B,GAAG2M,kBAAkBtnC,KAAK+iC,qBA1UhC/gC,EAAA,GA8UhBA,EAAUC,YAAc,GACxB3B,EAAQ0B,UAAYA,EA/UxB,CAgVG1B,IAAYA,EAAU,KAEzB,SAAWA,GAAS,IACVqJ,EADU,SAAAA,IAAAxM,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA2J,IAGhBA,EAAqBE,OAAS,SAC9BF,EAAqBC,SAAW,WAChCtJ,EAAQqJ,qBAAuBA,EALnC,CAMGrJ,IAAYA,EAAU,MAStBA,IAAYA,EAAU,KADbyV,aAHJ,SAAAA,IAAe5Y,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA+V,IAMvB,SAAWzV,GAAS,IAEV4gB,EAFU,WAGZ,SAAAA,IAAe/jB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAkhB,GAHH,OAAA/jB,OAAA+E,EAAA,EAAA/E,CAAA+jB,EAAA,EAAA/e,IAAA,0BAAAzE,MAAA,gBAAAwjB,EAAA,GAShB5gB,EAAQ4gB,YAAcA,EAT1B,CAUG5gB,IAAYA,EAAU,KAEzB,SAAWA,GAKP,IACMyJ,EANU,SAAAA,IAAA5M,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA+J,IAQhBA,EAAUE,IAAM,MAChBF,EAAUC,MAAQ,QAClBD,EAAUw9B,OAAS,SACnBx9B,EAAUy9B,WAAa,aACvBz9B,EAAUW,MAAQ,QAClBX,EAAU09B,UAAY,YACtB19B,EAAU29B,OAAS,SACnB39B,EAAU49B,MAAQ,QAClB59B,EAAU69B,QAAU,UACpB79B,EAAUI,SAAW,WACrBJ,EAAU89B,OAAS,SACnB99B,EAAU+9B,QAAU,UACpB/9B,EAAUS,OAAS,SACnBT,EAAUg+B,OAAS,SACnBh+B,EAAUi+B,SAAW,WAErB,IAAIC,EAAoB,IAAI,WACxBjoC,KAAKgK,MAAQ,EACbhK,KAAKkoC,KAAO,EACZloC,KAAKmoC,MAAQ,EACbnoC,KAAKooC,IAAM,GA5BC,IA4CVC,EA5CU,WA6CZ,SAAAA,IAAelrC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAqoC,GACXroC,KAAKsoC,KAAO,EA9CJ,OAAAnrC,OAAA+E,EAAA,EAAA/E,CAAAkrC,EAAA,EAAAlmC,IAAA,OAAAzE,MAAA,WAgDH,OAAQsC,KAAKuoC,MAAQ,aAhDlB,CAAApmC,IAAA,YAAAzE,MAAA,SAkDFkQ,EAAKC,GAAO,OAAOD,GAAQC,EAAMD,GAAO5N,KAAKwoC,SAlD3C,CAAArmC,IAAA,MAAAzE,MAAA,WAoDJ,OAAOsC,KAAKsoC,KAAoB,MAAZtoC,KAAKsoC,KAAgB,eApDrCD,EAAA,GAwDVI,EAxDU,WAyDZ,SAAAA,EAAYF,GAAMprC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAyoC,GACdzoC,KAAK0oC,KAAOH,EACZvoC,KAAK2oC,MAAQ,CACT,CAAC,EAAG,EAAG,GAAI,EAAE,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,EAAE,GAAI,EAAG,GAC5C,CAAC,EAAG,EAAG,GAAI,EAAE,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,EAAE,EAAG,GAAI,GAC5C,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,GAAI,IAEhD3oC,KAAK4oC,QAAU,CACX,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5G,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAxExG,OAAAzrC,OAAA+E,EAAA,EAAA/E,CAAAsrC,EAAA,EAAAtmC,IAAA,UAAAzE,MAAA,SA2EJ4qC,GACJtoC,KAAKue,EAAI,GACTve,KAAK0oC,KAAKJ,KAAOA,EACjB,IAAK,IAAIn4B,EAAI,EAAGA,EAAI,IAAKA,IACrBnQ,KAAKue,EAAEpO,GAAKrE,KAAKmR,MAAMjd,KAAK0oC,KAAKG,UAAU,EAAG,MAElD7oC,KAAK8oC,KAAO,GACZ,IAAS34B,EAAI,EAAGA,EAAI,IAAKA,IACrBnQ,KAAK8oC,KAAK34B,GAAKnQ,KAAKue,EAAM,IAAJpO,KAnFlB,CAAAhO,IAAA,MAAAzE,MAAA,SAsFRohB,EAAGzS,EAAGC,GACN,OAAOwS,EAAE,GAAKzS,EAAIyS,EAAE,GAAKxS,IAvFjB,CAAAnK,IAAA,QAAAzE,MAAA,SAyFNqrC,EAAKC,GACP,IAWIC,EAAIC,EATJpZ,GAAKiZ,EAAMC,IADN,IAAOl9B,KAAKC,KAAK,GAAO,IAE7BoE,EAAIrE,KAAKmR,MAAM8rB,EAAMjZ,GACrBjY,EAAI/L,KAAKmR,MAAM+rB,EAAMlZ,GACrBqZ,GAAM,EAAMr9B,KAAKC,KAAK,IAAQ,EAC9BsT,GAAKlP,EAAI0H,GAAKsxB,EAGdC,EAAKL,GAFA54B,EAAIkP,GAGTgqB,EAAKL,GAFAnxB,EAAIwH,GAIT+pB,EAAKC,GACLJ,EAAK,EACLC,EAAK,IAGLD,EAAK,EACLC,EAAK,GAET,IAAII,EAAKF,EAAKH,EAAKE,EACfI,EAAKF,EAAKH,EAAKC,EACf9R,EAAK+R,EAAK,EAAM,EAAMD,EACtB7R,EAAK+R,EAAK,EAAM,EAAMF,EACtBK,EAAS,IAAJr5B,EACLs5B,EAAS,IAAJ5xB,EACL6xB,EAAM1pC,KAAK8oC,KAAKU,EAAKxpC,KAAK8oC,KAAKW,IAAO,GACtCE,EAAM3pC,KAAK8oC,KAAKU,EAAKP,EAAKjpC,KAAK8oC,KAAKW,EAAKP,IAAO,GAChDU,EAAM5pC,KAAK8oC,KAAKU,EAAK,EAAIxpC,KAAK8oC,KAAKW,EAAK,IAAM,GAC9CI,EAAK,GAAMT,EAAKA,EAAKC,EAAKA,EAO1BS,EAAK,GAAMR,EAAKA,EAAKC,EAAKA,EAO1BQ,EAAK,GAAM1S,EAAKA,EAAKC,EAAKA,EAO9B,OAAO,KApBHuS,EAAK,EACA,GAELA,GAAMA,GACIA,EAAK7pC,KAAKke,IAAIle,KAAK2oC,MAAMe,GAAMN,EAAIC,KAG7CS,EAAK,EACA,GAELA,GAAMA,GACIA,EAAK9pC,KAAKke,IAAIle,KAAK2oC,MAAMgB,GAAML,EAAIC,KAG7CQ,EAAK,EACA,GAELA,GAAMA,GACIA,EAAK/pC,KAAKke,IAAIle,KAAK2oC,MAAMiB,GAAMvS,EAAIC,SA1IzCmR,EAAA,GA+IVzhC,EA/IU,WAgJZ,SAAAA,IAAe7J,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgH,GACXhH,KAAKlB,EAAI,EACTkB,KAAK+N,EAAI,EACT/N,KAAKymB,EAAI,EACTzmB,KAAK+0B,EAAI,EACT/0B,KAAKqiB,GAAK,EACVriB,KAAKsiB,GAAK,EAtJF,OAAAnlB,OAAA+E,EAAA,EAAA/E,CAAA6J,EAAA,EAAA7E,IAAA,WAAAzE,MAAA,WAyJRsC,KAAKlB,EAAI,EACTkB,KAAK+N,EAAI,EACT/N,KAAKymB,EAAI,EACTzmB,KAAK+0B,EAAI,EACT/0B,KAAKqiB,GAAK,EACVriB,KAAKsiB,GAAK,IA9JF,CAAAngB,IAAA,QAAAzE,MAAA,SAgKN2O,EAAGC,GACK,IAAND,IACArM,KAAKlB,GAAKuN,EACVrM,KAAKymB,GAAKpa,EACVrM,KAAKqiB,IAAMhW,GAEL,IAANC,IACAtM,KAAK+N,GAAKzB,EACVtM,KAAK+0B,GAAKzoB,EACVtM,KAAKsiB,IAAMhW,KAzKP,CAAAnK,IAAA,YAAAzE,MAAA,SA4KF2O,EAAGC,GACTtM,KAAKqiB,IAAMhW,EACXrM,KAAKsiB,IAAMhW,MA9KHtF,EAAA,GAiLhB1G,EAAQ0G,OAASA,EAjLD,IAkLVF,EAlLU,WAmLZ,SAAAA,EAAYI,EAAOC,GAAkE,IAA1D6iC,EAA0D3qC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAfkI,GAAelI,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAN,MAAMlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA8G,GACjF9G,KAAKkH,MAAQ4E,KAAKmR,MAAM/V,GACxBlH,KAAKmH,OAAS2E,KAAKmR,MAAM9V,GACzBnH,KAAKoO,KAAO,IAAIQ,EAAU,EAAG,EAAG5O,KAAKkH,MAAOlH,KAAKmH,QACjDnH,KAAKgqC,YAAcA,IAAe,EAClChqC,KAAKuH,OAASA,GAAUkM,SAASC,cAAc,UAC/C1T,KAAK+jB,QAAU/jB,KAAKuH,OAAOk6B,WAAW,KAAM,CAAEwI,oBAAoB,IAClEjqC,KAAKuH,OAAO2iC,aAAa,QAASlqC,KAAKkH,MAAMvI,YAC7CqB,KAAKuH,OAAO2iC,aAAa,SAAUlqC,KAAKmH,OAAOxI,YAC/CqB,KAAKmqC,cAAgB12B,SAASC,cAAc,UAC5C1T,KAAKoqC,eAAiBpqC,KAAKmqC,cAAc1I,WAAW,KAAM,CAAEwI,oBAAoB,IAC5ED,IACAhqC,KAAK+jB,QAAQI,UAAY,gBACzBnkB,KAAK+jB,QAAQxV,SAAS,EAAG,EAAGvO,KAAKkH,MAAOlH,KAAKmH,QAC7CnH,KAAKoqC,eAAejmB,UAAY,gBAChCnkB,KAAKoqC,eAAe77B,SAAS,EAAG,EAAGvO,KAAKkH,MAAOlH,KAAKmH,SAExDnH,KAAKy9B,UAAYz9B,KAAK+jB,QAAQsmB,aAAa,EAAG,EAAGrqC,KAAKkH,MAAOlH,KAAKmH,QApM1D,OAAAhK,OAAA+E,EAAA,EAAA/E,CAAA2J,EAAA,EAAA3E,IAAA,aAAAzE,MAAA,SA4MD2O,EAAGC,EAAGsR,GACb,IAAI4W,EAAiE,GAA1D1oB,KAAKmR,MAAM5Q,GAAKP,KAAKmR,MAAM3Q,GAAKR,KAAKmR,MAAMjd,KAAKkH,QACvD80B,EAAOh8B,KAAKy9B,UAAUzB,KAC1BA,EAAKxH,EAAM,GAAM5W,GAAS,GAAM,IAChCoe,EAAKxH,EAAM,GAAM5W,GAAS,EAAK,IAC/Boe,EAAKxH,EAAM,GAAM5W,GAAS,EAAK,IAC/Boe,EAAKxH,EAAM,GAAM5W,GAAS,GAAM,MAlNxB,CAAAzb,IAAA,WAAAzE,MAAA,SAqNH2O,EAAGC,GACR,IAAIkoB,EAAiE,GAA1D1oB,KAAKmR,MAAM5Q,GAAKP,KAAKmR,MAAM3Q,GAAKR,KAAKmR,MAAMjd,KAAKkH,QACvD80B,EAAOh8B,KAAKy9B,UAAUzB,KAO1B,MANU,CACNrtB,EAAGqtB,EAAKxH,EAAM,GACd1V,EAAGkd,EAAKxH,EAAM,GACdzmB,EAAGiuB,EAAKxH,EAAM,GACd11B,EAAGk9B,EAAKxH,EAAM,MA5NV,CAAAryB,IAAA,aAAAzE,MAAA,SAgOD2O,EAAGC,GACV,IAAIkoB,EAAiE,GAA1D1oB,KAAKmR,MAAM5Q,GAAKP,KAAKmR,MAAM3Q,GAAKR,KAAKmR,MAAMjd,KAAKkH,QACvD80B,EAAOh8B,KAAKy9B,UAAUzB,KACtBsO,EACGtO,EAAKxH,EAAM,GADd8V,EAEGtO,EAAKxH,EAAM,GAFd8V,EAGGtO,EAAKxH,EAAM,GAGlB,OAFOwH,EAAKxH,EAAM,IAED,GAAK8V,GAAU,GAAKA,GAAU,EAAIA,IAzO3C,CAAAnoC,IAAA,QAAAzE,MAAA,SA2ON0Q,GACFA,EAAOA,GAAQpO,KAAKoO,KACpBpO,KAAK+jB,QAAQwmB,UAAUn8B,EAAK/B,EAAG+B,EAAK9B,EAAG8B,EAAKlH,MAAOkH,EAAKjH,QACxDnH,KAAKy9B,UAAYz9B,KAAK+jB,QAAQsmB,aAAa,EAAG,EAAGrqC,KAAKuH,OAAOL,MAAOlH,KAAKuH,OAAOJ,UA9OxE,CAAAhF,IAAA,QAAAzE,MAAA,WAiPRsC,KAAK+jB,QAAQymB,aAAaxqC,KAAKy9B,UAAW,EAAG,GAC7C,IAAIgN,EAAS,IAAI3jC,EAAW9G,KAAKkH,MAAOlH,KAAKmH,OAAQnH,KAAKgqC,aAE1D,OADAS,EAAOhN,UAAYz9B,KAAK+jB,QAAQsmB,aAAa,EAAG,EAAGrqC,KAAKkH,MAAOlH,KAAKmH,QAC7DsjC,IApPC,CAAAtoC,IAAA,aAAAzE,MAAA,SAsSDgtC,EAAcC,EAAYC,EAAW/oC,GAC5C7B,KAAK+jB,QAAQymB,aAAaxqC,KAAKy9B,UAAW,EAAG,GAC7C,IAAIoN,EAAK7qC,KAAKuH,OAAOL,MAAQyjC,EAAWzjC,MAAQ0jC,EAAUv+B,EACtDy+B,EAAK9qC,KAAKuH,OAAOJ,OAASwjC,EAAWxjC,OAASyjC,EAAUt+B,EACxDy+B,EAAMF,EAAK,EAAKF,EAAWzjC,OAASlH,KAAKuH,OAAOL,MAAQyjC,EAAWzjC,MAAQ0jC,EAAUv+B,GAAKs+B,EAAWzjC,MACrG8jC,EAAMF,EAAK,EAAKH,EAAWxjC,QAAUnH,KAAKuH,OAAOJ,OAASwjC,EAAWxjC,OAASyjC,EAAUt+B,GAAKq+B,EAAWxjC,OAC5G,GAAItF,GAAaA,GAAakI,EAAU89B,OAIpC,IAHA,IACIoD,EAAWC,EADXC,EAAaT,EAAajJ,WAAW,MAAM4I,aAAaM,EAAWt+B,EAAGs+B,EAAWr+B,EAAGy+B,EAAIC,GAAIhP,KAE5FA,EAAOh8B,KAAKy9B,UAAUzB,KACjB1vB,EAAI,EAAGA,EAAI0+B,EAAI1+B,IACpB,IAAK,IAAID,EAAI,EAAGA,EAAI0+B,EAAI1+B,IAGpB,OAFA4+B,EAA2B,GAAd5+B,EAAIC,EAAIy+B,GACrBG,EAAiE,GAArD7+B,EAAIu+B,EAAUv+B,GAAMC,EAAIs+B,EAAUt+B,GAAKtM,KAAKkH,OAChDrF,GACJ,KAAKkI,EAAUE,IACX+xB,EAAKkP,GAAWp/B,KAAK8B,IAAIouB,EAAKkP,GAAWC,EAAWF,GAAY,KAChEjP,EAAKkP,EAAU,GAAKp/B,KAAK8B,IAAIouB,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,GAAI,KAC5EjP,EAAKkP,EAAU,GAAKp/B,KAAK8B,IAAIouB,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,GAAI,KAC5E,MACJ,KAAKlhC,EAAUi+B,SACXhM,EAAKkP,GAAWp/B,KAAK+B,IAAIs9B,EAAWF,GAAajP,EAAKkP,GAAU,GAChElP,EAAKkP,EAAU,GAAKp/B,KAAK+B,IAAIs9B,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,GAAI,GAC5ElP,EAAKkP,EAAU,GAAKp/B,KAAK+B,IAAIs9B,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,GAAI,GAC5E,MACJ,KAAKnhC,EAAU29B,OACX1L,EAAKkP,GAAW,IAAMC,EAAWF,GACjCjP,EAAKkP,EAAU,GAAK,IAAMC,EAAWF,EAAY,GACjDjP,EAAKkP,EAAU,GAAK,IAAMC,EAAWF,EAAY,GACjD,MACJ,KAAKlhC,EAAUI,SACX6xB,EAAKkP,GAAWp/B,KAAKmR,MAAMkuB,EAAWF,GAAajP,EAAKkP,GAAW,KACnElP,EAAKkP,EAAU,GAAKp/B,KAAKmR,MAAMkuB,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,GAAK,KAC/ElP,EAAKkP,EAAU,GAAKp/B,KAAKmR,MAAMkuB,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,GAAK,KAC/E,MACJ,KAAKnhC,EAAU69B,QACPuD,EAAWF,GAAajP,EAAKkP,KAC7BlP,EAAKkP,GAAWC,EAAWF,IAC3BE,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,KAC3ClP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,IAC3CE,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,KAC3ClP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,IAC/C,MACJ,KAAKlhC,EAAUw9B,OACP4D,EAAWF,GAAajP,EAAKkP,KAC7BlP,EAAKkP,GAAWC,EAAWF,IAC3BE,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,KAC3ClP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,IAC3CE,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,KAC3ClP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,IAC/C,MACJ,KAAKlhC,EAAUy9B,WACXxL,EAAKkP,GAAWp/B,KAAKyB,IAAI49B,EAAWF,GAAajP,EAAKkP,IACtDlP,EAAKkP,EAAU,GAAKp/B,KAAKyB,IAAI49B,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,IACxElP,EAAKkP,EAAU,GAAKp/B,KAAKyB,IAAI49B,EAAWF,EAAY,GAAKjP,EAAKkP,EAAU,IACxE,MACJ,KAAKnhC,EAAUS,OACXwxB,EAAKkP,GAAY,MAAS,IAAMlP,EAAKkP,KAAa,IAAMC,EAAWF,KAAgB,GACnFjP,EAAKkP,EAAU,GAAM,MAAS,IAAMlP,EAAKkP,EAAU,KAAO,IAAMC,EAAWF,EAAY,KAAQ,GAC/FjP,EAAKkP,EAAU,GAAM,MAAS,IAAMlP,EAAKkP,EAAU,KAAO,IAAMC,EAAWF,EAAY,KAAQ,GAC/F,MACJ,KAAKlhC,EAAU+9B,QACPqD,EAAWF,GAAa,IACxBjP,EAAKkP,GAAWlP,EAAKkP,GAAWC,EAAWF,GAhWtD,aAkWWjP,EAAKkP,GAAW,KAAO,IAAMlP,EAAKkP,KAAa,IAAMC,EAAWF,IAlW3E,aAmWWE,EAAWF,EAAY,GAAK,IAC5BjP,EAAKkP,EAAU,GAAKlP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,GApW1E,aAsWWjP,EAAKkP,EAAU,GAAK,KAAO,IAAMlP,EAAKkP,EAAU,KAAO,IAAMC,EAAWF,EAAY,IAtW/F,aAuWWE,EAAWF,EAAY,GAAK,IAC5BjP,EAAKkP,EAAU,GAAKlP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,GAxW1E,aA0WWjP,EAAKkP,EAAU,GAAK,KAAO,IAAMlP,EAAKkP,EAAU,KAAO,IAAMC,EAAWF,EAAY,IA1W/F,aA2WO,MACJ,KAAKlhC,EAAU09B,UACPzL,EAAKkP,GAAW,IAChBlP,EAAKkP,GAAWlP,EAAKkP,GAAWC,EAAWF,GA9WtD,aAgXWjP,EAAKkP,GAAW,KAAO,IAAMlP,EAAKkP,KAAa,IAAMC,EAAWF,IAhX3E,aAiXWjP,EAAKkP,EAAU,GAAK,IACpBlP,EAAKkP,EAAU,GAAKlP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,GAlX1E,aAoXWjP,EAAKkP,EAAU,GAAK,KAAO,IAAMlP,EAAKkP,EAAU,KAAO,IAAMC,EAAWF,EAAY,IApX/F,aAqXWjP,EAAKkP,EAAU,GAAK,IACpBlP,EAAKkP,EAAU,GAAKlP,EAAKkP,EAAU,GAAKC,EAAWF,EAAY,GAtX1E,aAwXWjP,EAAKkP,EAAU,GAAK,KAAO,IAAMlP,EAAKkP,EAAU,KAAO,IAAMC,EAAWF,EAAY,IAxX/F,kBA+XTjrC,KAAK+jB,QAAQqnB,UAAUV,EAAcC,EAAWt+B,EAAGs+B,EAAWr+B,EAAGy+B,EAAIC,EAAIJ,EAAUv+B,EAAGu+B,EAAUt+B,EAAGy+B,EAAIC,GACvGhrC,KAAKy9B,UAAYz9B,KAAK+jB,QAAQsmB,aAAa,EAAG,EAAGrqC,KAAKuH,OAAOL,MAAOlH,KAAKuH,OAAOJ,QAEpFnH,KAAK+jB,QAAQymB,aAAaxqC,KAAKy9B,UAAW,EAAG,KAvYrC,CAAAt7B,IAAA,aAAAzE,MAAA,SAmaD2tC,EAAkBV,EAAYC,GAAyC,IAA9B/oC,EAA8BxC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAlB0K,EAAU89B,OACtE7nC,KAAKsrC,WAAWD,EAAiB9jC,OAAQojC,EAAYC,EAAW/oC,KApaxD,CAAAM,IAAA,OAAAzE,MAAA,SAsaPigC,EAAQnb,EAAQ+oB,EAAgB1pC,EAAW2pC,EAAUvzB,GACtD,IAAIwzB,EAAU9N,aAAkB72B,EAAa62B,EAAOp2B,OAASo2B,EACzD+N,EAAelpB,GAAU,IAAIxb,EAC7B2jC,EAAaa,GAAY,IAAI58B,EAAU,EAAG,EAAG+uB,EAAOz2B,MAAOy2B,EAAOx2B,QACtEnH,KAAK+jB,QAAQ4nB,UAAUD,EAAa5sC,EAAG4sC,EAAa39B,EAAG29B,EAAajlB,EAAGilB,EAAa3W,EAAG2W,EAAarpB,GAAIqpB,EAAappB,IAErHtiB,KAAK+jB,QAAQqnB,UAAUK,EAASd,EAAWt+B,EAAGs+B,EAAWr+B,EAAGq+B,EAAWzjC,MAAOyjC,EAAWxjC,OAAQ,EAAG,EAAGwjC,EAAWzjC,MAAOyjC,EAAWxjC,QACpInH,KAAKy9B,UAAYz9B,KAAK+jB,QAAQsmB,aAAa,EAAG,EAAGrqC,KAAKkH,MAAOlH,KAAKmH,UA7a1D,CAAAhF,IAAA,WAAAzE,MAAA,SAgbH0Q,EAAMwP,GACX5d,KAAK+jB,QAAQymB,aAAaxqC,KAAKy9B,UAAW,EAAG,GAC7C,IAnZUmO,EAmZNC,EAnZoB,CAAEl9B,GAAW,UAA3Bi9B,EAmZShuB,KAnZ+B,GAAKkB,GAAW,MAAN8sB,IAAmB,EAAI79B,EAAW,IAAN69B,GAoZxF5rC,KAAK+jB,QAAQI,UAAY,OAAS0nB,EAAIl9B,EAAI,IAAMk9B,EAAI/sB,EAAI,IAAM+sB,EAAI99B,EAAI,IACtE/N,KAAK+jB,QAAQxV,SAASH,EAAK/B,EAAG+B,EAAK9B,EAAG8B,EAAKlH,MAAOkH,EAAKjH,QACvDnH,KAAKy9B,UAAYz9B,KAAK+jB,QAAQsmB,aAAa,EAAG,EAAGrqC,KAAKuH,OAAOL,MAAOlH,KAAKuH,OAAOJ,UArbxE,CAAAhF,IAAA,cAAAzE,MAAA,SAwbAouC,EAAOC,EAAOC,EAAYC,EAAgBC,GAClDlsC,KAAK0oC,KAAO1oC,KAAK0oC,MAAQ,IAAIL,EAC7BroC,KAAK0oC,KAAKJ,KAAO0D,EACjB,IAAIG,EAAalE,EAAkBG,IAC/BgE,EAAenE,EAAkBE,MACjCkE,EAAcpE,EAAkBC,KACpC+D,EAAiBA,GAAkB,EACnCC,EAAYA,IAAa,EACzB,IAiBI1X,EAAK8X,EAAIC,EAAIC,EAjBbxQ,EAAOh8B,KAAKy9B,UAAUzB,KACtByQ,EAAc,EACdR,EAAiBE,IACjBnsC,KAAK0sC,SAAW1sC,KAAK0sC,UAAY,IAAIjE,EAAazoC,KAAK0oC,MACvD1oC,KAAK0sC,SAASC,QAAQX,GACtBS,KAEAR,EAAiBG,IACjBpsC,KAAK4sC,SAAW5sC,KAAK4sC,UAAY,IAAInE,EAAazoC,KAAK0oC,MACvD1oC,KAAK4sC,SAASD,QAAQX,EAAa,GACnCS,KAEAR,EAAiBI,IACjBrsC,KAAK6sC,SAAW7sC,KAAK6sC,UAAY,IAAIpE,EAAazoC,KAAK0oC,MACvD1oC,KAAK6sC,SAASF,QAAQX,EAAa,GACnCS,KAGJ,IAAK,IAAIngC,EAAI,EAAGA,EAAItM,KAAKmH,OAAQmF,IAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIrM,KAAKkH,MAAOmF,IAAK,CAKjC,GAJAmoB,EAA6B,GAAtBnoB,EAAIC,EAAItM,KAAKkH,OACpBolC,EAAML,EAAiBE,EAAcrgC,KAAKmR,MAAyD,IAAjDjd,KAAK0sC,SAASI,MAAMzgC,EAAIy/B,EAAOx/B,EAAIy/B,GAAS,GAAY,KAAO,EACjHQ,EAAMN,EAAiBG,EAAgBtgC,KAAKmR,MAAyD,IAAjDjd,KAAK4sC,SAASE,MAAMzgC,EAAIy/B,EAAOx/B,EAAIy/B,GAAS,GAAY,KAAO,EACnHS,EAAMP,EAAiBI,EAAevgC,KAAKmR,MAAyD,IAAjDjd,KAAK6sC,SAASC,MAAMzgC,EAAIy/B,EAAOx/B,EAAIy/B,GAAS,GAAY,KAAO,EAC9GG,EAEAI,EAAKC,EAAKC,GADEF,EAAKC,EAAKC,GAAMC,EAGhCzQ,EAAKxH,EAAM,GAAK8X,EAChBtQ,EAAKxH,EAAM,GAAK+X,EAChBvQ,EAAKxH,EAAM,GAAKgY,EAGxBxsC,KAAK+jB,QAAQymB,aAAaxqC,KAAKy9B,UAAW,EAAG,KAjerC,CAAAt7B,IAAA,qBAAAzE,MAAA,SA6hBOkgB,EAAO5G,EAAK+1B,GAG3B,OADQ,IAAIn+B,EAAU,EAAG,EAAG5O,KAAKkH,MAAOlH,KAAKmH,UA/hBrC,CAAAhF,IAAA,kBAAAzE,MAAA,SAkiBIigC,EAAQnb,EAAQ+oB,EAAgB1pC,EAAW2pC,EAAUvzB,EAAW+0B,GAC5EhtC,KAAKoH,KAAKu2B,EAAQnb,EAAQ+oB,EAAgB1pC,EAAW2pC,EAAUvzB,KAniBvD,CAAA9V,IAAA,OAAAzE,MAAA,eAAAyE,IAAA,SAAAzE,MAAA,eAAAyE,IAAA,UAAAzE,MAAA,WA0iBRkH,QAAQC,IAAI,aA1iBJ,CAAA1C,IAAA,cAAAzE,MAAA,SA6iBAuvC,MA7iBA,CAAA9qC,IAAA,YAAAzE,MAAA,SA+iBF0Q,GACN,IAAIua,EAAI,IAAIroB,EAAQ0lB,UACpB2C,EAAEvlB,OAAS0I,KAAKmR,MAAM7O,EAAKlH,OAAS4E,KAAKmR,MAAM7O,EAAKjH,QAAU,EAC9D,IAAK,IAAI0Q,EAAI,EAAGA,EAAIzJ,EAAKjH,SAAU0Q,EAC/B,IAAK,IAAI1H,EAAI,EAAGA,EAAI/B,EAAKlH,QAASiJ,EAAG,CACjC,IAAIoO,EAAIve,KAAKktC,SAAS9+B,EAAK/B,EAAI8D,EAAG/B,EAAK9B,EAAIuL,GAC3C8Q,EAAEzC,UAAU3H,EAAEzf,GACd6pB,EAAEzC,UAAU3H,EAAE5P,GACdga,EAAEzC,UAAU3H,EAAEO,GACd6J,EAAEzC,UAAU3H,EAAExQ,GAItB,OADA4a,EAAE1C,SAAW,EACN0C,IA5jBC,CAAAxmB,IAAA,YAAAzE,MAAA,SA8jBF0Q,EAAMwP,GACZA,EAAMqI,SAAW,EACjB,IAAK,IAAIpO,EAAI,EAAGA,EAAIzJ,EAAKjH,SAAU0Q,EAC/B,IAAK,IAAI1H,EAAI,EAAGA,EAAI/B,EAAKlH,QAASiJ,EAAG,CACzByN,EAAMgK,mBAAd,IACIjZ,EAAIiP,EAAMgK,mBACV9I,EAAIlB,EAAMgK,mBACV7Z,EAAI6P,EAAMgK,mBACd5nB,KAAK8mB,WAAW1Y,EAAK/B,EAAI8D,EAAG/B,EAAK9B,EAAIuL,GAriBnCg0B,EAqiB+C,CAAEl9B,EAAGA,EAAGmQ,EAAGA,EAAG/Q,EAAGA,IAriB9CY,GAAK,GAAKk9B,EAAI/sB,GAAK,EAAI+sB,EAAI99B,GAA/D,IAAkB89B,KAjCF,EAAA1pC,IAAA,mBAAAzE,MAAA,SAsMY+tC,GACpB,IAAI5kC,EAAM,IAAIC,EAAW2kC,EAAQvkC,MAAOukC,EAAQtkC,QAEhD,OADAN,EAAIO,KAAKqkC,GACF5kC,MAzMCC,EAAA,GA2kBhBxG,EAAQwG,WAAaA,EA3kBzB,CA4kBGxG,IAAYA,EAAU,KAEzB,SAAWA,GAAS,IACV0lB,EADU,SAAAmnB,GAEZ,SAAAnnB,IAAc,IAAAonB,EAAA,OAAAjwC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgmB,IACVonB,EAAAjwC,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAA6oB,GAAAhnB,MAAAgB,KAASX,aACJ4mB,SAAW,EAFNmnB,EAFF,OAAAjwC,OAAAiT,EAAA,EAAAjT,CAAA6oB,EAAAmnB,GAAAhwC,OAAA+E,EAAA,EAAA/E,CAAA6oB,EAAA,EAAA7jB,IAAA,mBAAAzE,MAAA,WAoBR,OAAOsC,KAAKA,KAAKimB,cApBT,CAAA9jB,IAAA,YAAAzE,MAAA,SAsBFirB,GACF3oB,KAAKimB,UAAYjmB,KAAKoD,QL/kMvB,SAAA3F,EAAAP,EAAAQ,EAAAC,EAAA0vC,GAGf,IAFU7vC,EAAGC,EAAAP,EAAAQ,EAAAC,GAAAF,IAEb4vC,EACA,UAAAvZ,MAAA,0BK8kMYwZ,CAAAnwC,OAAAI,EAAA,EAAAJ,CAAA6oB,EAAA5oB,WAAM4C,KAAKimB,WAAc0C,EAAzB3oB,MAAA,KA1BQ,CAAAmC,IAAA,SAAArC,IAAA,WAOR,OAAOO,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6oB,EAAA5oB,WAAA,SAAA4C,OAPCnC,IAAA,SASD8qB,GACP,GAAIA,EAAI3oB,KAAKoD,OACT/C,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6oB,EAAA5oB,WAAA,SAAA4C,MAAA1C,KAAA0C,KAAa2oB,QAGb,IAAK,IAAIxY,EAAC9P,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6oB,EAAA5oB,WAAA,SAAA4C,MAAiBmQ,EAAIwY,IAAKxY,EAChC9P,EAAAlD,OAAAI,EAAA,EAAAJ,CAAA6oB,EAAA5oB,WAAA,OAAA4C,MAAA1C,KAAA0C,KAAW,OAfXgmB,EAAA,CAAA1mB,EACQmQ,QA4BxBnP,EAAQ0lB,UAAYA,EA7BxB,CA8BG1lB,IAAYA,EAAU,MAStBA,IAAYA,EAAU,KADbihB,kBAHJ,SAAAA,IAAepkB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAuhB,KAapBjhB,IAAYA,EAAU,KADbugB,iBAHJ,SAAAA,EAAYxU,EAAGC,EAAGihC,EAASC,EAASC,EAAeC,EAAeC,EAAMC,GAAOzwC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA6gB,KAYpFvgB,IAAYA,EAAU,KADbgY,WAHJ,SAAAA,IAAiIjZ,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAA,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GAAAlC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAsY,IAMzI,SAAWhY,GAAS,IACV4V,EADU,WAEZ,SAAAA,IAAe/Y,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAkW,GACXlW,KAAKqe,QAAU,KACfre,KAAK6tC,gBAAkB,IAAIp+B,MAC3BzP,KAAK8tC,YAAc,IAAIr+B,MACvBzP,KAAK+tC,OAAS,IAAIt+B,MAClBzP,KAAKguC,OAAS,IAAIv+B,MAClBzP,KAAKiuC,SAAW,EAChBjuC,KAAKqW,KAAO,EACZrW,KAAKsW,KAAO,EACZtW,KAAK6tC,gBAAgB9uC,KAAK,EAAG,EAAG,EAAG,GACnCiB,KAAK8tC,YAAY/uC,KAAK,EAAG,EAAG,EAAG,GAC/BiB,KAAK+tC,OAAOhvC,KAAK,EAAG,EAAGwB,EAAO0F,cAAcE,YAAa,EAAG,EAAG5F,EAAO0F,cAAcC,aAAc3F,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cACzJlG,KAAKguC,OAAOjvC,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAd9B,OAAA5B,OAAA+E,EAAA,EAAA/E,CAAA+Y,EAAA,EAAA/T,IAAA,eAAAzE,MAAA,SAgBC0Q,EAAM8/B,GACfluC,KAAKiuC,SAAWC,EAChBluC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAkB,GAAb3/B,EAAKlH,MAAalH,KAAKiuC,SACzDjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAoB,IAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC3DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,IAAb3/B,EAAKlH,MAAalH,KAAKiuC,SAC1DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,GAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC1DjuC,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAM5/B,EAAK/B,EAAI+B,EAAKlH,OAAS3G,EAAO0F,cAAcE,YAC/EnG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAK5/B,EAAK9B,EAAI/L,EAAO0F,cAAcC,aAChElG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAK5/B,EAAK/B,EAAI9L,EAAO0F,cAAcE,YAChEnG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAM5/B,EAAK9B,EAAI8B,EAAKjH,QAAU5G,EAAO0F,cAAcC,aAChFlG,KAAKmuC,QAAQ7nC,iBAAiBtG,KAAK+tC,OAAQ,EAAG,GAC9C/tC,KAAKouC,QAAQ9nC,iBAAiBtG,KAAKguC,OAAQ,EAAG,GAC9ChuC,KAAKqM,GAAK+B,EAAK/B,EAAiB,GAAb+B,EAAKlH,OAAclH,KAAKiuC,SAC3CjuC,KAAKsM,GAAK8B,EAAK9B,EAAkB,GAAd8B,EAAKjH,QAAenH,KAAKiuC,SAC5CjuC,KAAKiH,MAAQ,EACbjH,KAAKmY,MAAQ,EACbnY,KAAKkH,MAAQkH,EAAKlH,MAAQlH,KAAKiuC,SAC/BjuC,KAAKmH,OAASiH,EAAKjH,OAASnH,KAAKiuC,WAjCzB,CAAA9rC,IAAA,mBAAAzE,MAAA,SAmCK0Q,EAAMigC,EAAQC,EAAQJ,GACnCluC,KAAKiuC,SAAWC,EAChBluC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAkB,GAAb3/B,EAAKlH,MAAalH,KAAKiuC,SACzDjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAoB,IAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC3DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,IAAb3/B,EAAKlH,MAAalH,KAAKiuC,SAC1DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,GAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC1DjuC,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAMK,EAASjgC,EAAKlH,OAAS3G,EAAO0I,QAAQ+E,cACzEhO,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAKM,EAAS/tC,EAAO0I,QAAQ+E,cAC1DhO,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAKK,EAAS9tC,EAAO0I,QAAQ+E,cAC1DhO,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAMM,EAASlgC,EAAKjH,QAAU5G,EAAO0I,QAAQ+E,cAC1EhO,KAAKqM,GAAK+B,EAAK/B,EAAiB,GAAb+B,EAAKlH,OAAclH,KAAKiuC,SAC3CjuC,KAAKsM,GAAK8B,EAAK9B,EAAkB,GAAd8B,EAAKjH,QAAenH,KAAKiuC,SAC5CjuC,KAAKmuC,QAAQ7nC,iBAAiBtG,KAAK+tC,OAAQ,EAAG,GAC9C/tC,KAAKouC,QAAQ9nC,iBAAiBtG,KAAKguC,OAAQ,EAAG,GAC9ChuC,KAAKiH,MAAQ,EACbjH,KAAKmY,MAAQ,EACbnY,KAAKkH,MAAQkH,EAAKlH,MAAQlH,KAAKiuC,SAC/BjuC,KAAKmH,OAASiH,EAAKjH,OAASnH,KAAKiuC,WApDzB,CAAA9rC,IAAA,QAAAzE,MAAA,SAsDN6wC,EAAMC,EAAWC,GACnBzuC,KAAK8jB,IAAMyqB,EACXvuC,KAAK0uC,SAAWF,EAChBxuC,KAAKuU,iBAAmBk6B,EAGxBzuC,KAAKmuC,QAAUnuC,KAAK8jB,IAAIzd,mBAAmB,EAAG,GAC9CrG,KAAKouC,QAAUpuC,KAAK8jB,IAAIzd,mBAAmB,EAAG,GAC9CrG,KAAKmuC,QAAQ7nC,iBAAiBtG,KAAK+tC,OAAQ,EAAG,GAC9C/tC,KAAKouC,QAAQ9nC,iBAAiBtG,KAAKguC,OAAQ,EAAG,KA/DtC,CAAA7rC,IAAA,aAAAzE,MAAA,SAiEDypB,GACPnnB,KAAKqe,QAAU8I,IAlEP,CAAAhlB,IAAA,UAAAzE,MAAA,eAAAyE,IAAA,OAAAzE,MAAA,WAuERsC,KAAK6tC,gBAAgB,GAAK7tC,KAAKqM,EAC/BrM,KAAK6tC,gBAAgB,GAAK7tC,KAAKsM,EAC/BtM,KAAK6tC,gBAAgB,GAAK7tC,KAAKmY,MAC/BnY,KAAK6tC,gBAAgB,GAAK7tC,KAAKiH,MAC/B1G,EAAOsF,cAAc4C,cAAczI,KAAK8jB,IAAK9jB,KAAK0uC,SAAU1uC,KAAKuU,iBAAkBvU,KAAKqe,QAASre,KAAKmuC,QAASnuC,KAAKouC,QAASpuC,KAAK6tC,gBAAiB7tC,KAAK8tC,iBA3EhJ53B,EAAA,GA8EhB5V,EAAQ4V,aAAeA,EA9E3B,CA+EG5V,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IAEVmgB,EAFU,SAAAkuB,GAGZ,SAAAluB,IAAc,IAAAmuB,EAAA,OAAAzxC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAygB,IACVmuB,EAAAzxC,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAAsjB,GAAAnjB,KAAA0C,QACK0Y,QAAU,GAFLk2B,EAHF,OAAAzxC,OAAAiT,EAAA,EAAAjT,CAAAsjB,EAAAkuB,GAAAluB,EAAA,CAEQngB,EAAQiT,eAMhCjT,EAAQmgB,UAAYA,EARxB,CASGngB,IAAYA,EAAU,KAGzB,SAAWA,GAAS,IAEVuuC,EAFU,WAGZ,SAAAA,EAAYtnC,GAASpK,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA6uC,GACjB7uC,KAAKkH,MAAQK,EAAOL,MACpBlH,KAAKmH,OAASI,EAAOJ,OACrBnH,KAAK+jB,QAAUxc,EAAOk6B,WAAW,MACjCzhC,KAAK+jB,QAAQI,UAAY,yBAPjB,OAAAhnB,OAAA+E,EAAA,EAAA/E,CAAA0xC,EAAA,EAAA1sC,IAAA,YAAAzE,MAAA,SASFkgB,EAAOW,MATL,CAAApc,IAAA,UAAAzE,MAAA,WAaRsC,KAAK+jB,QAAQM,cAbL,CAAAliB,IAAA,gBAAAzE,MAAA,SAeE2rB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,MAftB,CAAAvnB,IAAA,gBAAAzE,MAAA,SAiBE2rB,MAjBF,CAAAlnB,IAAA,WAAAzE,MAAA,SAmBH2O,EAAGC,EAAGpF,EAAOC,MAnBV,CAAAhF,IAAA,QAAAzE,MAAA,WAsBRsC,KAAK+jB,QAAQxV,SAAS,EAAG,EAAGvO,KAAKkH,MAAOlH,KAAKmH,YAtBrC0nC,EAAA,GAyBhBvuC,EAAQuuC,SAAWA,EAzBH,IA0BVtuB,EA1BU,SAAAuuB,GA2BZ,SAAAvuB,IAAc,IAAAwuB,EAAA,OAAA5xC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAugB,IACVwuB,EAAA5xC,OAAAiS,EAAA,EAAAjS,CAAA6C,KAAA7C,OAAAI,EAAA,EAAAJ,CAAAojB,GAAAjjB,KAAA0C,QACK2iB,SAAW,IAAIksB,EAASE,EAAKxnC,QAFxBwnC,EA3BF,OAAA5xC,OAAAiT,EAAA,EAAAjT,CAAAojB,EAAAuuB,GAAAvuB,EAAA,CA0BIjgB,EAAQiT,eAM5BjT,EAAQigB,MAAQA,EAhCpB,CAiCGjgB,IAAYA,EAAU,MAQtBA,IAAYA,EAAU,KADb0uC,UAHJ,SAAAA,IAAe7xC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgvC,IAMvB,SAAW1uC,GAAS,IACVoV,EACF,SAAAA,IAAevY,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA0V,IAGnBA,EAAkBu5B,OAAS,SAC3Bv5B,EAAkBC,KAAO,OACzBD,EAAkB8lB,KAAO,OACzB9lB,EAAkBw5B,MAAQ,QAC1B5uC,EAAQoV,kBAAoBA,EAThC,CAUGpV,IAAYA,EAAU,KAEzB,SAAWC,GAAQ,IACToU,EADS,oBAAAA,IAAAxX,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA2U,GAAA,OAAAxX,OAAA+E,EAAA,EAAA/E,CAAAwX,EAAA,OAAAxS,IAAA,eAAAzE,MAAA,SAESkZ,EAAOu4B,GACvB,MAAO,iCAAmCA,EAAQ,QAAU,OAAS,KAAOv4B,EAAQ,GAAK,IAAMw4B,OAAOx4B,GAASw4B,OAAOx4B,MAH/G,CAAAzU,IAAA,YAAAzE,MAAA,SAKM2xC,GA+Bb,OAAO,MApCA16B,EAAA,GAuCfA,EAAa26B,eAAiB,EAC9B36B,EAAaC,cAAgB,EAC7BD,EAAa8M,eAAiB,EAC9B9M,EAAaI,eAAiB,EAC9BJ,EAAa46B,eAAiB,EAC9B56B,EAAa66B,kBAAoB,EACjC76B,EAAa86B,iBAAmB,EAChC96B,EAAa+6B,kBAAoB,EACjC/6B,EAAag7B,kBAAoB,EACjCh7B,EAAai7B,kBAAoB,EACjCrvC,EAAOoU,aAAeA,EAjD1B,CAkDGpU,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT0I,EADS,SAAAA,IAAA9L,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAiJ,IAGfA,EAAQ+E,cAAgB,KACxB/E,EAAQC,aAAe,EACvBD,EAAQG,iBAAmB,EAC3BH,EAAQ8D,kBAAmB,EAC3B9D,EAAQ+D,sBAAwB,GAChC/D,EAAQwf,qBAAuB,EAC/Bxf,EAAQqiB,WAAa,kBACrBriB,EAAQsiB,iBAAmB,uBAC3BtiB,EAAQuiB,gBAAkB,sBAC1BviB,EAAQoiB,mBAAqBpiB,EAAQsiB,iBACrCtiB,EAAQ4mC,sBAAwB,EAChCtvC,EAAO0I,QAAUA,EAdrB,CAeG1I,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTuvC,EADS,oBAAAA,IAAA3yC,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA8vC,GAAA,OAAA3yC,OAAA+E,EAAA,EAAA/E,CAAA2yC,EAAA,OAAA3tC,IAAA,YAAAzE,MAAA,SAEMqyC,EAAO7oC,EAAOC,EAAQ6iC,EAAagG,GAKhD,OAAO,SAPAF,EAAA,GAWfA,EAAYG,cAAgB,kBAC5BH,EAAYI,SAAW,kBACvBJ,EAAYK,cAAgB,gBAC5BL,EAAYM,YAAc,KAC1B7vC,EAAOuvC,YAAcA,EAfzB,CAgBGvvC,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTkU,EADS,oBAAAA,IAAAtX,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAyU,GAAA,OAAAtX,OAAA+E,EAAA,EAAA/E,CAAAsX,EAAA,OAAAtS,IAAA,aAAAzE,MAAA,WAIP,IAAK,IAAIyS,EAAInQ,KAAKqwC,SAASjtC,OAAS,EAAG+M,GAAK,EAAGA,IAC3CnQ,KAAKqwC,SAASlgC,GAAGmgC,KAAKngC,KALnB,CAAAhO,IAAA,mBAAAzE,MAAA,WASP,IAAK,IAAIyS,EAAInQ,KAAKqwC,SAASjtC,OAAS,EAAG+M,GAAK,EAAGA,IAC3C,OAAQ5P,EAAOoU,aAAa47B,UAAUvwC,KAAKqwC,SAASlgC,KAChD,KAAK5P,EAAOoU,aAAa26B,eACzB,KAAK/uC,EAAOoU,aAAaC,cACzB,KAAKrU,EAAOoU,aAAaI,eACzB,KAAKxU,EAAOoU,aAAa8M,eACrB,OAAOlhB,EAAOoU,aAAa47B,UAAUvwC,KAAKqwC,SAASlgC,IAG/D,OAAO,IAlBA,CAAAhO,IAAA,mBAAAzE,MAAA,WAqBP,IAAK,IAAIyS,EAAInQ,KAAKqwC,SAASjtC,OAAS,EAAG+M,GAAK,EAAGA,IAC3C,OAAQ5P,EAAOoU,aAAa47B,UAAUvwC,KAAKqwC,SAASlgC,KAChD,KAAK5P,EAAOoU,aAAa26B,eACzB,KAAK/uC,EAAOoU,aAAaC,cACzB,KAAKrU,EAAOoU,aAAaI,eACzB,KAAKxU,EAAOoU,aAAa8M,eACrB,OAAOzhB,KAAKqwC,SAASlgC,GAGjC,OAAO,OA9BA,CAAAhO,IAAA,gBAAAzE,MAAA,WAiCP,OAAOsC,KAAKqwC,SAASrwC,KAAKqwC,SAASjtC,OAAS,OAjCrCqR,EAAA,GAqCfA,EAAa47B,SAAW,IAAI5gC,MAC5BlP,EAAOkU,aAAeA,EAtC1B,CAuCGlU,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTutB,EADS,oBAAAA,IAAA3wB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA8tB,GAAA,OAAA3wB,OAAA+E,EAAA,EAAA/E,CAAA2wB,EAAA,OAAA3rB,IAAA,qBAAAzE,MAAA,SAEe8yC,EAAKp3B,EAAKM,EAAU+2B,EAAMC,EAAWC,GAC3D,IAKIC,EACAz3B,EACA9M,EACAC,EARAvF,EAAI,IAAIxG,EAAOyG,OAGnB,GAAW,MAAPoS,EAkBJ,GAZIq3B,GAEAG,GADAz3B,EAAIq3B,EAAItpC,MAAQ3G,EAAO0F,cAAc4qC,UAC7BtwC,EAAO0F,cAAcC,aAAe3F,EAAO0F,cAAcE,YACjEkG,EAAImkC,EAAItpC,MAAQ3G,EAAO0F,cAAc6qC,UAAUzkC,EAAQ,GAAJ8M,EACnD7M,EAAIkkC,EAAItpC,MAAQ3G,EAAO0F,cAAc6qC,UAAUxkC,EAAQ,GAAJskC,IAInDA,GADAz3B,EAAIq3B,EAAItpC,MAAQ3G,EAAO0F,cAAc+E,SAC7BzK,EAAO0F,cAAcC,aAAe3F,EAAO0F,cAAcE,YACjEkG,EAAImkC,EAAItpC,MAAQ3G,EAAO0F,cAAcwmB,SAASpgB,EAAQ,GAAJ8M,EAClD7M,EAAIkkC,EAAItpC,MAAQ3G,EAAO0F,cAAcwmB,SAASngB,EAAQ,GAAJskC,GAElDl3B,GAAwD,GAAnC,MAAPN,EAAc,EAAI,GAA6B,EAAI,CACjE,IAAI9Q,EAAM,IAAIhI,EAAQwG,WAAWqS,EAAGy3B,GAAG,EAAO,UACnC,MAAPx3B,IACArS,EAAEyC,WACFzC,EAAEE,MAAMkS,EAAIC,EAAIlS,MAAO0pC,EAAIx3B,EAAIjS,QAC/BmB,EAAIlB,KAAKgS,EAAKrS,EAAG,KAAM,KAAM,MAAM,IAOvCA,EAAEyC,WACFzC,EAAE+H,UAAUzC,EAAGC,GACfkkC,EAAIppC,KAAKkB,EAAKvB,EAAG,KAAMxG,EAAOwJ,UAAUI,SAAU,MAAM,GACxD7B,EAAIpF,eAGO,MAAPkW,IACArS,EAAEyC,WACFzC,EAAEE,MAAMkS,EAAIC,EAAIlS,MAAO0pC,EAAIx3B,EAAIjS,QAC/BJ,EAAE+H,UAAUzC,EAAGC,GACfkkC,EAAIppC,KAAKgS,EAAKrS,EAAG,KAAM2S,EAAWnZ,EAAOwJ,UAAUI,SAAW,KAAM,MAAM,QA9C3E2jB,EAAA,GAiEfvtB,EAAOutB,eAAiBA,EAjE5B,CAkEGvtB,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT0F,EADS,oBAAAA,IAAA9I,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAiG,GAAA,OAAA9I,OAAA+E,EAAA,EAAA/E,CAAA8I,EAAA,OAAA9D,IAAA,cAAAzE,MAAA,SAEQqzC,EAAMC,EAAQC,GAC7B,IAAItiC,EAAI,IAAIC,EACZ,GAAImiC,EAAM,CACN,IAAI53B,EAAI63B,EAAS/qC,EAAcirC,YAC/BviC,EAAExH,OAASwH,EAAEzH,MAAQiS,EAAIlT,EAAc+E,QACvC2D,EAAEtC,EAAa,GAAT2kC,EAAcriC,EAAEzH,MAAQjB,EAAcwmB,SAASpgB,EACrDsC,EAAErC,EAAqB,IAAhB2kC,EAAU,IAAWtiC,EAAExH,OAASlB,EAAcwmB,SAASngB,OAG9DqC,EAAExH,OAASwH,EAAEzH,MAAQ8pC,EAAS/qC,EAAckrC,WAC5CxiC,EAAEtC,EAAyB,IAApB2kC,EAASriC,EAAEzH,OAElByH,EAAErC,EAA0B,IAArB2kC,EAAUtiC,EAAEzH,OAEvB,OAAOyH,IAhBA,CAAAxM,IAAA,oBAAAzE,MAAA,SAkBc2hB,EAAG2xB,EAAQC,GAChC,IAAItiC,EAAI3O,KAAKoxC,aAAY,EAAOJ,EAAQC,GACpC/9B,EAAKlT,KAAKoxC,aAAY,EAAMJ,EAAQC,GAKxC,OAJAtiC,EAAEtC,EAAIsC,EAAEtC,GAAK6G,EAAG7G,EAAIsC,EAAEtC,GAAKgT,EAC3B1Q,EAAErC,EAAIqC,EAAErC,GAAK4G,EAAG5G,EAAIqC,EAAErC,GAAK+S,EAC3B1Q,EAAEzH,MAAQyH,EAAEzH,OAASgM,EAAGhM,MAAQyH,EAAEzH,OAASmY,EAC3C1Q,EAAExH,OAASwH,EAAExH,QAAU+L,EAAG/L,OAASwH,EAAExH,QAAUkY,EACxC1Q,MAzBA1I,EAAA,GA4BfA,EAAcE,YAAc,KAC5BF,EAAcC,aAAe,KAG7BD,EAAcmE,YAAa,EAC3BnE,EAAc+E,QAAU,EACxB/E,EAAcwmB,SAAW,CAAEpgB,EAAG,GAAKC,EAAG,IACtCrG,EAAc4qC,SAAW,KACzB5qC,EAAc6qC,UAAY,CAAEzkC,EAAG,EAAGC,EAAG,GAErCrG,EAAckrC,WAAa,EAC3BlrC,EAAcirC,YAAc,IAC5B3wC,EAAO0F,cAAgBA,EAxC3B,CAyCG1F,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT8S,EADS,WAEX,SAAAA,EAAYg+B,GAAel0C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAqT,GACvBrT,KAAKgY,eAAiB,EACtBhY,KAAKyY,UAAY,EACjBzY,KAAKuY,UAAY,SALV,OAAApb,OAAA+E,EAAA,EAAA/E,CAAAkW,EAAA,OAAAlR,IAAA,YAAAzE,MAAA,WAQP,OAAOsC,KAAKsxC,eAAe/wC,EAAO0I,QAAQsoC,WARnC,CAAApvC,IAAA,oBAAAzE,MAAA,WAYP,OAAY,MADJsC,KAAK2X,aACctE,EAAem+B,iBAZnCn+B,EAAA,GAefA,EAAei+B,eAAiB,CAAC,KAAM,KAAM,MAC7Cj+B,EAAem+B,cAAe,EAC9BjxC,EAAO8S,eAAiBA,EAjB5B,CAkBG9S,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTmd,EADS,oBAAAA,IAAAvgB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA0d,GAAA,OAAAvgB,OAAA+E,EAAA,EAAA/E,CAAAugB,EAAA,OAAAvb,IAAA,SAAAzE,MAAA,SAEG2O,EAAGuB,EAAKC,GAIlB,OAHAxB,EAAIP,KAAKmR,MAAM5Q,GACfuB,EAAM9B,KAAKmR,MAAMrP,GACjBC,EAAM/B,KAAKmR,MAAMpP,GACVxB,EAAIuB,EAAMA,EAAOvB,EAAIwB,EAAMA,EAAMxB,IANjC,CAAAlK,IAAA,SAAAzE,MAAA,SAQG2O,EAAGuB,EAAKC,GAClB,OAAOxB,EAAIuB,EAAMA,EAAOvB,EAAIwB,EAAMA,EAAMxB,IATjC,CAAAlK,IAAA,WAAAzE,MAAA,SAWK+zC,EAAMhO,GAClB,IAAIjf,EAAIC,EAEJpY,EAAGC,EAAGiS,EAAGpO,EACbqU,EAAKitB,EAAKvqC,MACVud,EAAKgtB,EAAKtqC,OAEV,IAAIuqC,EAAW,EADTjO,EAEFkO,GAAMD,EAAK,GAAK,EAChBE,EAAM,IAAIniC,MACdmiC,EAAIxuC,OAASsuC,EACb,IAAIG,EAAK,EACT,IAAKxlC,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKP,KAAK2G,IAAI3G,KAAK0B,IAAMnB,EAAI,IAAMqlC,EAAK,IAC5CG,GAAMD,EAAIvlC,GAEd,IAAKA,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKulC,EAAIvlC,GAAKwlC,EACtB,IAAIC,EAAU,IAAIriC,MAClBqiC,EAAQ1uC,OAASohB,EAAKC,EAAK,EAC3B,IAAI+rB,EAAM,IAAIlwC,EAAQ0lB,UACtBwqB,EAAIptC,OAASohB,EAAKC,EAAK,EACvB,IACI9V,EAAGmQ,EAAG/Q,EADNqL,EAAMq4B,EAAKj0B,UAAUi0B,EAAKrjC,MAE9B,IAAK9B,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAIrB,IAHAsC,EAAI,EACJmQ,EAAI,EACJ/Q,EAAI,EACCoC,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAEhBxB,GAAKyK,EAAmB,GAAd9M,EAAIkY,GADdjG,EAAIve,KAAK4e,OAAOvS,EAAI8D,EAAIwhC,EAAI,EAAGntB,EAAK,KACR,GAAKotB,EAAIzhC,GACrC2O,GAAK1F,EAAmB,GAAd9M,EAAIkY,EAAKjG,GAAS,GAAKqzB,EAAIzhC,GACrCpC,GAAKqL,EAAmB,GAAd9M,EAAIkY,EAAKjG,GAAS,GAAKqzB,EAAIzhC,GAEzC2hC,EAAuB,GAAdzlC,EAAIoY,EAAKnY,IAAUqC,EAC5BmjC,EAAuB,GAAdzlC,EAAIoY,EAAKnY,GAAS,GAAKwS,EAChCgzB,EAAuB,GAAdzlC,EAAIoY,EAAKnY,GAAS,GAAKyB,EAGxC,IAAKzB,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAIrB,IAHAsC,EAAI,EACJmQ,EAAI,EACJ/Q,EAAI,EACCoC,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAEhBxB,GAAKmjC,EAAuB,GAAdzlC,EAAIoY,GADlBlG,EAAIve,KAAK4e,OAAOtS,EAAI6D,EAAIwhC,EAAI,EAAGltB,EAAK,MACHmtB,EAAIzhC,GACrC2O,GAAKgzB,EAAuB,GAAdzlC,EAAIoY,EAAKlG,GAAS,GAAKqzB,EAAIzhC,GACzCpC,GAAK+jC,EAAuB,GAAdzlC,EAAIoY,EAAKlG,GAAS,GAAKqzB,EAAIzhC,GAE7CqgC,EAAmB,GAAdlkC,EAAIkY,EAAKnY,IAAU,IACxBmkC,EAAmB,GAAdlkC,EAAIkY,EAAKnY,GAAS,GAAKsC,EAC5B6hC,EAAmB,GAAdlkC,EAAIkY,EAAKnY,GAAS,GAAKyS,EAC5B0xB,EAAmB,GAAdlkC,EAAIkY,EAAKnY,GAAS,GAAK0B,EAGpC0jC,EAAKM,UAAUN,EAAKrjC,KAAMoiC,GAC1BsB,EAAQ1uC,OAAS,EACjB0uC,EAAU,KACVtB,EAAIptC,OAAS,EACbotC,EAAM,KACNp3B,EAAIhW,OAAS,EACbgW,EAAM,KACNw4B,EAAIxuC,OAAS,EACbwuC,EAAM,OA5EC,CAAAzvC,IAAA,aAAAzE,MAAA,SA8EOyS,GACd,IAAIkJ,EAAM,IAAI9Y,EAAOwY,KACrB,OAAQ5I,GACJ,KAAK,EACDkJ,EAAIhN,GAAK,EACTgN,EAAI/M,GAAK,EACT,MACJ,KAAK,EACD+M,EAAIhN,EAAI,EACRgN,EAAI/M,GAAK,EACT,MACJ,KAAK,EACD+M,EAAIhN,EAAI,EACRgN,EAAI/M,GAAK,EACT,MACJ,KAAK,EACD+M,EAAIhN,GAAK,EACTgN,EAAI/M,EAAI,EACR,MACJ,KAAK,EACD+M,EAAIhN,EAAI,EACRgN,EAAI/M,EAAI,EACR,MACJ,KAAK,EACD+M,EAAIhN,GAAK,EACTgN,EAAI/M,EAAI,EACR,MACJ,KAAK,EACD+M,EAAIhN,EAAI,EACRgN,EAAI/M,EAAI,EACR,MACJ,KAAK,EACD+M,EAAIhN,EAAI,EACRgN,EAAI/M,EAAI,EAGhB,OAAO+M,IAlHA,CAAAlX,IAAA,kBAAAzE,MAAA,SAoHY+zC,GAEnB,IAAIjtB,EAAIC,EAEJpY,EAAGC,EAAGiS,EAAGpO,EAHbnQ,KAAKgyC,SAASP,EAAM,GASpBjtB,EAAKitB,EAAKvqC,MACVud,EAAKgtB,EAAKtqC,OACV,IAOI8qC,EAPA74B,EAAMq4B,EAAKj0B,UAAUi0B,EAAKrjC,MAK1BoiC,EAAM,IAAIlwC,EAAQ0lB,UACtBwqB,EAAIptC,OAASohB,EAAKC,EAAK,EAEvB,IAAIytB,EAAM,IAAIziC,MAMd,IALAyiC,EAAI9uC,OAAS,EAKRkJ,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAUrB,IARK+M,GADLmF,EAAmB,GAAdjS,EAAIkY,EAAKnY,IACD,GACR+M,EAAImF,EAAI,GACRnF,EAAImF,EAAI,GACN,EACA,EAED,EACA,IACDpO,EAAI,EAAGA,EAAI,EAAGA,IACf8hC,EAAKjyC,KAAKmyC,WAAWhiC,GACrBoO,EAAiF,GAA5Eve,KAAK4e,OAAOtS,EAAI2lC,EAAG3lC,EAAG,EAAGmY,EAAK,GAAKD,EAAKxkB,KAAK4e,OAAOvS,EAAI4lC,EAAG5lC,EAAG,EAAGmY,EAAK,IAC3E0tB,EAAI/hC,GAAM,QAAWiJ,EAAImF,GAAK,QAAWnF,EAAImF,EAAI,GAAK,QAAWnF,EAAImF,EAAI,GAE7E0zB,EAAG3lC,GAAK4lC,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,GAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EACvED,EAAG5lC,GAAK6lC,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,GAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EACvED,EAAGG,SAAS,IACZH,EAAGj4B,YACHi4B,EAAGv4B,SAAS,IACZ82B,EAAmB,GAAdlkC,EAAIkY,EAAKnY,IAAU,EACxBmkC,EAAmB,GAAdlkC,EAAIkY,EAAKnY,GAAS,GAAKrM,KAAK4e,OAAOqzB,EAAG5lC,EAAI,IAAK,EAAG,KACvDmkC,EAAmB,GAAdlkC,EAAIkY,EAAKnY,GAAS,GAAKrM,KAAK4e,OAAOqzB,EAAG3lC,EAAI,IAAK,EAAG,KACvDkkC,EAAmB,GAAdlkC,EAAIkY,EAAKnY,GAAS,GAAK,EAGpColC,EAAKM,UAAUN,EAAKrjC,KAAMoiC,GAC1BxwC,KAAKgyC,SAASP,EAAM,KA1Kb,CAAAtvC,IAAA,gBAAAzE,MAAA,SA4KU+zC,EAAMvqC,EAAOC,EAAQs8B,GACtC,IAAIjf,EAAIC,EAEJpY,EAAGC,EAAGiS,EAAGpO,EACbqU,EAAKtd,EACLud,EAAKtd,EAEL,IAAIuqC,EAAW,EADTjO,EAEFkO,GAAMD,EAAK,GAAK,EAChBE,EAAM,IAAIniC,MACdmiC,EAAIxuC,OAASsuC,EACb,IAAIG,EAAK,EACT,IAAKxlC,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKP,KAAK2G,IAAI3G,KAAK0B,IAAMnB,EAAI,IAAMqlC,EAAK,IAC5CG,GAAMD,EAAIvlC,GAEd,IAAKA,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKulC,EAAIvlC,GAAKwlC,EACtB,IAEIljC,EAAGmQ,EAAG/Q,EAFN+jC,EAAU,IAAIriC,MAGlB,IAFAqiC,EAAQ1uC,OAASohB,EAAKC,EAAK,EAEtBnY,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAIrB,IAHAsC,EAAI,EACJmQ,EAAI,EACJ/Q,EAAI,EACCoC,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAEhBxB,GAAK8iC,EAAoB,GAAdnlC,EAAIkY,GADfjG,EAAIve,KAAK4e,OAAOvS,EAAI8D,EAAIwhC,EAAI,EAAGntB,EAAK,KACP,GAAKotB,EAAIzhC,GACtC2O,GAAK2yB,EAAoB,GAAdnlC,EAAIkY,EAAKjG,GAAS,GAAKqzB,EAAIzhC,GACtCpC,GAAK0jC,EAAoB,GAAdnlC,EAAIkY,EAAKjG,GAAS,GAAKqzB,EAAIzhC,GAE1C2hC,EAAuB,GAAdzlC,EAAIoY,EAAKnY,IAAUqC,EAC5BmjC,EAAuB,GAAdzlC,EAAIoY,EAAKnY,GAAS,GAAKwS,EAChCgzB,EAAuB,GAAdzlC,EAAIoY,EAAKnY,GAAS,GAAKyB,EAGxC,IAAKzB,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAIrB,IAHAsC,EAAI,EACJmQ,EAAI,EACJ/Q,EAAI,EACCoC,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAEhBxB,GAAKmjC,EAAuB,GAAdzlC,EAAIoY,GADlBlG,EAAIve,KAAK4e,OAAOtS,EAAI6D,EAAIwhC,EAAI,EAAGltB,EAAK,MACHmtB,EAAIzhC,GACrC2O,GAAKgzB,EAAuB,GAAdzlC,EAAIoY,EAAKlG,GAAS,GAAKqzB,EAAIzhC,GACzCpC,GAAK+jC,EAAuB,GAAdzlC,EAAIoY,EAAKlG,GAAS,GAAKqzB,EAAIzhC,GAE7CshC,EAAoB,GAAdnlC,EAAIkY,EAAKnY,IAAUsC,EACzB8iC,EAAoB,GAAdnlC,EAAIkY,EAAKnY,GAAS,GAAKyS,EAC7B2yB,EAAoB,GAAdnlC,EAAIkY,EAAKnY,GAAS,GAAK0B,EAGrC+jC,EAAQ1uC,OAAS,EACjB0uC,EAAU,KACVF,EAAIxuC,OAAS,EACbwuC,EAAM,OApOC,CAAAzvC,IAAA,gBAAAzE,MAAA,SAsOU+zC,EAAMvqC,EAAOC,EAAQs8B,GACtC,IAAIjf,EAAIC,EAEJpY,EAAGC,EAAGiS,EAAGpO,EACbqU,EAAKtd,EACLud,EAAKtd,EAEL,IAAIuqC,EAAW,EADTjO,EAEFkO,GAAMD,EAAK,GAAK,EAChBE,EAAM,IAAIniC,MACdmiC,EAAIxuC,OAASsuC,EACb,IAAIG,EAAK,EACT,IAAKxlC,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKP,KAAK2G,IAAI3G,KAAK0B,IAAMnB,EAAI,IAAMqlC,EAAK,IAC5CG,GAAMD,EAAIvlC,GAEd,IAAKA,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKulC,EAAIvlC,GAAKwlC,EACtB,IAEIljC,EAAGmQ,EAFHgzB,EAAU,IAAIriC,MAGlB,IAFAqiC,EAAQ1uC,OAASohB,EAAKC,EAAK,EAEtBnY,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAGrB,IAFAsC,EAAI,EACJmQ,EAAI,EACC3O,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAEhBxB,GAAK8iC,EAAoB,GAAdnlC,EAAIkY,GADfjG,EAAIve,KAAK4e,OAAOvS,EAAI8D,EAAIwhC,EAAI,EAAGntB,EAAK,MACNotB,EAAIzhC,GAClC2O,GAAK2yB,EAAoB,GAAdnlC,EAAIkY,EAAKjG,GAAS,GAAKqzB,EAAIzhC,GAE1C2hC,EAAuB,GAAdzlC,EAAIoY,EAAKnY,IAAUqC,EAC5BmjC,EAAuB,GAAdzlC,EAAIoY,EAAKnY,GAAS,GAAKwS,EAGxC,IAAKxS,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAGrB,IAFAsC,EAAI,EACJmQ,EAAI,EACC3O,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAEhBxB,GAAKmjC,EAAuB,GAAdzlC,EAAIoY,GADlBlG,EAAIve,KAAK4e,OAAOtS,EAAI6D,EAAIwhC,EAAI,EAAGltB,EAAK,MACHmtB,EAAIzhC,GACrC2O,GAAKgzB,EAAuB,GAAdzlC,EAAIoY,EAAKlG,GAAS,GAAKqzB,EAAIzhC,GAE7CshC,EAAoB,GAAdnlC,EAAIkY,EAAKnY,IAAUsC,EACzB8iC,EAAoB,GAAdnlC,EAAIkY,EAAKnY,GAAS,GAAKyS,EAGrCgzB,EAAQ1uC,OAAS,EACjB0uC,EAAU,KACVF,EAAIxuC,OAAS,EACbwuC,EAAM,OAxRC,CAAAzvC,IAAA,gBAAAzE,MAAA,SA0RU+zC,EAAMvqC,EAAOC,EAAQs8B,GACtC,IAAIjf,EAAIC,EAEJpY,EAAGC,EAAGiS,EAAGpO,EACbqU,EAAKtd,EACLud,EAAKtd,EAEL,IAAIuqC,EAAW,EADTjO,EAEFkO,GAAMD,EAAK,GAAK,EAChBE,EAAM,IAAIniC,MACdmiC,EAAIxuC,OAASsuC,EACb,IAAIG,EAAK,EACT,IAAKxlC,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKP,KAAK2G,IAAI3G,KAAK0B,IAAMnB,EAAI,IAAMqlC,EAAK,IAC5CG,GAAMD,EAAIvlC,GAEd,IAAKA,EAAI,EAAGA,EAAIqlC,EAAIrlC,IAChBulC,EAAIvlC,GAAKulC,EAAIvlC,GAAKwlC,EACtB,IAEIljC,EAFAmjC,EAAU,IAAIriC,MAGlB,IAFAqiC,EAAQ1uC,OAASohB,EAAKC,EAAK,EAEtBnY,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAErB,IADAsC,EAAI,EACCwB,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAChBoO,EAAIve,KAAK4e,OAAOvS,EAAI8D,EAAIwhC,EAAI,EAAGntB,EAAK,GACpC7V,GAAK8iC,EAAK3lC,KAAKmR,MAAM3Q,EAAIkY,EAAKjG,IAAMqzB,EAAIzhC,GAE5C2hC,EAAQhmC,KAAKmR,MAAM5Q,EAAIoY,EAAKnY,IAAMqC,EAG1C,IAAKrC,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CAErB,IADAsC,EAAI,EACCwB,EAAI,EAAGA,EAAIuhC,EAAIvhC,IAChBoO,EAAIve,KAAK4e,OAAOtS,EAAI6D,EAAIwhC,EAAI,EAAGltB,EAAK,GACpC9V,GAAKmjC,EAAQhmC,KAAKmR,MAAM5Q,EAAIoY,EAAKlG,IAAMqzB,EAAIzhC,GAE/CshC,EAAK3lC,KAAKmR,MAAM3Q,EAAIkY,EAAKnY,IAAMsC,EAGvCmjC,EAAQ1uC,OAAS,EACjB0uC,EAAU,KACVF,EAAIxuC,OAAS,EACbwuC,EAAM,OAtUC,CAAAzvC,IAAA,2BAAAzE,MAAA,SAwUqB+zC,GAC5B,IAAIjtB,EAAIC,EACJpY,EAAGC,EAAGiS,EAAGpO,EACbqU,EAAK1Y,KAAKmR,MAAMw0B,EAAKvqC,OACrBud,EAAK3Y,KAAKmR,MAAMw0B,EAAKtqC,QACrB,IAAIkrC,EAAQZ,EAAKj0B,UAAUi0B,EAAKrjC,MAC5BgL,EAAM,IAAI9Y,EAAQ0lB,UAGtB,IAFA5M,EAAIhW,OAASohB,EAAKC,EAEbnY,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAChBkS,EAAmB,GAAdjS,EAAIkY,EAAKnY,GACd+M,EAAI9M,EAAIkY,EAAKnY,GAAM,QAAWgmC,EAAM9zB,EAAI,GAAK,QAAW8zB,EAAM9zB,EAAI,GAAK,QAAW8zB,EAAM9zB,EAAI,GAGpGve,KAAKsyC,cAAcl5B,EAAKoL,EAAIC,EAAI,GAChC,IAAI+rB,EAAM,IAAIlwC,EAAQ0lB,UACtBwqB,EAAIptC,OAASohB,EAAKC,EAAK,EACvB,IAAIwtB,EAAK,IAAI1xC,EAAOwY,KAChBm5B,EAAM,IAAIziC,MAEd,IADAyiC,EAAI9uC,OAAS,EACRkJ,EAAI,EAAGA,EAAImY,EAAInY,IAChB,IAAKD,EAAI,EAAGA,EAAImY,EAAInY,IAAK,CACrB,IAAK8D,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,OAAQA,GACJ,KAAK,EACD8hC,EAAG5lC,GAAK,EACR4lC,EAAG3lC,GAAK,EACR,MACJ,KAAK,EACD2lC,EAAG5lC,EAAI,EACP4lC,EAAG3lC,GAAK,EACR,MACJ,KAAK,EACD2lC,EAAG5lC,EAAI,EACP4lC,EAAG3lC,GAAK,EACR,MACJ,KAAK,EACD2lC,EAAG5lC,GAAK,EACR4lC,EAAG3lC,EAAI,EACP,MACJ,KAAK,EACD2lC,EAAG5lC,EAAI,EACP4lC,EAAG3lC,EAAI,EACP,MACJ,KAAK,EACD2lC,EAAG5lC,GAAK,EACR4lC,EAAG3lC,EAAI,EACP,MACJ,KAAK,EACD2lC,EAAG5lC,EAAI,EACP4lC,EAAG3lC,EAAI,EACP,MACJ,KAAK,EACD2lC,EAAG5lC,EAAI,EACP4lC,EAAG3lC,EAAI,EAGfiS,EAAKve,KAAK4e,OAAOtS,EAAI2lC,EAAG3lC,EAAG,EAAGmY,EAAK,GAAKD,EAAKxkB,KAAK4e,OAAOvS,EAAI4lC,EAAG5lC,EAAG,EAAGmY,EAAK,GAC3E0tB,EAAI/hC,GAAKiJ,EAAImF,GAEjB0zB,EAAG3lC,GAAK4lC,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,GAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EACvED,EAAG5lC,GAAK6lC,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,GAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EACnED,EAAG7uC,SAAW,EACd6uC,EAAGG,SAAS,KAGZH,EAAG5lC,EAAIP,KAAKG,SAAW,GACvBgmC,EAAG3lC,EAAIR,KAAKG,SAAW,IAE3BgmC,EAAGj4B,YACHi4B,EAAGv4B,SAAS,IACZ82B,EAAI1kC,KAAKmR,MAAqB,GAAd3Q,EAAIkY,EAAKnY,KAAWrM,KAAK4e,OAAOqzB,EAAG5lC,EAAI,IAAK,EAAG,KAC/DmkC,EAAI1kC,KAAKmR,MAAqB,GAAd3Q,EAAIkY,EAAKnY,GAAS,IAAMrM,KAAK4e,OAAOqzB,EAAG3lC,EAAI,IAAK,EAAG,KAI3E,OADAtM,KAAKuyC,cAAc/B,EAAKhsB,EAAIC,EAAI,GACzB+rB,MArZA9yB,EAAA,GAwZfnd,EAAOmd,iBAAmBA,EAxZ9B,CAyZGnd,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT8f,EADS,WAEX,SAAAA,IAAeljB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAqgB,GACXrgB,KAAKwyC,cAAgB,CAAC,EAAG,EAAG,EAAG,GAC/BxyC,KAAK8hB,YAAa,EAClB9hB,KAAKuiB,IAAM,EALJ,OAAAplB,OAAA+E,EAAA,EAAA/E,CAAAkjB,EAAA,EAAAle,IAAA,SAAAzE,MAAA,SASJ+0C,GACHzyC,KAAK0E,OAAS+tC,IAVP,CAAAtwC,IAAA,qBAAAzE,MAAA,WAY8B,IAAtBg1C,EAAsBrzC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAf,EAAGszC,EAAYtzC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAClCW,KAAK4yC,UAAYD,EACjB3yC,KAAK6yC,QAAUH,IAdR,CAAAvwC,IAAA,YAAAzE,MAAA,WAiBPsC,KAAKijB,IAAMjjB,KAAK6yC,QAChB7yC,KAAKiH,MAAQjH,KAAK4yC,YAlBX,CAAAzwC,IAAA,gBAAAzE,MAAA,SAoBGmJ,GACL7G,KAAK8hB,aAEN9hB,KAAKmnB,UACLnnB,KAAKmnB,SAASjkB,UAClBlD,KAAKmnB,SAAW5mB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQmC,EAAKvG,EAAQqG,uBAAuBC,MAAM,GAAO,MAzB1G,CAAAzE,IAAA,QAAAzE,MAAA,SA2BLmJ,EAAKisC,EAAIC,EAAI/B,EAAQC,GAA+B,IAAtByB,EAAsBrzC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAf,EAAGszC,EAAYtzC,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EACnDW,KAAKkD,UACL,IAAIkL,EAAOvH,EAAIoP,mBAAmB,WAAY,GAAG,GAEjD,IAAK7H,GAAQA,EAAKlH,MAAQ,GAAKkH,EAAKjH,OAAS,EACzC,OAAO,EAEX,IADAnH,KAAKoiB,QAAU,EACRpiB,KAAKoiB,QAAUhU,EAAKlH,OAASlH,KAAKoiB,QAAUhU,EAAKjH,QACpDnH,KAAKoiB,SAAW,EACpB,IAAI1R,EAAO,IAAIpQ,EAAQwG,WAAW9G,KAAKoiB,QAASpiB,KAAKoiB,SAAS,EAAM,GAChErb,EAAI,IAAIxG,EAAOyG,OAiBnB,OAhBAhH,KAAKqiB,GAAMjU,EAAK/B,EAAiB,GAAb+B,EAAKlH,MAA6B,GAAflH,KAAKoiB,QAC5CpiB,KAAKsiB,GAAMlU,EAAK9B,EAAkB,GAAd8B,EAAKjH,OAA8B,GAAfnH,KAAKoiB,QAC7Crb,EAAE+H,WAAW9O,KAAKqiB,IAAKriB,KAAKsiB,IAC5B5R,EAAKtJ,KAAKP,EAAKE,EAAG,KAAM,KAAM,MAAM,GACpC/G,KAAKgzC,UAAYhzC,KAAKoiB,QACtBpiB,KAAK+hB,MAAQ+wB,EAAiB,GAAZjsC,EAAIK,OAAckH,EAAK/B,EAAiB,GAAb+B,EAAKlH,OAClDlH,KAAKiiB,MAAQ8wB,EAAkB,GAAblsC,EAAIM,QAAeiH,EAAK9B,EAAkB,GAAd8B,EAAKjH,QACnDnH,KAAK4yC,UAAY5yC,KAAKiH,MAAQ0rC,EAC9B3yC,KAAK6yC,QAAU7yC,KAAKijB,IAAMyvB,EAC1B1yC,KAAKgiB,UAAYgvB,EACjBhxC,KAAKkiB,WAAa+uB,EAClBjxC,KAAKiH,MAAQ,EACbjH,KAAKijB,KAAOnX,KAAKG,SAAW,IAAOH,KAAK0B,GACxCxN,KAAKmnB,SAAW5mB,EAAOsF,cAAcwB,cAAcrH,KAAK0E,OAAQgM,EAAMpQ,EAAQqG,uBAAuBC,MAAM,GAAO,GAElH5G,KAAK8hB,WAA8B,MAAjB9hB,KAAKmnB,SAChBnnB,KAAK8hB,aAtDL,CAAA3f,IAAA,UAAAzE,MAAA,WAyDPsC,KAAKizC,UACLjzC,KAAK8hB,YAAa,IA1DX,CAAA3f,IAAA,UAAAzE,MAAA,WA6DHsC,KAAKmnB,UACLnnB,KAAKmnB,SAASjkB,YA9DX,CAAAf,IAAA,OAAAzE,MAAA,SAgENooC,GACI9lC,KAAK8hB,aAEV9hB,KAAKijB,KAAmC,IAA3BjjB,KAAK6yC,QAAU7yC,KAAKijB,KACjCjjB,KAAKiH,OAAyC,IAA/BjH,KAAK4yC,UAAY5yC,KAAKiH,OAGrCjH,KAAKwyC,cAAc,IAAM,KAAOxyC,KAAK+hB,MACrC/hB,KAAKwyC,cAAc,GAAK,KAAOxyC,KAAKiiB,MACpCjiB,KAAKwyC,cAAc,GAAKxyC,KAAKijB,IAC7BjjB,KAAKwyC,cAAc,GAAKxyC,KAAKgzC,UAAYhzC,KAAKiH,MAC9CjH,KAAK0E,OAAO+E,aAAa,EAAGzJ,KAAKmnB,UACjCnnB,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAGyW,EAAiB6yB,cACrGlzC,KAAK0E,OAAOgF,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKwyC,eACvFxyC,KAAK0E,OAAOiD,gBAAgBrH,EAAQsH,qBAAqBsC,aAAc5J,EAAQsH,qBAAqBE,wBACpG9H,KAAK0E,OAAO+D,cAAcq9B,QA/EnBzlB,EAAA,GAoFfA,EAAiB6yB,aAAe,CAAC,EAAG,EAAG,EAAG,GAC1C3yC,EAAO8f,iBAAmBA,EArF9B,CAsFG9f,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTgtB,EADS,WAEX,SAAAA,IAAepwB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAutB,GAEXvtB,KAAKmzC,QAAU,IAJR,OAAAh2C,OAAA+E,EAAA,EAAA/E,CAAAowB,EAAA,EAAAprB,IAAA,sBAAAzE,MAAA,SAMS8mB,EAAIC,EAAI2uB,EAAIC,EAAIC,GAChCtzC,KAAK+rB,KAAOvH,EACZxkB,KAAKgsB,KAAOvH,EACZzkB,KAAKuzC,KAAOH,EACZpzC,KAAKwzC,KAAOH,EACZrzC,KAAKgf,KAAOs0B,IAXL,CAAAnxC,IAAA,UAAAzE,MAAA,WA8BP,OAAOsC,KAAKgf,KAAO,IA9BZ,CAAA7c,IAAA,SAAAzE,MAAA,WAkCPsC,KAAKuzC,MAAQvzC,KAAKuzC,KAAOvzC,KAAKmzC,QAC9BnzC,KAAKwzC,MAAQxzC,KAAKwzC,KAAOxzC,KAAKmzC,QAC9BnzC,KAAK+rB,MAAQ/rB,KAAKuzC,KAClBvzC,KAAKgsB,MAAQhsB,KAAKwzC,KAClBxzC,KAAKgf,MAAQ,IAtCN,CAAA7c,IAAA,cAAAzE,MAAA,SAwCC2O,EAAGC,GACXtM,KAAKuzC,MAAQlnC,EAAIrM,KAAKuzC,KAAOvzC,KAAKmzC,QAClCnzC,KAAKwzC,MAAQlnC,EAAItM,KAAKwzC,KAAOxzC,KAAKmzC,QAClCnzC,KAAK+rB,MAAQ/rB,KAAKuzC,KAClBvzC,KAAKgsB,MAAQhsB,KAAKwzC,KAClBxzC,KAAKgf,MAAQ,MA7CNuO,EAAA,GAgDfhtB,EAAOgtB,WAAaA,EAhDxB,CAiDGhtB,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT6pB,EADS,WAEX,SAAAA,IAAejtB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAoqB,GAFJ,OAAAjtB,OAAA+E,EAAA,EAAA/E,CAAAitB,EAAA,EAAAjoB,IAAA,aAAAzE,MAAA,SAIA+1C,EAAOC,EAAOC,EAAQC,GAC7B5zC,KAAK6zC,KAAO/nC,KAAKmR,MAAMw2B,GACvBzzC,KAAK8zC,KAAOhoC,KAAKmR,MAAMy2B,GACvB1zC,KAAK+zC,QAAU/zC,KAAK6zC,KAAO,EAC3B7zC,KAAKg0C,QAAUh0C,KAAK8zC,KAAO,EAC3B9zC,KAAKkH,MAAQ4E,KAAKmR,MAAM02B,GACxB3zC,KAAKmH,OAAS2E,KAAKmR,MAAM22B,GACzB5zC,KAAKi0C,OAASj0C,KAAK6zC,KAAO7zC,KAAK8zC,KAC/B9zC,KAAKk0C,SAAyB,EAAdl0C,KAAKi0C,OACrBj0C,KAAKkD,UACLlD,KAAKm0C,QAAU,IAAI1kC,MACnB,IAAK,IAAIoI,EAAI,EAAGA,EAAI7X,KAAKk0C,SAAUr8B,IAC/B7X,KAAKm0C,QAAQp1C,KAAK,KAhBf,CAAAoD,IAAA,UAAAzE,MAAA,WAoBHsC,KAAKm0C,UACLn0C,KAAKm0C,QAAQ/wC,OAAS,GAC1BpD,KAAKm0C,QAAU,OAtBR,CAAAhyC,IAAA,QAAAzE,MAAA,WAyBP,IAAK,IAAIyS,EAAI,EAAGA,EAAInQ,KAAKk0C,SAAU/jC,IAC/BnQ,KAAKm0C,QAAQhkC,GAAK,IA1Bf,CAAAhO,IAAA,YAAAzE,MAAA,SA6BD02C,GACN,IAAK,IAAIjkC,EAAI,EAAGA,EAAInQ,KAAKk0C,SAAU/jC,IAC/BnQ,KAAKm0C,QAAQhkC,IAAMikC,IA/BhB,CAAAjyC,IAAA,cAAAzE,MAAA,SAkCC22C,EAAMC,GACd,IAAIC,EAAOF,EAAOr0C,KAAKkH,MACnBstC,EAAOF,EAAOt0C,KAAKmH,OACvB,GAAKotC,EAAO,GAAKA,EAAO,GAAOC,EAAO,GAAKA,EAAO,EAC9C,OAAO,EAEX,IAAIC,EAAYF,EAAOv0C,KAAK6zC,KACxBa,EAAYF,EAAOx0C,KAAK8zC,KAS5B,OARIW,EAAY,EACZA,EAAY,EACPA,EAAYz0C,KAAK+zC,UACtBU,EAAYz0C,KAAK+zC,SACjBW,EAAY,EACZA,EAAY,EACPA,EAAY10C,KAAKg0C,UACtBU,EAAY10C,KAAKg0C,SACdU,EAAY10C,KAAK6zC,KAAOY,IAlDxB,CAAAtyC,IAAA,uBAAAzE,MAAA,SAoDU82B,GACjBx0B,KAAKmsB,gBAAgBqI,EAAInoB,EAAGmoB,EAAIloB,KArDzB,CAAAnK,IAAA,kBAAAzE,MAAA,SAuDK22C,EAAMC,GAGlB,GAFAD,GAAcr0C,KAAKkH,MACnBotC,GAAct0C,KAAKmH,OACdktC,EAAO,GAAKA,EAAO,GAAOC,EAAO,GAAKA,EAAO,EAG9C,OAFAt0C,KAAKqsB,KAAO,OACZrsB,KAAKssB,KAAO,GAGhBtsB,KAAKy0C,UAAYJ,EAAOr0C,KAAK6zC,KAC7B7zC,KAAK00C,UAAYJ,EAAOt0C,KAAK8zC,KAO7B9zC,KAAK20C,KAAO7oC,KAAKmR,MAAsD,GAA/Cjd,KAAK00C,UAAY10C,KAAK6zC,KAAO7zC,KAAKy0C,YAC1Dz0C,KAAKqsB,KAAiC,GAA1BrsB,KAAKm0C,QAAQn0C,KAAK20C,MAC9B30C,KAAKssB,KAAqC,GAA9BtsB,KAAKm0C,QAAQn0C,KAAK20C,KAAO,KAzE9B,CAAAxyC,IAAA,kBAAAzE,MAAA,SA4EK2O,EAAGC,EAAG8mC,EAAIC,EAAIuB,EAAQvnB,GAClC,IAeIld,EAAG0H,EAAG2c,EAAKqgB,EAfXJ,EAAYpoC,EAAIrM,KAAKkH,MAAQlH,KAAK6zC,KAClCa,EAAYpoC,EAAItM,KAAKmH,OAASnH,KAAK8zC,KACnCgB,EAAcF,EAAS50C,KAAKkH,MAAQlH,KAAK6zC,KACzCkB,EAASN,EAAYK,EACrBE,EAASN,EAAYI,EACrBG,EAAOR,EAAYK,EACnBI,EAAOR,EAAYI,EAUvB,IATIC,EAAS,IACTA,EAAS,GACTC,EAAS,IACTA,EAAS,GACTC,EAAOj1C,KAAK6zC,OACZoB,EAAOj1C,KAAK6zC,MACZqB,EAAOl1C,KAAK8zC,OACZoB,EAAOl1C,KAAK8zC,MAEX3jC,EAAI4kC,EAAQ5kC,EAAI8kC,EAAM9kC,IACvB,IAAK0H,EAAIm9B,EAAQn9B,EAAIq9B,EAAMr9B,IACvB2c,EAA4B,GAArB3c,EAAI7X,KAAK6zC,KAAO1jC,IACvB0kC,EAAW/oC,KAAKC,MAAM0oC,EAAYtkC,IAAMskC,EAAYtkC,IAAMukC,EAAY78B,IAAM68B,EAAY78B,KACzE,OACXg9B,EAAW,MACXA,EAAWC,IACXD,EAAW,EAAOA,EAAWC,EAC7BD,GAAWxnB,EACXrtB,KAAKm0C,QAAQ3f,IAAQ4e,EAAKyB,EAC1B70C,KAAKm0C,QAAQ3f,EAAM,IAAM6e,EAAKwB,OAvGnCzqB,EAAA,GA6Gf7pB,EAAO6pB,cAAgBA,EA7G3B,CA8GG7pB,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTsF,EADS,oBAAAA,IAAA1I,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA6F,GAAA,OAAA1I,OAAA+E,EAAA,EAAA/E,CAAA0I,EAAA,OAAA1D,IAAA,gBAAAzE,MAAA,SAEUomB,EAAK4qB,EAAUn6B,EAAkB8J,EAAS0vB,EAAQC,EAAQH,EAAiBC,GAE5FhqB,EAAIpa,8BAA8BpJ,EAAQqJ,qBAAqBC,SAAU,EAAGkkC,GAE5EhqB,EAAIpa,8BAA8BpJ,EAAQqJ,qBAAqBE,OAAQ,EAAGgkC,GAE1E/pB,EAAItc,kBAAkB,EAAGumC,EAAQ,EAAGztC,EAAQmH,4BAA4BC,SAExEoc,EAAItc,kBAAkB,EAAGwmC,EAAQ,EAAG1tC,EAAQmH,4BAA4BC,SAExEoc,EAAIlZ,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG0K,GAAkB,GAE5FuP,EAAIra,aAAa,EAAG4U,GACpByF,EAAIrb,cAAcimC,KAfX,CAAAvsC,IAAA,oBAAAzE,MAAA,SAiBcomB,EAAKqxB,GAK1B,IAAI3U,EAAS1c,EAAIyb,gBAKjB,OAHAiB,EAAO4U,OAAOp1C,KAAKq1C,cAAer1C,KAAKs1C,eAGhC9U,IA3BA,CAAAr+B,IAAA,2BAAAzE,MAAA,SA6BqB6pB,EAAKguB,EAAeryC,GAChD,IAAImjB,EAAWkvB,EAAcruC,MACzBof,EAAYivB,EAAcpuC,OAC1BN,EAAM0uC,EACNhvB,EAAiB,IAAIhmB,EAAOyG,OAChCuf,EAAetf,MAAM,GAAK,IAE1B,IADA,IAAIyf,EAAW,EACRL,EAAW,GAAKC,EAAY,GAK/B,GAJAiB,EAAIjZ,qBAAqBzH,EAAK6f,GAC9BA,IAEAJ,IAAc,GADdD,IAAa,GAEE,GAAKC,EAAY,EAAG,CAC/B,IAAIhe,EAAMzB,EACVA,EAAM,MACNA,EAAM,IAAIvG,EAAQwG,WAAWuf,EAAUC,GAAW,EAAM,WAEpDlf,KAAKkB,EAAKie,EAAgB,KAAM,KAAM,MAAM,IAC5CrjB,GAAWoF,GAAOitC,IAClBjtC,EAAIpF,UACRoF,EAAM,MAGVpF,GAAW2D,GAAO0uC,IAClB1uC,EAAI3D,YArDD,CAAAf,IAAA,gBAAAzE,MAAA,SAuDUomB,EAAKjd,EAAKk2B,EAAQyY,EAAStyC,EAAS4/B,GAAuB,IAAjB5F,EAAiB79B,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,IAAAA,UAAA,GACxEkoB,EAAMzD,EAAIpd,cAAcG,EAAIK,MAAOL,EAAIM,OAAQ41B,GAAQ,EAAO,EAAG+F,EAAM5F,GAS3E,OARIsY,EACA3vC,EAAc4vC,yBAAyBluB,EAAK1gB,EAAK3D,GAGjDqkB,EAAIjZ,qBAAqBzH,GAEzB3D,GACA2D,EAAI3D,UACDqkB,MAjEA1hB,EAAA,GAsFfA,EAAcyvC,cAAgB,gQAY9BzvC,EAAcwvC,cAAgB,6vBA6B9B90C,EAAOsF,cAAgBA,EA/H3B,CAgIGtF,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTwJ,EADS,SAAAA,IAAA5M,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA+J,IAGfA,EAAUC,MAAQ,QAClBD,EAAUE,IAAM,MAChBF,EAAUI,SAAW,WACrBJ,EAAUS,OAAS,SACnBT,EAAUW,MAAQ,QAClBnK,EAAOwJ,UAAYA,EARJ,IAST/C,EATS,WAUX,SAAAA,IAAe7J,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAgH,GACXhH,KAAKlB,EAAI,EACTkB,KAAK+N,EAAI,EACT/N,KAAKymB,EAAI,EACTzmB,KAAK+0B,EAAI,EACT/0B,KAAKqiB,GAAK,EACVriB,KAAKsiB,GAAK,EAhBH,OAAAnlB,OAAA+E,EAAA,EAAA/E,CAAA6J,EAAA,EAAA7E,IAAA,WAAAzE,MAAA,WAmBPsC,KAAKlB,EAAI,EACTkB,KAAK+N,EAAI,EACT/N,KAAKymB,EAAI,EACTzmB,KAAK+0B,EAAI,EACT/0B,KAAKqiB,GAAK,EACVriB,KAAKsiB,GAAK,IAxBH,CAAAngB,IAAA,QAAAzE,MAAA,SA0BL2O,EAAGC,GACK,IAAND,IACArM,KAAKlB,GAAKuN,EACVrM,KAAKymB,GAAKpa,EACVrM,KAAKqiB,IAAMhW,GAEL,IAANC,IACAtM,KAAK+N,GAAKzB,EACVtM,KAAK+0B,GAAKzoB,EACVtM,KAAKsiB,IAAMhW,KAnCR,CAAAnK,IAAA,YAAAzE,MAAA,SAsCD2O,EAAGC,GACTtM,KAAKqiB,IAAMhW,EACXrM,KAAKsiB,IAAMhW,IAxCJ,CAAAnK,IAAA,SAAAzE,MAAA,SA0CJya,QA1CInR,EAAA,GA6CfzG,EAAOyG,OAASA,EAShBzG,EAAOmO,eAPH,SAAAA,EAAYC,EAAGmQ,EAAG/Q,EAAGjP,GAAI3B,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA0O,GACrB1O,KAAK2O,EAAIA,EACT3O,KAAK8e,EAAIA,EACT9e,KAAK+N,EAAIA,EACT/N,KAAKlB,EAAIA,GAnDrB,CAuDGyB,IAAWA,EAAS,SAq3CnBA,EAp3CEqO,EACF,SAAAA,EAAYvC,EAAGC,EAAGpF,EAAOC,GAAShK,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA4O,GAC9B5O,KAAKqM,EAAIA,EACTrM,KAAKsM,EAAIA,EACTtM,KAAKkH,MAAQA,EACblH,KAAKmH,OAASA,IAItB,SAAW5G,GAAQ,IACT2V,EADS,WAEX,SAAAA,IAAe/Y,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAkW,GACXlW,KAAKqe,QAAU,KACfre,KAAK6tC,gBAAkB,GACvB7tC,KAAK8tC,YAAc,GACnB9tC,KAAK+tC,OAAS,GACd/tC,KAAKguC,OAAS,GACdhuC,KAAKiuC,SAAW,EAChBjuC,KAAKqW,KAAO,EACZrW,KAAKsW,KAAO,EACZtW,KAAK6tC,gBAAgB9uC,KAAK,EAAG,EAAG,EAAG,GACnCiB,KAAK8tC,YAAY/uC,KAAK,EAAG,EAAG,EAAG,GAC/BiB,KAAK+tC,OAAOhvC,KAAK,EAAG,EAAGwB,EAAO0F,cAAcE,YAAa,EAAG,EAAG5F,EAAO0F,cAAcC,aAAc3F,EAAO0F,cAAcE,YAAa5F,EAAO0F,cAAcC,cACzJlG,KAAKguC,OAAOjvC,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAd/B,OAAA5B,OAAA+E,EAAA,EAAA/E,CAAA+Y,EAAA,EAAA/T,IAAA,eAAAzE,MAAA,SAgBE0Q,EAAM8/B,GACftpC,QAAQC,IAAI,gBACZ7E,KAAKiuC,SAAWC,EAChBluC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAkB,GAAb3/B,EAAKlH,MAAalH,KAAKiuC,SACzDjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAoB,IAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC3DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,IAAb3/B,EAAKlH,MAAalH,KAAKiuC,SAC1DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,GAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC1DjuC,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAM5/B,EAAK/B,EAAI+B,EAAKlH,OAAS3G,EAAO0F,cAAcE,YAC/EnG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAK5/B,EAAK9B,EAAI/L,EAAO0F,cAAcC,aAChElG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAK5/B,EAAK/B,EAAI9L,EAAO0F,cAAcE,YAChEnG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAM5/B,EAAK9B,EAAI8B,EAAKjH,QAAU5G,EAAO0F,cAAcC,aAChFlG,KAAKmuC,QAAQ7nC,iBAAiBtG,KAAK+tC,OAAQ,EAAG,GAC9C/tC,KAAKouC,QAAQ9nC,iBAAiBtG,KAAKguC,OAAQ,EAAG,GAC9ChuC,KAAKqM,GAAK+B,EAAK/B,EAAiB,GAAb+B,EAAKlH,OAAclH,KAAKiuC,SAC3CjuC,KAAKsM,GAAK8B,EAAK9B,EAAkB,GAAd8B,EAAKjH,QAAenH,KAAKiuC,SAC5CjuC,KAAKiH,MAAQ,EACbjH,KAAKmY,MAAQ,EACbnY,KAAKkH,MAAQkH,EAAKlH,MAAQlH,KAAKiuC,SAC/BjuC,KAAKmH,OAASiH,EAAKjH,OAASnH,KAAKiuC,WAlC1B,CAAA9rC,IAAA,mBAAAzE,MAAA,SAoCM0Q,EAAMigC,EAAQC,EAAQJ,GACnCtpC,QAAQC,IAAI,oBACZ7E,KAAKiuC,SAAWC,EAChBluC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAkB,GAAb3/B,EAAKlH,MAAalH,KAAKiuC,SACzDjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAoB,IAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC3DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,IAAb3/B,EAAKlH,MAAalH,KAAKiuC,SAC1DjuC,KAAK+tC,OAAO,GAAK/tC,KAAK+tC,OAAO,GAAmB,GAAd3/B,EAAKjH,OAAcnH,KAAKiuC,SAC1DjuC,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAMK,EAASjgC,EAAKlH,OAAS3G,EAAO0F,cAAcE,YAAc,GAC7FnG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAKM,EAAS/tC,EAAO0F,cAAcC,aAAe,GAC/ElG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,GAAKK,EAAS9tC,EAAO0F,cAAcE,YAAc,GAC9EnG,KAAKguC,OAAO,GAAKhuC,KAAKguC,OAAO,IAAMM,EAASlgC,EAAKjH,QAAU5G,EAAO0F,cAAcC,aAAe,GAC/FlG,KAAKqM,GAAK+B,EAAK/B,EAAiB,GAAb+B,EAAKlH,OAAclH,KAAKiuC,SAC3CjuC,KAAKsM,GAAK8B,EAAK9B,EAAkB,GAAd8B,EAAKjH,QAAenH,KAAKiuC,SAC5CjuC,KAAKmuC,QAAQ7nC,iBAAiBtG,KAAK+tC,OAAQ,EAAG,GAC9C/tC,KAAKouC,QAAQ9nC,iBAAiBtG,KAAKguC,OAAQ,EAAG,GAC9ChuC,KAAKiH,MAAQ,EACbjH,KAAKmY,MAAQ,EACbnY,KAAKkH,MAAQkH,EAAKlH,MAAQlH,KAAKiuC,SAC/BjuC,KAAKmH,OAASiH,EAAKjH,OAASnH,KAAKiuC,WAtD1B,CAAA9rC,IAAA,QAAAzE,MAAA,SAwDL6wC,EAAMC,EAAWC,GACnBzuC,KAAK8jB,IAAMyqB,EACXvuC,KAAK0uC,SAAWF,EAChBxuC,KAAKuU,iBAAmBk6B,EACxBzuC,KAAKmuC,QAAUnuC,KAAK8jB,IAAIzd,mBAAmB,EAAG,GAC9CrG,KAAKouC,QAAUpuC,KAAK8jB,IAAIzd,mBAAmB,EAAG,GAC9CrG,KAAKmuC,QAAQ7nC,iBAAiBtG,KAAK+tC,OAAQ,EAAG,GAC9C/tC,KAAKouC,QAAQ9nC,iBAAiBtG,KAAKguC,OAAQ,EAAG,KA/DvC,CAAA7rC,IAAA,aAAAzE,MAAA,SAiEAypB,GACPnnB,KAAKqe,QAAU8I,IAlER,CAAAhlB,IAAA,UAAAzE,MAAA,eAAAyE,IAAA,OAAAzE,MAAA,WAuEPsC,KAAK6tC,gBAAgB,GAAK7tC,KAAKqM,EAC/BrM,KAAK6tC,gBAAgB,GAAK7tC,KAAKsM,EAC/BtM,KAAK6tC,gBAAgB,GAAK7tC,KAAKmY,MAC/BnY,KAAK6tC,gBAAgB,GAAK7tC,KAAKiH,MAC/BjH,KAAK8jB,IAAIlZ,8BAA8BtK,EAAQqJ,qBAAqBE,OAAQ,EAAG7J,KAAKuU,kBAAkB,GACtGvU,KAAK8jB,IAAInc,gBAAgBrH,EAAQsH,qBAAqBsC,aAAc5J,EAAQsH,qBAAqBE,wBACjGvH,EAAOsF,cAAc4C,cAAczI,KAAK8jB,IAAK9jB,KAAK0uC,SAAU1uC,KAAKuU,iBAAkBvU,KAAKqe,QAASre,KAAKmuC,QAASnuC,KAAKouC,QAASpuC,KAAK6tC,gBAAiB7tC,KAAK8tC,iBA7EjJ53B,EAAA,GAgFf3V,EAAO2V,aAAeA,EAhF1B,CAiFG3V,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT0U,EADS,oBAAAA,IAAA9X,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAiV,GAAA,OAAA9X,OAAA+E,EAAA,EAAA/E,CAAA8X,EAAA,OAAA9S,IAAA,2BAAAzE,MAAA,SAEqB4W,EAAWD,GACvC,IAAIlE,EACAkP,EACAxH,EACA8Q,EAIA+sB,EACAC,EAEAzgC,EACA7I,EACApF,EACAkR,EAgBAy9B,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAnqB,EACAC,EACAyX,EACA0S,EACAC,EACAC,EACA73B,EACA83B,EACAC,EAzCAjqC,EAAI,EACJkqC,EAAU,GAqBVvzB,EAAM,EA8BV,IAVA4yB,EAAiB/pC,KAAKG,SAAW,GACjC6pC,EAAU,GACVC,EAAO,GAAK,GAAkB/1C,KAAKgV,MACnCghC,EAAO,GAAK,GAAkBh2C,KAAKgV,MACnC0gC,EAAmB,GAAPK,EACZJ,EAAoB,GAAPK,EACbQ,EAAU,EACVvzB,EAAMnX,KAAKG,SAAWH,KAAK0B,GAAK,GAAe,IAAV1B,KAAK0B,GACtC1B,KAAKyB,IAAI0V,EAAMnX,KAAK0B,GAAK,KAAO,KAChCyV,EAAM,GACL9S,EAAI,EAAGA,EAAI4lC,EAAOC,EAAM7lC,IACzB2lC,EAAQ/2C,KAAK,GACjByf,EAAMyE,EAAM,EACZ9S,EAAIrE,KAAKmR,MAAMnR,KAAKG,SAAWoI,EAAQjR,QAEvC,IAAIqzC,EAAY3qC,KAAK+B,IAAIwG,EAAQjR,OAAQ,GAAK,GAAKpD,KAAKgV,MACpD0hC,GAAW,EACf,IAAK7+B,EAAI,EAAGA,EAAI4+B,EAAW5+B,IAAK,CAC5B,IAAI8+B,EAAW,aACXxmC,EACQ,EAAIkE,EAAQjR,SAChB+M,EAAI,IAGZ,GADA+E,EAAKb,EAAQlE,GACJ,GAAL0H,EAAQ,CAKR,IAHA4rB,EAAOvuB,EAAGhO,MAAQgO,EAAG/N,OAAS,IAAM,EAAI,EACxCyuC,GAAO,EACPK,EAAO,EACF52B,EAAI,EAAGA,EAAIokB,EAAMpkB,IAClB42B,GAAQA,EACZC,EAAOpqC,KAAKoC,KAAK+nC,EAAO/gC,EAAGhO,MAAQgO,EAAG/N,QACtCF,EAAQ0uC,EAAavjC,OAAO4jC,GAAQC,EAAO/gC,EAAG/N,OAC9C4kB,EAAuB,IAAfgqB,EAAOG,GACflqB,EAAuB,IAAfgqB,EAAOC,GACfK,GAAS,EACT7S,EAAO,MAEN,CAID,IAHAwS,EAAO,EACPC,EAAO,EACPQ,GAAW,IACE,CAGT,IAFAd,IAAOC,GAAiB/pC,KAAKG,SAAW,GACxCgqC,EAAO,EACF52B,EAAI,EAAGA,EAAIokB,EAAMpkB,IAClB42B,GAAQA,EAWZ,GAVAC,EAAOpqC,KAAKoC,KAAK+nC,EAAO/gC,EAAGhO,MAAQgO,EAAG/N,QACtCF,EAAQ0uC,EAAavjC,OAAO4jC,GAAQC,EAAO/gC,EAAG/N,OAC1CyuC,IACAjtB,EAAIstB,EACJA,EAAOC,EACPA,EAAOvtB,IAEPstB,EAAOD,GAAQE,EAAOH,KACtBW,GAAW,GAEXA,EAAU,CACV,KAAIT,EAAO,EAAID,GAAQE,EAAO,EAAIH,GAM7B,CACDtS,EAAO33B,KAAKmR,MAAsB,EAAhBnR,KAAKG,UACvB,QAPAw3B,EACW,GACPkT,QAQP,CACD,KAAIV,EAAOC,EAAO,GAGb,CACDzS,EAAO33B,KAAKmR,MAAsB,EAAhBnR,KAAKG,UACvB,MAJAw3B,KAQZ8S,EAAY,EACZF,EAAa,EAEM,SAAXO,IAIA,GAHA7qB,EAAO,EAAIjgB,KAAKmR,OAAO84B,EAAOG,EAAO,GAAKpqC,KAAKG,UAC/C+f,EAAO,EAAIlgB,KAAKmR,OAAO+4B,EAAOC,EAAO,GAAKnqC,KAAKG,cAC/CoqC,EACiB,KAAjB,CAGA,IAAK/pC,EAAI0f,EAAM1f,EAAI0f,EAAOiqB,EAAM3pC,IAC5B,IAAKD,EAAI0f,EAAM1f,EAAI0f,EAAOmqB,EAAM7pC,IAC5B,GAAIypC,EAAQxpC,EAAIypC,EAAO1pC,GAEnB,YADAuqC,IAMZ,IADAL,EAAY,EACPjqC,EAAI0f,EAAM1f,EAAI0f,EAAOiqB,EAAgB3pC,IAET,GAAzBwpC,EAAQxpC,EAAIypC,GADhB1pC,EAAI0f,EAAO,MAEPwqB,IAEID,GADAV,IACSp3B,GAOY,GAAzBs3B,EAAQxpC,EAAIypC,GADhB1pC,EAAI0f,EAAOmqB,MAEPK,IAEID,IADAV,IACSp3B,GAOrB,GAAI+3B,EAAY,EACZ,IAAKlqC,EAAI0f,EAAM1f,EAAI0f,EAAOmqB,EAAgB7pC,IAET,GAAzBypC,GADJxpC,EAAI0f,EAAO,GACK+pB,EAAO1pC,KACnBkqC,IAEID,GAAS,GAOY,GAAzBR,GADJxpC,EAAI0f,EAAOiqB,GACKF,EAAO1pC,KACnBkqC,IAEID,GADAV,GAQZW,EAAY,GACZK,KAIRA,GAIR,IAAKT,EAAKnqB,EAAMmqB,EAAKnqB,EAAOiqB,EAAME,IAC9B,IAAKC,EAAKrqB,EAAMqqB,EAAKrqB,EAAOmqB,EAAME,IAC9BN,EAAQK,EAAKJ,EAAOK,GAAM,EACtBR,EACIU,EACIH,GAAMnqB,EAAOiqB,EAAO,IACpBH,EAAQK,EAAKJ,EAAOK,GAAM,GAG1BD,GAAMnqB,IACN8pB,EAAQK,EAAKJ,EAAOK,GAAM,GAI9BE,EACIF,GAAMrqB,EAAOmqB,EAAO,IACpBJ,EAAQK,EAAKJ,EAAOK,GAAM,GAG1BA,GAAMrqB,IACN+pB,EAAQK,EAAKJ,EAAOK,GAAM,GAK9CI,EAAU,EACNZ,GACAvpC,EAAI0f,EAAO3Z,OAAO2jC,GAAQL,EAAwB,GAAZxgC,EAAG/N,OAAeF,EACxDA,IAAUiO,EAAG/N,OAASF,EAAQuvC,IAAYthC,EAAG/N,OAASF,GAElDqF,EADAgqC,EACItqB,EAAO5Z,OAAO4jC,GAAQL,EAAwB,GAAXzgC,EAAGhO,MAAcD,EAAkB,GAAVuvC,GAG3DxqB,EAAOiqB,GAAQ7jC,OAAO4jC,GAAQL,EAAwB,GAAXzgC,EAAGhO,MAAcD,EAAkB,GAAVuvC,IAI7ElqC,EAAI0f,EAAO5Z,OAAO4jC,GAAQL,EAAyB,GAAZzgC,EAAG/N,OAAeF,EACzDA,IAAUiO,EAAG/N,OAASF,EAAQuvC,IAAYthC,EAAG/N,OAASF,GAElDoF,EADAiqC,EACIvqB,EAAO3Z,OAAO2jC,GAAQL,EAAuB,GAAXxgC,EAAGhO,MAAcD,EAAkB,GAAVuvC,GAG1DzqB,EAAOmqB,GAAQ9jC,OAAO2jC,GAAQL,EAAuB,GAAXxgC,EAAGhO,MAAcD,EAAkB,GAAVuvC,GAGhFr+B,EAAQy9B,EAAQp3B,EAAiB,IAAV1S,KAAK0B,GAAoB,GAAV1B,KAAK0B,GAAW,EACtDjN,EAAOs2C,cAAcC,kBAAkBxiC,EAAWD,EAASlE,EAAG9D,EAAGC,EAAGrF,EAAOkR,GAC3Ew+B,IAEJp2C,EAAOs2C,cAAcE,iBAAiBhB,EAAMC,EAAMF,GAClDv1C,EAAOs2C,cAAcG,WAAW1iC,EAAW2O,KA5PpC,CAAA9gB,IAAA,uBAAAzE,MAAA,SA8PiB4W,EAAWD,GACnC,IAAIlE,EACAkP,EACAxH,EAKA69B,EACAC,EAEAzgC,EACA7I,EACApF,EAkBA6uC,EACAC,EACAC,EACAC,EACAC,EACAnqB,EACAC,EACAyX,EACA0S,EACAC,EACAC,EAEAE,EAtCAjqC,EAAI,EACJkqC,EAAU,GAqBVvzB,EAAM,EAiBV6yB,EAAU,GACV,IAAImB,EAAK,EACLC,EAAK,EACT,IAAK/mC,EAAI,EAAGA,EAAIkE,EAAQjR,OAAQ+M,IAC5B+E,EAAKb,EAAQlE,GACb8mC,EAAKnrC,KAAK+B,IAAIopC,EAAI/hC,EAAGhO,OACrBgwC,EAAKprC,KAAK+B,IAAIqpC,EAAIhiC,EAAG/N,QAEzB,IACIgwC,EAAOF,EAAKC,EACZE,EAAUtrC,KAAK+B,IAAI,EAAG/B,KAAKurC,MAAMF,EAAOF,EAAKC,EAAKA,EAAKD,IAU3D,IARAlB,EAAOjqC,KAAK+B,IAAI,GAAK,GAAkB7N,KAAKgV,MAAOmiC,EAAO,EAAIC,EAAU,GACxEpB,EAAOlqC,KAAK+B,IAAI,GAAK,GAAkB7N,KAAKgV,MAAOmiC,EAAO,EAAI,EAAIC,GAClE1B,EAAmB,GAAPK,EACZJ,EAAoB,GAAPK,EACbQ,EAAU,EACVvzB,EAAMnX,KAAKG,SAAWH,KAAK0B,GAAK,GAAe,IAAV1B,KAAK0B,GACtC1B,KAAKyB,IAAI0V,EAAMnX,KAAK0B,GAAK,KAAO,KAChCyV,EAAM,GACL9S,EAAI,EAAGA,EAAI4lC,EAAOC,EAAM7lC,IACzB2lC,EAAQ/2C,KAAK,GAEjBoR,EAAIrE,KAAKmR,MAAMnR,KAAKG,SAAWoI,EAAQjR,QAEvC,IAAIqzC,EAAY3qC,KAAK+B,IAAIwG,EAAQjR,OAAQ,GAAK,GAAKpD,KAAKgV,MACxD,IAAK6C,EAAI,EAAGA,EAAI4+B,EAAW5+B,IAAK,CAE5B,GADA3C,EAAKb,EAAQlE,GACJ,GAAL0H,EAAQ,CAIR,IAFA4rB,EAAO,EACPwS,EAAO,EACF52B,EAAI,EAAGA,EAAIokB,EAAMpkB,IAClB42B,GAAQA,EACZC,EAAOpqC,KAAKoC,KAAK+nC,EAAO/gC,EAAGhO,MAAQgO,EAAG/N,QACtCF,EAAQ0uC,EAAa7pC,KAAKmR,MAAM+4B,GAAQC,EAAO/gC,EAAG/N,OAClD4kB,EAAuB,IAAfgqB,EAAOG,GACflqB,EAAuB,IAAfgqB,EAAOC,GACfxS,EAAO,MAEN,CAGD,IAFAwS,EAAO,EACPC,EAAO,EACAD,EAAOC,EAAO,GAAG,CAEpB,IADAD,EAAO,EACF52B,EAAI,EAAGA,EAAIokB,EAAMpkB,IAClB42B,GAAQA,EACZC,EAAOpqC,KAAKoC,KAAK+nC,EAAO/gC,EAAGhO,MAAQgO,EAAG/N,QACtCF,EAAQ0uC,EAAavjC,OAAO4jC,GAAQC,EAAO/gC,EAAG/N,OAC1C8uC,EAAOC,EAAO,EACdzS,IAGAA,EAAO33B,KAAKmR,MAAsB,EAAhBnR,KAAKG,UAG/BsqC,EAAY,EACZF,EAAa,EAEM,SAAXO,IAIA,GAHA7qB,EAAO,EAAIjgB,KAAKmR,OAAO84B,EAAOG,EAAO,GAAKpqC,KAAKG,UAC/C+f,EAAO,EAAIlgB,KAAKmR,OAAO+4B,EAAOC,EAAO,GAAKnqC,KAAKG,cAC/CoqC,EACiB,KAAjB,CAIA,IAAK/pC,EAAI0f,EAAM1f,EAAI0f,EAAOiqB,EAAM3pC,IAC5B,IAAKD,EAAI0f,EAAM1f,EAAI0f,EAAOmqB,EAAM7pC,IAC5B,GAAIypC,EAAQxpC,EAAIypC,EAAO1pC,GAEnB,YADAuqC,IAMZ,IADAL,EAAY,EACPjqC,EAAI0f,EAAM1f,EAAI0f,EAAOiqB,EAAgB3pC,IAET,GAAzBwpC,EAAQxpC,EAAIypC,GADhB1pC,EAAI0f,EAAO,KAEPwqB,IAGyB,GAAzBT,EAAQxpC,EAAIypC,GADhB1pC,EAAI0f,EAAOmqB,KAEPK,IAGR,GAAIA,EAAY,EACZ,IAAKlqC,EAAI0f,EAAM1f,EAAI0f,EAAOmqB,EAAgB7pC,IAET,GAAzBypC,GADJxpC,EAAI0f,EAAO,GACK+pB,EAAO1pC,IACnBkqC,IAGyB,GAAzBT,GADJxpC,EAAI0f,EAAOiqB,GACKF,EAAO1pC,IACnBkqC,IAGRA,EAAY,GACZK,KAIRA,GAIR,IAAKT,EAAKnqB,EAAMmqB,EAAKnqB,EAAOiqB,EAAME,IAC9B,IAAKC,EAAKrqB,EAAMqqB,EAAKrqB,EAAOmqB,EAAME,IAC9BN,EAAQK,EAAKJ,EAAOK,GAAM,EAGlCI,EAAU,EACVlqC,EAAI0f,EAAO5Z,OAAO4jC,GAAQL,EAAyB,GAAZzgC,EAAG/N,OAAeF,EACzDoF,EAAI0f,EAAO3Z,OAAO2jC,GAAQL,EAAuB,GAAXxgC,EAAGhO,MAAcD,EACvDA,IAAUiO,EAAG/N,OAASF,EAAQuvC,IAAYthC,EAAG/N,OAASF,GACtD1G,EAAOs2C,cAAcC,kBAAkBxiC,EAAWD,EAASlE,EAAG9D,EAAGC,EAAGrF,EAAO,KAC3EkJ,EACQ,EAAIkE,EAAQjR,SAChB+M,EAAI,GAEZ5P,EAAOs2C,cAAcE,iBAAiBhB,EAAMC,EAAMF,GAClDv1C,EAAOs2C,cAAcG,WAAW1iC,EAAW2O,KAnapC,CAAA9gB,IAAA,6BAAAzE,MAAA,SAqauB4W,EAAWD,GACzC,IAAIlE,EACAkP,EACAxH,EAMA89B,EAEAzgC,EACA7I,EACApF,EAkBA6uC,EACAC,EACAC,EACAC,EACAC,EACAnqB,EACAC,EACAyX,EACA0S,EACAC,EACAC,EACAE,EArCAjqC,EAAI,EACJkqC,EAAU,GAqBVvzB,EAAM,EAgBV6yB,EAAU,GACV,IAAImB,EAAK,EACLC,EAAK,EACT,IAAK/mC,EAAI,EAAGA,EAAIkE,EAAQjR,OAAQ+M,IAC5B+E,EAAKb,EAAQlE,GACb8mC,EAAKnrC,KAAK+B,IAAIopC,EAAI/hC,EAAGhO,OACrBgwC,EAAKprC,KAAK+B,IAAIqpC,EAAIhiC,EAAG/N,QAEzB,IAAImwC,EAASL,EAAKC,EACdC,EAAOF,EAAKC,EACZE,EAAUtrC,KAAK+B,IAAI,EAAG/B,KAAKurC,MAAMF,EAAOF,EAAKC,EAAKA,EAAKD,IAU3D,IARAlB,EAAOjqC,KAAK+B,IAAI,GAAK,GAAkB7N,KAAKgV,MAAOmiC,EAAO,EAAIC,EAAU,GACxEpB,EAAOlqC,KAAK+B,IAAI,GAAK,GAAkB7N,KAAKgV,MAAOmiC,EAAO,EAAI,EAAIC,GAC/C,GAAPrB,EACZJ,EAAoB,GAAPK,EACbQ,EAAU,EACVvzB,EAAMnX,KAAKG,SAAWH,KAAK0B,GAAK,GAAe,IAAV1B,KAAK0B,GACtC1B,KAAKyB,IAAI0V,EAAMnX,KAAK0B,GAAK,KAAO,KAChCyV,EAAM,GACL9S,EAAI,EAAGA,EAAI4lC,EAAOC,EAAM7lC,IACzB2lC,EAAQ/2C,KAAK,GACjBoR,EAAIrE,KAAKmR,MAAMnR,KAAKG,SAAWoI,EAAQjR,QAEvC,IAAIqzC,EAAY3qC,KAAK+B,IAAIwG,EAAQjR,OAAQ,GAAK,GAAKpD,KAAKgV,MACxD,IAAK6C,EAAI,EAAGA,EAAI4+B,EAAW5+B,IAAK,CAE5B,GADA3C,EAAKb,EAAQlE,GACJ,GAAL0H,EAAQ,CAIR,IAFA4rB,EAAO,EACPwS,EAAO,EACF52B,EAAI,EAAGA,EAAIokB,EAAMpkB,IAClB42B,GAAQA,EACRkB,EACAjB,EAAOD,EAAOmB,EAIdnB,GADAC,EAAOD,GACOmB,EAElBnwC,EAAQ0uC,EAAavjC,OAAO4jC,GAAQC,EAAO/gC,EAAG/N,OAC9C4kB,EAAuB,IAAfgqB,EAAOG,GACflqB,EAAuB,IAAfgqB,EAAOC,GACfxS,EAAO,MAEN,CAGD,IAFAwS,EAAO,EACPC,EAAO,EACAD,EAAOC,EAAO,GAAG,CAEpB,IADAD,EAAO,EACF52B,EAAI,EAAGA,EAAIokB,EAAMpkB,IAClB42B,GAAQA,EACRkB,EACAjB,EAAOD,EAAOmB,EAIdnB,GADAC,EAAOD,GACOmB,EAElBnwC,EAAQ0uC,EAAavjC,OAAO4jC,GAAQC,EAAO/gC,EAAG/N,OAC1C8uC,EAAOC,EAAO,EACdzS,IAGAA,EAAO33B,KAAKmR,MAAsB,EAAhBnR,KAAKG,UAG/BsqC,EAAY,EACZF,EAAa,EAEM,SAAXO,IAIA,GAHA7qB,EAAO,EAAIjgB,KAAKmR,OAAO84B,EAAOG,EAAO,GAAKpqC,KAAKG,UAC/C+f,EAAO,EAAIlgB,KAAKmR,OAAO+4B,EAAOC,EAAO,GAAKnqC,KAAKG,cAC/CoqC,EACiB,KAAjB,CAIA,IAAK/pC,EAAI0f,EAAM1f,EAAI0f,EAAOiqB,EAAM3pC,IAC5B,IAAKD,EAAI0f,EAAM1f,EAAI0f,EAAOmqB,EAAM7pC,IAC5B,GAAIypC,EAAQxpC,EAAIypC,EAAO1pC,GAEnB,YADAuqC,IAMZ,IADAL,EAAY,EACPjqC,EAAI0f,EAAM1f,EAAI0f,EAAOiqB,EAAgB3pC,IAElCwpC,EAAQxpC,EAAIypC,GADhB1pC,EAAI0f,EAAO,KAEPwqB,IAGAT,EAAQxpC,EAAIypC,GADhB1pC,EAAI0f,EAAOmqB,KAEPK,IAGR,GAAIA,EAAY,EACZ,IAAKlqC,EAAI0f,EAAM1f,EAAI0f,EAAOmqB,EAAgB7pC,IAElCypC,GADJxpC,EAAI0f,EAAO,GACK+pB,EAAO1pC,IACnBkqC,IAGAT,GADJxpC,EAAI0f,EAAOiqB,GACKF,EAAO1pC,IACnBkqC,IAGRA,EAAY,GACZK,KAIRA,GAIR,IAAKT,EAAKnqB,EAAMmqB,EAAKnqB,EAAOiqB,EAAME,IAC9B,IAAKC,EAAKrqB,EAAMqqB,EAAKrqB,EAAOmqB,EAAME,IAC9BN,EAAQK,EAAKJ,EAAOK,GAAM,EAGlCI,EAAU,EACVlqC,EAAW,GAAP0f,EAAmB,GAAPiqB,EAAY,GAC5B5pC,GAAY,GAAP0f,EAAmB,GAAPmqB,EAAY,IAAMoB,GAAUH,EAAO,EAAMrrC,KAAKmR,MAAMm6B,GAAWA,GAEhFnwC,IAAUiO,EAAG/N,OAASF,EAAQuvC,IAAYthC,EAAG/N,OAASF,GAC9C,EACR1G,EAAOs2C,cAAcC,kBAAkBxiC,EAAWD,EAASlE,EAAG9D,EAAGC,EAAGrF,EAD5D,KAERkJ,EACQ,EAAIkE,EAAQjR,SAChB+M,EAAI,GAEZ5P,EAAOs2C,cAAcE,iBAAiBhB,EAAMC,EAAMF,GAClDv1C,EAAOs2C,cAAcG,WAAW1iC,EAAW2O,KAtlBpC,CAAA9gB,IAAA,sBAAAzE,MAAA,SAwlBgB4W,EAAWD,GAClC,IAAIlE,EAKAqmC,EAGAthC,EACA7I,EACApF,EAkBA6uC,EACAC,EACAC,EAGAjqB,EACAC,EACAyX,EACA0S,EACAC,EACAC,EAlCA/pC,EAAI,EAoBJ2W,EAAM,EAiBNg0B,EAAK,EACLC,EAAK,EACLK,EAAenlC,OAAOolC,UAC1B,IAAKrnC,EAAI,EAAGA,EAAIkE,EAAQjR,OAAQ+M,IAC5B+E,EAAKb,EAAQlE,GACb8mC,EAAKnrC,KAAK+B,IAAIopC,EAAI/hC,EAAGhO,OACrBgwC,EAAKprC,KAAK+B,IAAIqpC,EAAIhiC,EAAG/N,QAEzB,IAAKgJ,EAAI,EAAGA,EAAIkE,EAAQjR,OAAQ+M,IAC5B+E,EAAKb,EAAQlE,GACbonC,EAAezrC,KAAK8B,IAAI2pC,EAAcN,EAAK/hC,EAAGhO,OAC9CqwC,EAAezrC,KAAK8B,IAAI2pC,EAAcL,EAAKhiC,EAAG/N,QAElD2uC,EAAU,GACVC,EAAO,EACPC,EAAO,EAEP,IAAIyB,EAAqC,GAA7B3rC,KAAKI,IAAIlM,KAAKgV,MAAO,KAAalJ,KAAKC,KAAKsI,EAAQjR,QAChE,IAAK+M,EAAI,EAAGA,EAAIsnC,EAAOtnC,IACf4lC,EAAOkB,EAAKjB,EAAOkB,EACnBnB,IAGAC,IAIR,IAAK7lC,EAAI,EAAGA,EAAI4lC,EAAOC,EAAM7lC,IACzB2lC,EAAQ/2C,KAAK,GACjBy3C,EAA2C,IAAjC1qC,KAAK+B,IAAIkoC,EAAOkB,EAAIjB,EAAOkB,GACrCj0B,EAAMnX,KAAKG,SAAWH,KAAK0B,GAAK,GAAe,IAAV1B,KAAK0B,GACtC1B,KAAKyB,IAAI0V,EAAMnX,KAAK0B,GAAK,KAAO,KAChCyV,EAAM,GACVA,EAAM,EACN9S,EAAIrE,KAAKmR,MAAMnR,KAAKG,SAAWoI,EAAQjR,QAGvCqgC,EAAO33B,KAAK8B,IAAImoC,EAAMC,IACtBvS,EAAO33B,KAAK8B,IAAI61B,EAAO,EAAK33B,KAAKoC,KAAY,GAAPu1B,IAAc33B,KAAKoC,KAAY,GAAPu1B,GAAa,GAAK33B,KAAKG,UAAsCH,KAAKG,SAAUw3B,KAC/H,GAAKA,GAAQsS,GAAQtS,GAAQuS,GACpCvS,IACJ4S,EAAa,EACb,IApF2C,IAAAqB,EAAA,WAqFvCxiC,EAAKb,EAAQlE,IACQ,SAAjBwnC,IAGA,IAFA5rB,EAAOjgB,KAAKmR,OAAO84B,EAAOtS,EAAO,GAAK33B,KAAKG,UAC3C+f,EAAOlgB,KAAKmR,OAAO+4B,EAAOvS,EAAO,GAAK33B,KAAKG,UACtCkqC,EAAKnqB,EAAMmqB,EAAKnqB,EAAOyX,EAAM0S,IAC9B,IAAKC,EAAKrqB,EAAMqqB,EAAKrqB,EAAO0X,EAAM2S,IAC9B,GAAIN,EAAQK,EAAKJ,EAAOK,GAAK,CAEzB,KADAC,EACiB,MAEbA,EAAa,IADb5S,EAEW,GACP,OAIR,YADAkU,IAMZ,IAAKxB,EAAKnqB,EAAMmqB,EAAKnqB,EAAOyX,EAAM0S,IAC9B,IAAKC,EAAKrqB,EAAMqqB,EAAKrqB,EAAO0X,EAAM2S,IAC9BN,EAAQK,EAAKJ,EAAOK,GAAM,EAIlC/pC,EAAI0f,EAAOkrB,EAAKA,GADhBhwC,EAAQw8B,EAAO8T,GACc,GAC7BjrC,EAAI0f,EAAOkrB,EAAKA,EAAKjwC,EAAQ,GAErBiO,EAAGhO,OAAS+vC,EAAKhwC,GAASiO,EAAG/N,QAAU+vC,EAAKjwC,IAC5CA,EAASgwC,EAAKhwC,EAASiO,EAAGhO,MAC1BD,IAAUiO,EAAGhO,MAAQD,EAAQuvC,IAAYthC,EAAGhO,MAAQD,KAGpDA,EAASiwC,EAAKjwC,EAASiO,EAAG/N,OAC1BF,IAAUiO,EAAG/N,OAASF,EAAQuvC,IAAYthC,EAAG/N,OAASF,IAG9D1G,EAAOs2C,cAAcC,kBAAkBxiC,EAAWD,EAASlE,EAAG9D,EAAGC,EAAGrF,EAAOgc,KAC3E9S,EACQ,EAAIkE,EAAQjR,SAChB+M,EAAI,GAEZwnC,IA7CGlU,EAAO,GAAGiU,KA+CK,WAElB,IAAKvB,EAAK,EAAGA,EAAKH,EAAMG,IACpB,IAAKC,EAAK,EAAGA,EAAKL,EAAMK,IACfN,EAAQK,EAAKJ,EAAOK,KACrBlhC,EAAKb,EAAQlE,GAEb9D,EAAI+pC,EAAKa,EAAKA,GADdhwC,EAAQswC,GACmB,GAC3BjrC,EAAI6pC,EAAKe,EAAKA,EAAKjwC,EAAQ,GAEnBiO,EAAGhO,OAAS+vC,EAAKhwC,GAASiO,EAAG/N,QAAU+vC,EAAKjwC,IAC5CA,EAASgwC,EAAKhwC,EAASiO,EAAGhO,MAC1BD,IAAUiO,EAAGhO,MAAQD,EAAQuvC,IAAYthC,EAAGhO,MAAQD,KAGpDA,EAASiwC,EAAKjwC,EAASiO,EAAG/N,OAC1BF,IAAUiO,EAAG/N,OAASF,EAAQuvC,IAAYthC,EAAG/N,OAASF,IAG9D1G,EAAOs2C,cAAcC,kBAAkBxiC,EAAWD,EAASlE,EAAG9D,EAAGC,EAAGrF,EAAOgc,KAC3E9S,EACQ,EAAIkE,EAAQjR,SAChB+M,EAAI,IAIpB5P,EAAOs2C,cAAcE,iBAAiBhB,EAAMC,EAAMF,GAClDv1C,EAAOs2C,cAAcG,WAAW1iC,EAAW,GAE/CsjC,KAxvBO,CAAAz1C,IAAA,iBAAAzE,MAAA,SA2vBW4W,EAAWD,EAASwjC,EAAcj3C,GACpD,IACQi3C,EACA73C,KAAK83C,yBAAyBxjC,EAAWD,IAGrCrU,KAAK+sC,KACL/sC,KAAK+3C,oBAAoBzjC,EAAWD,GAGd,GAAlBA,EAAQjR,OACRpD,KAAKg4C,2BAA2B1jC,EAAWD,GAG3CrU,KAAKi4C,qBAAqB3jC,EAAWD,GAG7CrU,KAAK+sC,MAAQ/sC,KAAK+sC,MAG1B,MAAOnuC,GACH2B,EAAOs2C,cAAcG,WAAW1iC,EAAW,GAG/CtU,KAAKgV,OAAS,KACVhV,KAAKgV,MAAQ,IACbhV,KAAKgV,MAAQ,GACbpU,GAAYZ,KAAKgV,MAAQ,MACzBhV,KAAKgV,MAAQ,OAvxBV,CAAA7S,IAAA,cAAAzE,MAAA,WA0xBPsC,KAAKgV,MAAQ,MA1xBNC,EAAA,GA6xBfA,EAAuB83B,MAAO,EAC9B93B,EAAuBD,MAAQ,EAC/BzU,EAAO0U,uBAAyBA,EA/xBpC,CAgyBG1U,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACTs2C,EADS,oBAAAA,IAAA15C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA62C,GAAA,OAAA15C,OAAA+E,EAAA,EAAA/E,CAAA05C,EAAA,OAAA10C,IAAA,iBAAAzE,MAAA,SAEW4W,EAAWD,EAASuhC,EAAM/e,EAAID,EAAI8e,EAAWwC,EAAaC,EAAS3B,EAAS4B,GAA0C,IAGpIjoC,EACAkP,EAGAnK,EACA7I,EACApF,EAEAoxC,EACAC,EACAr1B,EACAqB,EACAC,EACAg0B,EAhBoGC,EAAgCn5C,UAAA+D,OAAA,SAAA3D,IAAAJ,UAAA,IAAAA,UAAA,IAAnB,EAAGs2C,EAAgBt2C,UAAA+D,OAAA,SAAA3D,IAAAJ,UAAA,IAAAA,UAAA,IAAH,EACjIo5C,EAAQ,GACRC,EAAO,GAGPpsC,EAAI,EA0BR,IAdA2W,EAAM2yB,EAAkB,IAAV9pC,KAAK0B,GAAU,EAE7B6qC,EAAW,EACXloC,EAAIqoC,EACJlsC,EAAI,EACJD,EAAI,EACJgT,EAAI,EACJi5B,EAAO,EACPt4C,KAAK24C,YAAYv1C,OAAS,EAC1Bq1C,EAAMr1C,OAAS,EACfs1C,EAAKt1C,OAAS,EACN,EAER6D,EAAQixC,GADRhjC,EAAKb,EAAQ,IACYlN,OAErB+N,EAAKb,EAAQlE,KACT9D,EAAI,GAAKA,EAAI6I,EAAGhO,MAAQD,EAAQyuC,IAChC+C,EAAM15C,KAAKsN,EAAImqC,GACfkC,EAAK35C,KAAKsgB,GACVhT,EAAI,EACJgT,EAAI,EACJ/S,GAAK4rC,EAAcC,EACnBE,IAEAnjC,EAAKb,EADLlE,EAAIrE,KAAKmR,MAAMnR,KAAKG,SAAWoI,EAAQjR,SAEnCi1C,EAAWD,EAAW,MAG9BG,EAAM,IAAIh4C,EAAOq4C,sBACb9sB,IAAW,GAALzf,EACVksC,EAAIM,IAAM1oC,EACVooC,EAAIlsC,EAAIA,EAAI6I,EAAGhO,MAAQD,EAAQ,GAC/BsxC,EAAIjsC,EAAIA,EAAI4I,EAAG/N,OAASF,EAAQ,GAChCsxC,EAAItxC,MAAQA,EACZsxC,EAAIpgC,MAvBA,EAwBJnY,KAAK24C,YAAY55C,KAAKw5C,GACtBl5B,IACAi5B,EAAOxsC,KAAK+B,IAAIyqC,EAAMjsC,EAAI6I,EAAGhO,MAAQD,GACrCoF,GAAK6I,EAAGhO,MAAQD,EAAQuvC,IACxBrmC,EACQ,EAAIkE,EAAQjR,SAChB+M,EAAI,GAIZ,IAFAlJ,EAAQyuC,EAAY4C,EACpBj5B,GAAK,EACAlP,EAAI,EAAGA,EAAInQ,KAAK24C,YAAYv1C,UAC7Bm1C,EAAMv4C,KAAK24C,YAAYxoC,IACf2b,KACJzM,IACAhT,EAAI,GAGJA,IAAMisC,GAAQG,EAAMp5B,IAAMq5B,EAAKr5B,GAAK,GAAKm3B,IAAYpkC,OAAQsmC,EAAKr5B,GAAK,GAAMm3B,EAEjF+B,EAAIlsC,EAAIksC,EAAIlsC,EAAIpF,EAAQoF,EAAIpF,EAC5BsxC,EAAIjsC,EAAIisC,EAAIjsC,EAAIrF,EAChBsxC,EAAItxC,OAASA,IACT0uC,EAAa,GAAKA,EAAa4C,EAAIjsC,EAAI+H,EAAQkkC,EAAIM,KAAK1xC,OAASoxC,EAAItxC,MAAQ,KAZ5CkJ,IAcrCmU,EAAKi0B,EAAIlsC,EAAIP,KAAKyG,IAAI0Q,GAAOs1B,EAAIjsC,EAAIR,KAAK2G,IAAIwQ,GAC9CsB,EAAKg0B,EAAIlsC,EAAIP,KAAK2G,IAAIwQ,GAAOs1B,EAAIjsC,EAAIR,KAAKyG,IAAI0Q,GAC9Cs1B,EAAIlsC,EAAIiY,EACRi0B,EAAIjsC,EAAIiY,EACRg0B,EAAIpgC,OAAS8K,EACbjjB,KAAK82C,kBAAkBxiC,EAAWD,EAASkkC,EAAIM,IAAKN,EAAIlsC,EAAIuqB,EAAI2hB,EAAIjsC,EAAIuqB,EAAI0hB,EAAItxC,MAAOsxC,EAAIpgC,OAE/FnY,KAAK24C,YAAYv1C,OAAS,EAC1Bq1C,EAAMr1C,OAAS,EACfs1C,EAAKt1C,OAAS,IAvFP,CAAAjB,IAAA,oBAAAzE,MAAA,SAyFc4W,EAAWD,EAASykC,EAAKliB,EAAIC,EAAIkiB,EAAQC,GAC9D,IAAInhC,EACAohC,EACA5hC,EAEJ,IADA4hC,GAAQ,EACHphC,EAAI,EAAGA,EAAIvD,EAAUlR,OAAQyU,IAC1BvD,EAAUuD,GAAGZ,YAAc3C,EAAUuD,GAAGjB,OAASkiC,IACjDzhC,EAAK/C,EAAUuD,GACfohC,GAAQ,GAGXA,IACD5hC,EAAK,IAAI9W,EAAOsY,eAAexE,EAAQykC,GAAMA,IAC1ChgC,WAAWhN,KAAKG,SAAW1L,EAAO0F,cAAcE,YAAa2F,KAAKG,SAAW1L,EAAO0F,cAAcC,aAAc,EAAG4F,KAAKG,SAAWH,KAAK0B,GAAK,EAAI1B,KAAK0B,IAE7J6J,EAAG6hC,sBAAsBtiB,EAAIC,EAAIkiB,EAAQC,GACzC3hC,EAAGJ,YAAa,EACXgiC,GACD3kC,EAAUvV,KAAKsY,KA3GZ,CAAAlV,IAAA,aAAAzE,MAAA,SA6GO4W,GAAoB,IAC9B2kC,EACA9oC,EACAkH,EACA8hC,EACAC,EACA90B,EACAC,EACA80B,EACAC,EACAC,EACAC,EACArgC,EACAy3B,EACA6I,EACAC,EACA5pB,EAhBqB7M,EAAS5jB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAH,EAiB/B,GAAW,GAAP4jB,EACA,IAAK9S,EAAI,EAAGA,EAAImE,EAAUlR,OAAQ+M,KAC9BkH,EAAK/C,EAAUnE,IACR8G,aAEPqN,EAAKjN,EAAGsiC,IAAM7tC,KAAKyG,IAAI0Q,GAAO5L,EAAGuiC,IAAM9tC,KAAK2G,IAAIwQ,GAChDsB,EAAKlN,EAAGsiC,IAAM7tC,KAAK2G,IAAIwQ,GAAO5L,EAAGuiC,IAAM9tC,KAAKyG,IAAI0Q,GAChD5L,EAAGsiC,IAAMr1B,EACTjN,EAAGuiC,IAAMr1B,EACTlN,EAAGwiC,SAAW52B,GAItB,IADAg2B,GAAQ,EACH9oC,EAAI,EAAGA,EAAImE,EAAUlR,OAAQ+M,KAC9BkH,EAAK/C,EAAUnE,IACR8G,aAEPkiC,EAAmB,GAAd9hC,EAAGlQ,SACRiyC,EAAkB,GAAb/hC,EAAGnQ,QACRod,EAAKxY,KAAK+B,IAAI/B,KAAKyB,IAAI6rC,EAAKttC,KAAKyG,IAAI8E,EAAGwiC,SAAWV,EAAKrtC,KAAK2G,IAAI4E,EAAGwiC,UAAW/tC,KAAKyB,IAAI6rC,EAAKttC,KAAKyG,IAAI8E,EAAGwiC,SAAWV,EAAKrtC,KAAK2G,IAAI4E,EAAGwiC,WACrIt1B,EAAKzY,KAAK+B,IAAI/B,KAAKyB,IAAI6rC,EAAKttC,KAAK2G,IAAI4E,EAAGwiC,SAAWV,EAAKrtC,KAAKyG,IAAI8E,EAAGwiC,UAAW/tC,KAAKyB,IAAI6rC,EAAKttC,KAAK2G,IAAI4E,EAAGwiC,SAAWV,EAAKrtC,KAAKyG,IAAI8E,EAAGwiC,WAChIZ,GAQDI,EAAOvtC,KAAK8B,IAAIyrC,EAAMhiC,EAAGsiC,IAAMr1B,GAC/Bg1B,EAAOxtC,KAAK+B,IAAIyrC,EAAMjiC,EAAGsiC,IAAMr1B,GAC/Bi1B,EAAOztC,KAAK8B,IAAI2rC,EAAMliC,EAAGuiC,IAAMr1B,GAC/Bi1B,EAAO1tC,KAAK+B,IAAI2rC,EAAMniC,EAAGuiC,IAAMr1B,KAV/B00B,GAAQ,EACRI,EAAOhiC,EAAGsiC,IAAMr1B,EAChBg1B,EAAOjiC,EAAGsiC,IAAMr1B,EAChBi1B,EAAOliC,EAAGuiC,IAAMr1B,EAChBi1B,EAAOniC,EAAGuiC,IAAMr1B,IASxBpL,EAAImgC,EAAOD,EACXzI,EAAI4I,EAAOD,EACX,IAAIO,EAAOv5C,EAAO0F,cAAcE,YAAc,IAC1C4zC,EAAOx5C,EAAO0F,cAAcC,aAchC,IAZI4pB,EADAiqB,EAAOnJ,EAAIkJ,EAAO3gC,EACd4gC,EAAOnJ,EAKPkJ,EAAO3gC,EAIfsgC,EAAoD,IAA5Cl5C,EAAO0F,cAAcE,YAAcgT,EAAI2W,GAC/C4pB,EAAqD,IAA7Cn5C,EAAO0F,cAAcC,aAAe0qC,EAAI9gB,GAE3C3f,EAAI,EAAGA,EAAImE,EAAUlR,OAAQ+M,KAC9BkH,EAAK/C,EAAUnE,IACR8G,aAEPI,EAAGsiC,KAAON,EACVhiC,EAAGuiC,KAAOL,EACVliC,EAAG2iC,SAAWlqB,EACdzY,EAAGsiC,KAAO7pB,EACVzY,EAAGuiC,KAAO9pB,EACVzY,EAAGsiC,KAAOF,EACVpiC,EAAGuiC,KAAOF,KA5LP,CAAAv3C,IAAA,mBAAAzE,MAAA,SA+Laq4C,EAAMC,EAAMF,GAChC,IAAIxpC,EACAD,EACAxF,EAAM,IAAIvG,EAAQwG,WAAWivC,EAAMC,GAAM,EAAM,GACnD,IAAK1pC,EAAI,EAAGA,EAAI0pC,EAAM1pC,IAClB,IAAKD,EAAI,EAAGA,EAAI0pC,EAAM1pC,IAClBxF,EAAIigB,WAAWza,EAAGC,EAA4B,GAAzBwpC,EAAQxpC,EAAIypC,EAAO1pC,GAAU,WAAuC,GAAzBypC,EAAQxpC,EAAIypC,EAAO1pC,GAAU,WAAa,YAGlHrM,KAAKi6C,SAASlmC,WAAalN,EAC3B7G,KAAKi6C,SAAS5tC,EAAI,EAClBrM,KAAKi6C,SAAS3tC,EAAI,IAClBtM,KAAKi6C,SAASC,SAAW,EAEzBl6C,KAAKi6C,SAAShiC,WAAY,EAC1BjY,KAAKi6C,SAAS/yC,MAAe,EAAP6uC,EACtB/1C,KAAKi6C,SAAS9yC,OAAgB,EAAP6uC,MA/MhBa,EAAA,GAmNfA,EAAcoD,SAAW,IAAI35C,EAAQsT,OACrCijC,EAAc8B,YAAc,GAC5Bp4C,EAAOs2C,cAAgBA,EArN3B,CAsNGt2C,IAAWA,EAAS,MAMpBA,IAAWA,EAAS,KADZq4C,qBAHQ,SAAAA,IAAAz7C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA44C,IAMnB,SAAWr4C,GAAQ,IACTsY,EADS,WAEX,SAAAA,EAAYshC,EAAcC,GAASj9C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAA6Y,GAC/B7Y,KAAKwX,OAAS,EACdxX,KAAKuX,OAAS,EACdvX,KAAKyL,GAAK,EACVzL,KAAK2L,GAAK,EACV3L,KAAKiX,YAAa,EAClBjX,KAAK25C,IAAM,IACX35C,KAAK45C,IAAM,IACX55C,KAAKg6C,QAAU,EACfh6C,KAAK65C,QAAU,EACf75C,KAAKq6C,KAAO,EACZr6C,KAAKs6C,KAAO,EACZt6C,KAAKu6C,SAAW,EAChBv6C,KAAKw6C,SAAW,EAChBx6C,KAAK6W,aAAe,IACpB7W,KAAKy6C,YAAc,GACnBz6C,KAAK06C,IAAMP,EACXn6C,KAAK4W,MAAQwjC,EAnBN,OAAAj9C,OAAA+E,EAAA,EAAA/E,CAAA0b,EAAA,EAAA1W,IAAA,qBAAAzE,MAAA,SAqBQy8C,GACfn6C,KAAK06C,IAAMP,IAtBJ,CAAAh4C,IAAA,OAAAzE,MAAA,WAsCP,IAAIi9C,EAA+B,IAAzB,EAAI36C,KAAK6W,cAAsB,GAGzC7W,KAAKyL,KAAOzL,KAAK25C,IAAM35C,KAAKyL,IAAMkvC,EAClC36C,KAAK2L,KAAO3L,KAAK45C,IAAM55C,KAAK2L,IAAMgvC,EAClC36C,KAAKuX,SAAWvX,KAAK65C,QAAU75C,KAAKuX,QAAUojC,EAC9C36C,KAAKwX,SAAWxX,KAAKg6C,QAAUh6C,KAAKwX,QAAUmjC,EAC9C36C,KAAK06C,IAAIruC,EAAIrM,KAAKyL,GAClBzL,KAAK06C,IAAIpuC,EAAItM,KAAK2L,GAClB3L,KAAK06C,IAAIviC,MAAQnY,KAAKuX,OACtBvX,KAAK06C,IAAIzzC,MAAQjH,KAAKwX,OACtBxX,KAAK06C,IAAItzC,SAjDF,CAAAjF,IAAA,QAAAzE,MAAA,WAoDP,OAAOsC,KAAK06C,IAAIxzC,MAAQlH,KAAKg6C,UApDtB,CAAA73C,IAAA,SAAAzE,MAAA,WAuDP,OAAOsC,KAAK06C,IAAIvzC,OAASnH,KAAKg6C,UAvDvB,CAAA73C,IAAA,aAAAzE,MAAA,SAyDAk5B,EAAIC,EAAIkiB,EAAQC,GACvBh5C,KAAKyL,GAAKzL,KAAK25C,IAAM/iB,EACrB52B,KAAK2L,GAAK3L,KAAK45C,IAAM/iB,EACrB72B,KAAKwX,OAASxX,KAAKg6C,QAAUjB,EAC7B/4C,KAAKuX,OAASvX,KAAK65C,QAAUb,IA7DtB,CAAA72C,IAAA,wBAAAzE,MAAA,SA+DWk5B,EAAIC,EAAIkiB,EAAQC,GAClCh5C,KAAK25C,IAAM/iB,EACX52B,KAAK45C,IAAM/iB,EACX72B,KAAKg6C,QAAUjB,EACf/4C,KAAK65C,QAAUb,IAnER,CAAA72C,IAAA,qBAAAzE,MAAA,WAsEP,IAAIk9C,EAAO56C,KAAKyL,GAAKzL,KAAK25C,IACtBkB,EAAO76C,KAAK2L,GAAK3L,KAAK45C,IACtBkB,EAAgBhvC,KAAKC,KAAK6uC,EAAOA,EAAOC,EAAOA,GAC/CE,EAAc/6C,KAAKy6C,aAAgBK,EACvCF,EAAOA,EAAOE,EAAgBC,EAC9BF,EAAOA,EAAOC,EAAgBC,EAC9B/6C,KAAKq6C,MAAQO,GAAQ,EACrB56C,KAAKs6C,MAAQO,GAAQ,EACrB76C,KAAKu6C,UAAYv6C,KAAKy6C,cAAiBz6C,KAAKwX,OAASxX,KAAKg6C,SAC1Dh6C,KAAKw6C,UAAYx6C,KAAKy6C,cAAiBz6C,KAAKuX,OAASvX,KAAK65C,aA/EnDhhC,EAAA,GAkFftY,EAAOsY,eAAiBA,EAlF5B,CAmFGtY,IAAWA,EAAS,MAmBpBA,IAAWA,EAAS,KADZ6c,YAdH,SAAAA,IAAejgB,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAod,GACXpd,KAAKqM,EAAI,EACTrM,KAAKsM,EAAI,EACTtM,KAAKqW,KAAO,EACZrW,KAAKsW,KAAO,EACZtW,KAAK2O,EAAI,EACT3O,KAAK8e,EAAI,EACT9e,KAAK+N,EAAI,EACT/N,KAAKgf,KAAO,EACZhf,KAAKiH,MAAQ,EACbjH,KAAK6e,MAAQ,EACb7e,KAAK2e,SAAW,GAM5B,SAAWpe,GAAQ,IAETy6C,EAFS,WAGX,SAAAA,IAAe79C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAg7C,GAHJ,OAAA79C,OAAA+E,EAAA,EAAA/E,CAAA69C,EAAA,EAAA74C,IAAA,OAAAzE,MAAA,SAKNyS,QALM6qC,EAAA,GAQfz6C,EAAOy6C,eAAiBA,EAR5B,CASGz6C,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IAET06C,EAFS,WAGX,SAAAA,IAAe99C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAi7C,GAHJ,OAAA99C,OAAA+E,EAAA,EAAA/E,CAAA89C,EAAA,EAAA94C,IAAA,kBAAAzE,MAAA,SAKKqvC,GACZnoC,QAAQC,IAAI,qBANL,CAAA1C,IAAA,oBAAAzE,MAAA,SAQOqvC,GACdnoC,QAAQC,IAAI,uBATL,CAAA1C,IAAA,gBAAAzE,MAAA,WAYPkH,QAAQC,IAAI,qBAZLo2C,EAAA,GAef16C,EAAO06C,gBAAkBA,EAf7B,CAgBG16C,IAAWA,EAAS,MASpBA,IAAWA,EAAS,KADZ26C,YAJH,SAAAA,IAAe/9C,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAk7C,GACXl7C,KAAKm7C,SAAW,CAAEpnC,WAAY,OAM1C,SAAWxT,GAAQ,IACTiF,EADS,WAEX,SAAAA,IAAerI,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAwF,GAGXxF,KAAKo7C,kBAAmB,EACxBp7C,KAAKq7C,mBAAoB,EACzBr7C,KAAKs7C,YAAa,EAClBt7C,KAAKu7C,kBAAoB,EACzBv7C,KAAKw7C,kBAAoB,EACzBx7C,KAAKy7C,aAAc,EACnBz7C,KAAK07C,UAAY,EACjB17C,KAAK27C,UAAY,EACjB37C,KAAK2M,MAAQ,EACb3M,KAAK4M,MAAQ,EACb5M,KAAK47C,eAAiB,EACtB57C,KAAK67C,eAAiB,EACtB77C,KAAK87C,eAAiB,EACtB97C,KAAK+7C,eAAiB,EACtB/7C,KAAKg8C,WAAa,EAClBh8C,KAAKi8C,WAAa,EApBX,OAAA9+C,OAAA+E,EAAA,EAAA/E,CAAAqI,EAAA,EAAArD,IAAA,QAAAzE,MAAA,SAsBLw+C,EAASC,EAASC,EAAQpL,EAAQC,GACpCjxC,KAAK07C,UAAYQ,EACjBl8C,KAAK27C,UAAYQ,EACjBn8C,KAAK47C,eAAiB,EACtB57C,KAAK67C,eAAiB,EACtB77C,KAAK2zC,OAAS3C,EACdhxC,KAAK4zC,QAAU3C,EACfjxC,KAAK2M,MAAQuvC,EACbl8C,KAAK4M,MAAQuvC,EACbn8C,KAAKijB,IAAMm5B,EACXp8C,KAAK87C,eAAiB,EACtB97C,KAAK+7C,eAAiB,EACtB/7C,KAAKg8C,WAAa,EAClBh8C,KAAKi8C,WAAa,EAClBj8C,KAAKq8C,YAAc,EACnBr8C,KAAKs8C,WAAY,EACjBt8C,KAAKy7C,aAAc,IAtCZ,CAAAt5C,IAAA,UAAAzE,MAAA,SAyCH6+C,GACJ,KAAOA,EAAMzwC,KAAK0B,IACd+uC,GAAiB,EAAVzwC,KAAK0B,GAChB,KAAO+uC,GAAOzwC,KAAK0B,IACf+uC,GAAiB,EAAVzwC,KAAK0B,GAChB,OAAO+uC,IA9CA,CAAAp6C,IAAA,cAAAzE,MAAA,SAgDC+N,EAAIE,GACZ,IAAI4c,EAAIi0B,EAAIC,EAAIC,EAAI/tC,EAAGguC,EACvB38C,KAAKg8C,WAAavwC,EAClBzL,KAAKi8C,WAAatwC,EAClB3L,KAAK48C,OAAS58C,KAAK87C,eAAiB97C,KAAK2M,MACzC3M,KAAK68C,OAAS78C,KAAK+7C,eAAiB/7C,KAAK4M,MACzC5M,KAAK88C,OAAS98C,KAAKg8C,WAAah8C,KAAK2M,MACrC3M,KAAK+8C,OAAS/8C,KAAKi8C,WAAaj8C,KAAK4M,MACrC+vC,EAAK7wC,KAAKC,KAAK/L,KAAK48C,OAAS58C,KAAK48C,OAAS58C,KAAK68C,OAAS78C,KAAK68C,QAC9Dt0B,EAAKzc,KAAKuB,MAAMrN,KAAK68C,OAAQ78C,KAAK48C,QAClCJ,EAAK1wC,KAAKuB,MAAMrN,KAAK+8C,OAAQ/8C,KAAK88C,QAClCL,EAAKl0B,EAAKvoB,KAAKijB,IACfy5B,EAAKF,EAAKj0B,EACV5Z,EAAI7C,KAAK8B,IAAI,EAAK+uC,GAA2E,GAArE7wC,KAAKC,KAAK/L,KAAK2zC,OAAS3zC,KAAK2zC,OAAS3zC,KAAK4zC,QAAU5zC,KAAK4zC,WAClFjlC,EAAI,EAAI7C,KAAK2G,KAAK,EAAM9D,GAAK7C,KAAK0B,GAAK,IACnCxN,KAAKs7C,aACL3sC,EAAI,GACR+tC,EAAK18C,KAAKg9C,QAAQN,GAClB18C,KAAKijB,IAAMjjB,KAAKijB,IAAMy5B,EAAK/tC,GACtB3O,KAAKs7C,YAAct7C,KAAKu7C,kBAAoBv7C,KAAKw7C,oBAClDx7C,KAAKijB,IAAMjjB,KAAKg9C,QAAQh9C,KAAKijB,KACzBjjB,KAAKijB,IAAMjjB,KAAKu7C,oBAChBv7C,KAAKijB,IAAMjjB,KAAKu7C,mBAChBv7C,KAAKijB,IAAMjjB,KAAKw7C,oBAChBx7C,KAAKijB,IAAMjjB,KAAKw7C,oBAExBx7C,KAAK2M,MAAQ3M,KAAKg8C,WAAaW,EAAK7wC,KAAKyG,IAAIvS,KAAKijB,IAAMw5B,GACxDz8C,KAAK4M,MAAQ5M,KAAKi8C,WAAaU,EAAK7wC,KAAK2G,IAAIzS,KAAKijB,IAAMw5B,GACxDz8C,KAAKijB,IAAMjjB,KAAKg9C,QAAQh9C,KAAKijB,KAC7BjjB,KAAK87C,eAAiB97C,KAAKg8C,WAC3Bh8C,KAAK+7C,eAAiB/7C,KAAKi8C,aA9EpB,CAAA95C,IAAA,SAAAzE,MAAA,WAiFFsC,KAAKy7C,cAELz7C,KAAKs8C,WACFxwC,KAAKC,KAAK/L,KAAK47C,eAAiB57C,KAAK47C,eAAiB57C,KAAK67C,eAAiB77C,KAAK67C,gBAAkB,KACnG77C,KAAKi9C,YAAYj9C,KAAKg8C,WAAah8C,KAAK47C,eAAgB57C,KAAKi8C,WAAaj8C,KAAK67C,gBAC/E77C,KAAK47C,gBAAkB,GACvB57C,KAAK67C,gBAAkB,IAG/B77C,KAAKk9C,UAAW,EACZl9C,KAAKo7C,kBAAgC,GAAZp7C,KAAKijB,MAC9BjjB,KAAKijB,KAAO,IACRnX,KAAKyB,IAAIvN,KAAKijB,KAAO,OACrBjjB,KAAKijB,IAAM,GACfjjB,KAAKk9C,UAAW,GAEhBl9C,KAAKq7C,oBAAsBr7C,KAAKs8C,YAC5Bt8C,KAAK2M,OAAS3M,KAAK07C,YACnB17C,KAAK2M,MAAQ3M,KAAK2M,MAAwC,IAA/B3M,KAAK07C,UAAY17C,KAAK2M,OAC7Cb,KAAKyB,IAAIvN,KAAK2M,MAAQ3M,KAAK07C,WAAa,KACxC17C,KAAK2M,MAAQ3M,KAAK07C,WACtB17C,KAAKk9C,UAAW,GAEhBl9C,KAAK4M,OAAS5M,KAAK27C,YACnB37C,KAAK4M,MAAQ5M,KAAK4M,MAAwC,IAA/B5M,KAAK27C,UAAY37C,KAAK4M,OAC7Cd,KAAKyB,IAAIvN,KAAK4M,MAAQ5M,KAAK27C,WAAa,KACxC37C,KAAK4M,MAAQ5M,KAAK27C,WACtB37C,KAAKk9C,UAAW,OA5GjB,CAAA/6C,IAAA,OAAAzE,MAAA,SAgHN+N,EAAIE,EAAIwxC,EAAWC,GAEpB,GADAp9C,KAAKs7C,WAAa8B,EACbD,EAAL,CAUA,IAAKn9C,KAAKs8C,UAIN,OAHAt8C,KAAK87C,eAAiBrwC,EACtBzL,KAAK+7C,eAAiBpwC,OACtB3L,KAAKs8C,WAAY,GAGrBt8C,KAAKq8C,aAAe,IAAI39C,MAAQ0M,UAChCpL,KAAK47C,eAAiBnwC,EAAKzL,KAAK87C,eAChC97C,KAAK67C,eAAiBlwC,EAAK3L,KAAK+7C,eAChC/7C,KAAKi9C,YAAYxxC,EAAIE,QAlBb3L,KAAKs8C,YACLt8C,KAAKs8C,WAAY,EACbt8C,KAAKq8C,cAAgB,IAAI39C,MAAQ0M,YACjCpL,KAAK47C,eAAiB,EACtB57C,KAAK67C,eAAiB,QAvH3Br2C,EAAA,GAwIfjF,EAAOiF,mBAAqBA,EAxIhC,CAyIGjF,IAAWA,EAAS,KAEvB,SAAWA,GAAQ,IACT8K,EADS,oBAAAA,IAAAlO,OAAAwD,EAAA,EAAAxD,CAAA6C,KAAAqL,GAAA,OAAAlO,OAAA+E,EAAA,EAAA/E,CAAAkO,EAAA,OAAAlJ,IAAA,aAAAzE,MAAA,SAEO2hB,EAAGtR,EAAG0Y,EAAGsO,GACvB,OAAOtO,EAAIpH,EAAI0V,EAAIhnB,IAHZ,CAAA5L,IAAA,aAAAzE,MAAA,SASO2hB,EAAGtR,EAAG0Y,EAAGsO,GACvB,OAAQtO,EAAI3a,KAAKyG,IAAI8M,EAAI0V,EAAI/0B,KAAKq9C,OAAS52B,EAAI1Y,IAVxC,CAAA5L,IAAA,cAAAzE,MAAA,SAYQ2hB,EAAGtR,EAAG0Y,EAAGsO,GACxB,OAAOtO,EAAI3a,KAAK2G,IAAI4M,EAAI0V,EAAI/0B,KAAKq9C,OAAStvC,IAbnC,CAAA5L,IAAA,gBAAAzE,MAAA,SAeU2hB,EAAGtR,EAAG0Y,EAAGsO,GAC1B,OAAQtO,EAAI,GAAK3a,KAAKyG,IAAIzG,KAAK0B,GAAK6R,EAAI0V,GAAK,GAAKhnB,IAhB3C,CAAA5L,IAAA,cAAAzE,MAAA,SAsBQ2hB,EAAGtR,EAAG0Y,EAAGsO,GACxB,OAAOtO,GAAKpH,GAAK0V,GAAK1V,EAAIA,EAAIA,EAAIA,EAAItR,IAvB/B,CAAA5L,IAAA,eAAAzE,MAAA,SAyBS2hB,EAAGtR,EAAG0Y,EAAGsO,GACzB,OAAOtO,IAAMpH,EAAIA,EAAI0V,EAAI,GAAK1V,EAAIA,EAAIA,EAAIA,EAAI,GAAKtR,IA1B5C,CAAA5L,IAAA,iBAAAzE,MAAA,SA4BW2hB,EAAGtR,EAAG0Y,EAAGsO,GAC3B,OAAK1V,GAAK0V,EAAI,GAAK,EACRtO,EAAI,EAAIpH,EAAIA,EAAIA,EAAIA,EAAIA,EAAItR,EAChC0Y,EAAI,IAAMpH,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKtR,IA/BzC,CAAA5L,IAAA,cAAAzE,MAAA,SAqCQ2hB,EAAGtR,EAAG0Y,EAAGsO,GACxB,OAAOtO,GAAKpH,GAAK0V,GAAK1V,EAAIA,EAAIA,EAAItR,IAtC3B,CAAA5L,IAAA,eAAAzE,MAAA,SAwCS2hB,EAAGtR,EAAG0Y,EAAGsO,GACzB,OAAQtO,IAAMpH,EAAIA,EAAI0V,EAAI,GAAK1V,EAAIA,EAAIA,EAAI,GAAKtR,IAzCzC,CAAA5L,IAAA,iBAAAzE,MAAA,SA2CW2hB,EAAGtR,EAAG0Y,EAAGsO,GAC3B,OAAK1V,GAAK0V,EAAI,GAAK,EACRtO,EAAI,EAAIpH,EAAIA,EAAIA,EAAIA,EAAItR,GAC3B0Y,EAAI,IAAMpH,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKtR,IA9CtC,CAAA5L,IAAA,aAAAzE,MAAA,SAoDO2hB,EAAGtR,EAAG0Y,EAAGsO,GACvB,OAAOtO,GAAKpH,GAAK0V,GAAK1V,EAAItR,IArDnB,CAAA5L,IAAA,cAAAzE,MAAA,SAuDQ2hB,EAAGtR,EAAG0Y,EAAGsO,GACxB,OAAQtO,GAAKpH,GAAK0V,IAAM1V,EAAI,GAAKtR,IAxD1B,CAAA5L,IAAA,gBAAAzE,MAAA,SA0DU2hB,EAAGtR,EAAG0Y,EAAGsO,GAC1B,OAAK1V,GAAK0V,EAAI,GAAK,EACRtO,EAAI,EAAIpH,EAAIA,EAAItR,GACnB0Y,EAAI,KAAQpH,GAAMA,EAAI,GAAK,GAAKtR,IA7DjC,CAAA5L,IAAA,aAAAzE,MAAA,SAmEO2hB,EAAGtR,EAAG0Y,EAAGsO,GACvB,OAAa,GAAL1V,EAAUtR,EAAI0Y,EAAI3a,KAAKI,IAAI,EAAG,IAAMmT,EAAI0V,EAAI,IAAMhnB,IApEnD,CAAA5L,IAAA,cAAAzE,MAAA,SAsEQ2hB,EAAGtR,EAAG0Y,EAAGsO,GACxB,OAAQ1V,GAAK0V,EAAKhnB,EAAI0Y,EAAIA,GAAiC,EAA3B3a,KAAKI,IAAI,GAAI,GAAKmT,EAAI0V,IAAUhnB,IAvEzD,CAAA5L,IAAA,gBAAAzE,MAAA,SAyEU2hB,EAAGtR,EAAG0Y,EAAGsO,GAC1B,OAAS,GAAL1V,EACOtR,EACPsR,GAAK0V,EACEhnB,EAAI0Y,GACVpH,GAAK0V,EAAI,GAAK,EACRtO,EAAI,EAAI3a,KAAKI,IAAI,EAAG,IAAMmT,EAAI,IAAMtR,EACxC0Y,EAAI,GAA+B,EAAzB3a,KAAKI,IAAI,GAAI,KAAOmT,IAAUtR,IAhFxC,CAAA5L,IAAA,gBAAAzE,MAAA,SAsFU2hB,EAAGtR,EAAG0Y,EAAGsO,GAAiC,IACvDjF,EADyBhxB,EAA8BO,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,QAA1BI,EAAW8e,EAAelf,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,QAAXI,EAEhD,OAAS,GAAL4f,EACOtR,EACK,IAAXsR,GAAK0V,GACChnB,EAAI0Y,GACVlI,IACDA,EAAQ,GAAJwW,IACHj2B,GAAKA,EAAIgN,KAAKyB,IAAIkZ,IACnB3nB,EAAI2nB,EACJqJ,EAAIvR,EAAI,GAGRuR,EAAIvR,EAAIve,KAAKs9C,MAAQxxC,KAAK6oB,KAAKlO,EAAI3nB,IAC9BA,EAAIgN,KAAKI,IAAI,EAAG,IAAMmT,GAAK,IAAMvT,KAAK2G,KAAK4M,EAAI0V,EAAIjF,GAAK9vB,KAAKs9C,MAAQ/+B,GAAMxQ,KApG7E,CAAA5L,IAAA,iBAAAzE,MAAA,SAsGW2hB,EAAGtR,EAAG0Y,EAAGsO,GAAiC,IACxDjF,EAD0BhxB,EAA8BO,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,QAA1BI,EAAW8e,EAAelf,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,QAAXI,EAEjD,OAAS,GAAL4f,EACOtR,EACK,IAAXsR,GAAK0V,GACChnB,EAAI0Y,GACVlI,IACDA,EAAQ,GAAJwW,IACHj2B,GAAKA,EAAIgN,KAAKyB,IAAIkZ,IACnB3nB,EAAI2nB,EACJqJ,EAAIvR,EAAI,GAGRuR,EAAIvR,EAAIve,KAAKs9C,MAAQxxC,KAAK6oB,KAAKlO,EAAI3nB,GAC/BA,EAAIgN,KAAKI,IAAI,GAAI,GAAKmT,GAAKvT,KAAK2G,KAAK4M,EAAI0V,EAAIjF,GAAK9vB,KAAKs9C,MAAQ/+B,GAAKkI,EAAI1Y,KApHzE,CAAA5L,IAAA,mBAAAzE,MAAA,SAsHa2hB,EAAGtR,EAAG0Y,EAAGsO,GAAiC,IAC1DjF,EAD4BhxB,EAA8BO,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,QAA1BI,EAAW8e,EAAelf,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,QAAXI,EAEnD,OAAS,GAAL4f,EACOtR,EACS,IAAfsR,GAAK0V,EAAI,GACHhnB,EAAI0Y,GACVlI,IACDA,EAAIwW,GAAK,GAAK,OACbj2B,GAAKA,EAAIgN,KAAKyB,IAAIkZ,IACnB3nB,EAAI2nB,EACJqJ,EAAIvR,EAAI,GAGRuR,EAAIvR,EAAIve,KAAKs9C,MAAQxxC,KAAK6oB,KAAKlO,EAAI3nB,GACnCugB,EAAI,EACUvgB,EAAIgN,KAAKI,IAAI,EAAG,IAAMmT,GAAK,IAAMvT,KAAK2G,KAAK4M,EAAI0V,EAAIjF,GAAK9vB,KAAKs9C,MAAQ/+B,IAA3E,GAAiFxQ,EACtFjP,EAAIgN,KAAKI,IAAI,GAAI,IAAMmT,GAAK,IAAMvT,KAAK2G,KAAK4M,EAAI0V,EAAIjF,GAAK9vB,KAAKs9C,MAAQ/+B,GAAK,GAAKkI,EAAI1Y,KAtIpF,CAAA5L,IAAA,iBAAAzE,MAAA,SA4IW2hB,EAAGtR,EAAG0Y,EAAGsO,GAC3B,OAAQtO,GAAK3a,KAAKC,KAAK,GAAKsT,GAAK0V,GAAK1V,GAAK,GAAKtR,IA7IzC,CAAA5L,IAAA,kBAAAzE,MAAA,SA+IY2hB,EAAGtR,EAAG0Y,EAAGsO,GAC5B,OAAOtO,EAAI3a,KAAKC,KAAK,GAAKsT,EAAIA,EAAI0V,EAAI,GAAK1V,GAAKtR,IAhJzC,CAAA5L,IAAA,oBAAAzE,MAAA,SAkJc2hB,EAAGtR,EAAG0Y,EAAGsO,GAC9B,OAAK1V,GAAK0V,EAAI,GAAK,GACPtO,EAAI,GAAK3a,KAAKC,KAAK,EAAIsT,EAAIA,GAAK,GAAKtR,EAC1C0Y,EAAI,GAAK3a,KAAKC,KAAK,GAAKsT,GAAK,GAAKA,GAAK,GAAKtR,IArJ5C,CAAA5L,IAAA,aAAAzE,MAAA,SA2JO2hB,EAAGtR,EAAG0Y,EAAGsO,GAAgB,IAAbjF,EAAazwB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAT,QAC9B,OAAOonB,GAAKpH,GAAK0V,GAAK1V,IAAMyQ,EAAI,GAAKzQ,EAAIyQ,GAAK/hB,IA5JvC,CAAA5L,IAAA,cAAAzE,MAAA,SA8JQ2hB,EAAGtR,EAAG0Y,EAAGsO,GAAgB,IAAbjF,EAAazwB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAT,QAC/B,OAAOonB,IAAMpH,EAAIA,EAAI0V,EAAI,GAAK1V,IAAMyQ,EAAI,GAAKzQ,EAAIyQ,GAAK,GAAK/hB,IA/JpD,CAAA5L,IAAA,gBAAAzE,MAAA,SAiKU2hB,EAAGtR,EAAG0Y,EAAGsO,GAAgB,IAAbjF,EAAazwB,UAAA+D,OAAA,QAAA3D,IAAAJ,UAAA,GAAAA,UAAA,GAAT,QACjC,OAAKggB,GAAK0V,EAAI,GAAK,EACRtO,EAAI,GAAKpH,EAAIA,IAAuB,GAAhByQ,GAAM,QAAezQ,EAAIyQ,IAAM/hB,EACvD0Y,EAAI,IAAMpH,GAAK,GAAKA,IAAuB,GAAhByQ,GAAM,QAAezQ,EAAIyQ,GAAK,GAAK/hB,IApK9D,CAAA5L,IAAA,eAAAzE,MAAA,SA0KS2hB,EAAGtR,EAAG0Y,EAAGsO,GACzB,OAAOtO,EAAIzmB,KAAKu9C,cAAcxoB,EAAI1V,EAAG,EAAGoH,EAAGsO,GAAKhnB,IA3KzC,CAAA5L,IAAA,gBAAAzE,MAAA,SA6KU2hB,EAAGtR,EAAG0Y,EAAGsO,GAC1B,OAAK1V,GAAK0V,GAAM,EAAI,KACTtO,GAAK,OAASpH,EAAIA,GAAKtR,EAEzBsR,EAAK,EAAI,KACPoH,GAAK,QAAUpH,GAAM,IAAM,MAASA,EAAI,KAAOtR,EAEjDsR,EAAK,IAAM,KACToH,GAAK,QAAUpH,GAAM,KAAO,MAASA,EAAI,OAAStR,EAGlD0Y,GAAK,QAAUpH,GAAM,MAAQ,MAASA,EAAI,SAAWtR,IAxLzD,CAAA5L,IAAA,kBAAAzE,MAAA,SA2LY2hB,EAAGtR,EAAG0Y,EAAGsO,GAC5B,OAAI1V,EAAI0V,EAAI,EACmC,GAApC/0B,KAAKw9C,aAAiB,EAAJn+B,EAAO,EAAGoH,EAAGsO,GAAUhnB,EAEA,GAAzC/N,KAAKu9C,cAAkB,EAAJl+B,EAAQ0V,EAAG,EAAGtO,EAAGsO,GAAc,GAAJtO,EAAS1Y,IA/L3D,CAAA5L,IAAA,cAAAzE,MAAA,SAqMQ2hB,EAAGtR,EAAG0Y,EAAGsO,GACxB,OAAOtO,GAAKpH,GAAK0V,GAAK1V,EAAIA,EAAItR,IAtMvB,CAAA5L,IAAA,eAAAzE,MAAA,SAwMS2hB,EAAGtR,EAAG0Y,EAAGsO,GACzB,OAAOtO,IAAMpH,EAAIA,EAAI0V,EAAI,GAAK1V,EAAIA,EAAI,GAAKtR,IAzMpC,CAAA5L,IAAA,iBAAAzE,MAAA,SA2MW2hB,EAAGtR,EAAG0Y,EAAGsO,GAC3B,OAAK1V,GAAK0V,EAAI,GAAK,EACRtO,EAAI,EAAIpH,EAAIA,EAAIA,EAAItR,EACxB0Y,EAAI,IAAMpH,GAAK,GAAKA,EAAIA,EAAI,GAAKtR,MA9MjC1C,EAAA,GAiNfA,EAAOiyC,MAAkB,EAAVxxC,KAAK0B,GACpBnC,EAAOgyC,MAAQvxC,KAAK0B,GAAK,EAWzBnC,EAAOoyC,OAASpyC,EAAOqyC,WACvBryC,EAAOsyC,KAAOtyC,EAAOqyC,WACrBn9C,EAAO8K,OAASA,EA/NpB,CAgOG9K,IAAWA,EAAS,8LC/8RR,SAASq9C,EAAQC,GAAO,IAAAC,EACbC,oBAAS,GADIC,EAAA7gD,OAAA8gD,EAAA,EAAA9gD,CAAA2gD,EAAA,GAC9BI,EAD8BF,EAAA,GACxBG,EADwBH,EAAA,GAE/BI,EAAeC,qBAAWC,KAFKC,EAGCR,oBAAS,GAHVS,EAAArhD,OAAA8gD,EAAA,EAAA9gD,CAAAohD,EAAA,GAG9BE,EAH8BD,EAAA,GAGjBE,EAHiBF,EAAA,GAQrC,SAASG,EAAcC,GACrBT,GAAQ,GACM,YAAVS,EACEf,EAAMgB,eACRhB,EAAMgB,eACNhB,EAAMM,SAAQ,KAIhBO,GAAe,GACfI,WAAW,WACTJ,GAAe,IACd,MAYP,OA5BAK,oBAAU,WACRZ,EAAQN,EAAMK,OACb,CAACL,EAAMK,OA2BRc,EAAAlgD,EAAA4U,cAAAsrC,EAAAlgD,EAAAmgD,SAAA,KACED,EAAAlgD,EAAA4U,cAAA,OAAKwrC,UAAU,aAAaz/B,MAAO,CAAE0/B,QAASjB,EAAO,QAAU,QAAUkB,QAAS,WAChFvB,EAAMM,SAAQ,GACdW,WAAW,WACTjB,EAAMM,SAAQ,IACb,QAELa,EAAAlgD,EAAA4U,cAAA,OAAK+L,MAAO,CACVvY,MAAO,OAEPm4C,gBAAiB,OACjBp5B,SAAU,QACVq5B,OAAQ,GACR/lB,OAAQ2kB,EAAO,GAAK,IACpBqB,SAAmC,OAAzBnB,EAAaoB,QAAmB,GAAK,GAC/CC,WAAY,IACZC,WAAY,gBAEZV,EAAAlgD,EAAA4U,cAAA,OAAKwrC,UAAU,kBAAkBE,QAAS,kBAAMT,EAAa,aAC3DK,EAAAlgD,EAAA4U,cAAA,OAAKwrC,UAAU,eACbF,EAAAlgD,EAAA4U,cAAA,OAAK0F,IAAKumC,OAEZX,EAAAlgD,EAAA4U,cAAA,QAAM+L,MAAO,CAAEggC,WAAqC,OAAzBrB,EAAaoB,QAAmB,GAAK,OAAQI,WAAqC,OAAzBxB,EAAaoB,QAAmB,qBAAuB,uBAGpH,QAAnB3B,EAAMgC,SACFb,EAAAlgD,EAAA4U,cAACosC,EAAA,EAAD,CAAQC,KAAK,4BACbf,EAAAlgD,EAAA4U,cAACosC,EAAA,EAAD,CAAQC,KAAK,+BAIvBf,EAAAlgD,EAAA4U,cAAA,OAAKwrC,UAAU,kBAAkBE,QAAS,kBAAMT,EAAa,aAC3DK,EAAAlgD,EAAA4U,cAAA,OAAKwrC,UAAU,eACbF,EAAAlgD,EAAA4U,cAAA,OAAK0F,IAAK4mC,OAEZhB,EAAAlgD,EAAA4U,cAAA,QAAM+L,MAAO,CAAEggC,WAAqC,OAAzBrB,EAAaoB,QAAmB,GAAK,OAAQI,WAAqC,OAAzBxB,EAAaoB,QAAmB,qBAAuB,uBAEzIR,EAAAlgD,EAAA4U,cAACosC,EAAA,EAAD,CAAQC,KAAK,yCAGjBf,EAAAlgD,EAAA4U,cAAA,OAAK+L,MAAO,CAAEtY,OAAQ,GAAI84C,QAAS,KACjCjB,EAAAlgD,EAAA4U,cAAA,UAAQ+L,MAAO,CACbtY,OAAQ,GACR+4C,WAAY,OAEZC,cAAe,GAEfj5C,MAAO,OAIP6X,OAAQ,oBACRwgC,SAAU,GACVF,gBAAiB,QACjBO,WAAqC,OAAzBxB,EAAaoB,QAAmB,qBAAuB,kBAClEJ,QAAS,kBAAMvB,EAAMM,SAAQ,KAE9Ba,EAAAlgD,EAAA4U,cAACosC,EAAA,EAAD,CAAQC,KAAK,0BAInBf,EAAAlgD,EAAA4U,cAAC0sC,EAAA,EAAD,CAAaC,YAAaxC,EAAMwC,YAAaC,OAAQ7B,EAAa8B,UArEtE,SAAoB3hD,GAClB8/C,GAAe,GACXb,EAAMM,SACRN,EAAMM,SAAQ,kJCnCL,SAASqC,EAAU3C,GAAO,IAC/B4C,EAA6B5C,EAA7B4C,SAAUrB,EAAmBvB,EAAnBuB,QAAS3/B,EAAUo+B,EAAVp+B,MAI3B,OAHAs/B,oBAAU,WACR2B,eACC,IAED1B,EAAAlgD,EAAA4U,cAAA,OAAK0rC,QAASqB,EAAW,KAAO,kBAAME,YAASvB,KAC7CJ,EAAAlgD,EAAA4U,cAAA,OACE0F,IAAKqnC,EAAWG,IAAiBC,IACjC3B,UAAU,cACV4B,IAAI,GACJrhC,MAAKtiB,OAAA4jD,EAAA,EAAA5jD,CAAA,CACH8oB,SAAU,WACVqT,MAAO,GACPE,IAAK,EACL8lB,OAAQ,GACRp4C,MAAO,GACPC,OAAQ,GACRu4C,WAAY,WACTjgC","file":"static/js/2.019de68c.chunk.js","sourcesContent":["import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nimport defineProperty from \"./defineProperty\";\n\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = superPropBase(target, property);\n      var desc;\n\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        defineProperty(receiver, property, value);\n      }\n\n      return true;\n    };\n  }\n\n  return set(target, property, value, receiver);\n}\n\nexport default function _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n\n  if (!s && isStrict) {\n    throw new Error('failed to set property');\n  }\n\n  return value;\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","/* eslint-disable */\nvar uniqlo;\n(function (uniqlo) {\n    class RemixBaseImpl {\n        constructor(sensorAlltime, _weakMode) {\n            this.weakMode = false;\n            this.mAcc_x = 0;\n            this.mAcc_y = 0;\n            this.mAccVel_x = 0;\n            this.mAccVel_y = 0;\n            this.mAccPos_x = 0;\n            this.mAccPos_y = 0;\n            this.currentScale = 0;\n            this._zoomTryed = false;\n            this._lastRad = 0;\n            this.countUpForce = 0;\n            ///constant\n            this.FACTOR = 0.25;\n            this.ACC_INTERVAL_TIME = 33.3;\n            this.dirty = true;\n            this.acc_l = 0.45;\n            this.mNeedCache = false;\n            this.weakMode = _weakMode;\n            this._isZoom = false;\n            this.currentScale = this._isZoom ? 1 : 0;\n            this.blendMode = null;\n            this.soundEnable = true;\n            this._sensorAlltime = sensorAlltime;\n            stageJS.Context3D.MAX_TEXTURE = 12;\n        }\n        initWithData(stage, backBmd, srcBmd) {\n            this.init3D(stage, backBmd, srcBmd);\n        }\n        dispose() {\n            this.stopRendering();\n            this.stage3d.removeEventListener(stageJS.events.Event.CONTEXT3D_CREATE, this.context3DCreateHandler);\n            this.stage3d.removeEventListener(stageJS.events.Event.ENTER_FRAME, this.onEnterFrame);\n            this.mNoMipShader.dispose();\n            this.mNoMipShader = null;\n            this.mUniformMatrix.length = 0;\n            this.mUniformMatrix = null;\n            this.mUniformColor.length = 0;\n            this.mUniformColor = null;\n            this.mScreenMatrix = null;\n            this.mFBOMatrix = null;\n            this.mDisplayFboMatrix = null;\n            if (this.mTexBaseT)\n                this.mTexBaseT.dispose();\n            if (this.mFBOBlendBuffer)\n                this.mFBOBlendBuffer.dispose();\n            if (this.mBlendDistTexture)\n                this.mBlendDistTexture.dispose();\n            if (this.mDisplayFbo)\n                this.mDisplayFbo.dispose();\n            if (this.mFBOFrontBuffer)\n                this.mFBOFrontBuffer.dispose();\n            if (this.mFrontTexture)\n                this.mFrontTexture.dispose();\n            if (this.texTopLayer)\n                this.texTopLayer.dispose();\n            this.mTexBaseT = null;\n            this.mFBOBlendBuffer = null;\n            this.mBlendDistTexture = null;\n            this.mDisplayFbo = null;\n            this.mFBOFrontBuffer = null;\n            this.mFrontTexture = null;\n            this.mMipShader.dispose();\n            this.mMipShader = null;\n            this._bmdFrontImage = null;\n            this._bmdBackImage = null;\n            this.mVerts.dispose();\n            this.mVerts = null;\n            this.mCoords.dispose();\n            this.mCoords = null;\n            this.mReversedCoords.dispose();\n            this.mReversedCoords = null;\n            this.mVertsStage.dispose();\n            this.mVertsStage = null;\n            this.mIndicies.dispose();\n            this.mIndicies = null;\n            this.mFBO.dispose();\n            this.mFBO = null;\n            this.mDPlate = null;\n            this.mCtx3D.dispose();\n            this.mCtx3D = null;\n            this.stage3d = null;\n        }\n        stopRendering() {\n            this._drawingEnabled = false;\n            console.log('_drawingEnabled:', this._drawingEnabled);\n        }\n        startRendering() {\n            this._drawingEnabled = true;\n            console.log('_drawingEnabled:', this._drawingEnabled);\n            this._toScale = 0;\n            this.mAcc_x = 0;\n            this.mAcc_y = 0;\n        }\n        toggleScale() {\n            this._isZoom = !this._isZoom;\n        }\n        setup() { }\n        init3D(stage3d, back, front) {\n            this.soundNum = 0;\n            this._drawingEnabled = false;\n            this._bmdBackImage = back;\n            this._bmdFrontImage = front;\n            this._useFrontBuffer = this._bmdFrontImage != null;\n            this.mScreenMatrix = new stageJS.geom.Matrix3D();\n            this.stage3d = stage3d;\n            this.stage3d.addEventListener(stageJS.events.Event.CONTEXT3D_CREATE, (e) => { this.context3DCreateHandler(e); });\n            this.stage3d.requestContext3D();\n            this.mDPlate = new uniqlo.DraggablePlateRect();\n            this.mDPlate.setup(0, 0, 0, 1024, 1024);\n        }\n        updateTopLayer() {\n            this.hasTopLayer = false;\n        }\n        context3DCreateHandler(e) {\n            console.log(\"context created\");\n            //Begin Stage 3Ds////////////////////////////////////////////////////////////////\n            this.stage3d.removeEventListener(stageJS.events.Event.CONTEXT3D_CREATE, this.context3DCreateHandler);\n            this.onDeactive();\n            this.mTexBaseT = null;\n            this.mBlendDistTexture = null;\n            this.mCtx3D = this.stage3d.context3D;\n            this.mMipShader = uniqlo.Stage3DHelper.createMainProgram(this.mCtx3D, true);\n            this.mNoMipShader = uniqlo.Stage3DHelper.createMainProgram(this.mCtx3D, false);\n            this.onResize();\n            var vertices = [-0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5];\n            var coords = [0, 1, 1, 1, 0, 0, 1, 0];\n            var reversedCoords = [0, 0, 1, 0, 0, 1, 1, 1];\n            var aspct = uniqlo.UTItemManager.IMAGE_HEIGHT / uniqlo.UTItemManager.IMAGE_WIDTH;\n            var verticesStg = [-0.5, -aspct * 0.5, 0.5, -aspct * 0.5, -0.5, aspct * 0.5, 0.5, aspct * 0.5];\n            this.mVerts = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mVerts.uploadFromVector(vertices, 0, 4);\n            this.mCoords = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mCoords.uploadFromVector(coords, 0, 4);\n            this.mReversedCoords = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mReversedCoords.uploadFromVector(reversedCoords, 0, 4);\n            this.mVertsStage = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mVertsStage.uploadFromVector(verticesStg, 0, 4);\n            var indices = [0, 2, 1, 2, 3, 1];\n            this.mIndicies = this.mCtx3D.createIndexBuffer(6);\n            this.mIndicies.uploadFromVector(indices, 0, 6);\n            this.mUniformMatrix = [0.0, 0.0, 0.0, 1.0];\n            this.mUniformColor = [1.0, 1.0, 1.0, 1.0];\n            ///////////////////////////////////////////////////////////////////////////////////////////\n            this.mFBOMatrix = new stageJS.geom.Matrix3D();\n            this.mFBOMatrix.appendTranslation(uniqlo.UTItemManager.IMAGE_WIDTH * .5, -uniqlo.UTItemManager.IMAGE_HEIGHT * .5, 0);\n            this.mFBOMatrix.appendScale(1 / (uniqlo.UTItemManager.IMAGE_WIDTH * .5), 1 / (uniqlo.UTItemManager.IMAGE_HEIGHT * .5), 1);\n            //this.mFBO= this.mCtx3D.createTexture(AppVals.TEXTURE_WIDTH , AppVals.TEXTURE_WIDTH,stageJS.Context3DTextureFormat.BGRA,true);\n            this.mFBO = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true);\n            this.mFBOBlendBuffer = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true);\n            if (this._useFrontBuffer) {\n                this.mFBOFrontBuffer = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true);\n                var bmd = new stageJS.BitmapData(1024, 1024, true, 0x0);\n                var m = new uniqlo.Matrix();\n                m.scale(bmd.width / this._bmdFrontImage.width, bmd.height / this._bmdFrontImage.height);\n                bmd.draw(this._bmdFrontImage, m, null, null, null, true);\n                this.mFrontTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, bmd, stageJS.Context3DTextureFormat.BGRA, true, true);\n                // this.mFrontTexture = this.mCtx3D.createTexture(1024, 1024, stageJS.Context3DTextureFormat.BGRA, true);\n                this.mFrontTexture.uploadFromImage(bmd.canvas, 0);\n                bmd.dispose();\n            }\n            this.mDisplayFboMatrix = new stageJS.geom.Matrix3D();\n            this.mDisplayFboMatrix.appendScale(1 / (1024 * .5), 1 / (1024 * .5), 1);\n            //texture cooords\n            this.mCtx3D.setVertexBufferAt(1, this.mCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n            this.mCtx3D.setCulling(stageJS.Context3DTriangleFace.BACK);\n            this.updateTopLayer();\n            this._clear();\n            if (this.mCacheBmd != null) {\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[3] = 1024;\n                this.mUniformColor[0] = 1;\n                this.mUniformColor[1] = 1;\n                this.mUniformColor[2] = 1;\n                this.mUniformColor[3] = 1;\n                this.mCtx3D.setProgram(this.mNoMipShader);\n                var tmp = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.mCacheBmd, stageJS.Context3DTextureFormat.BGRA, false, true);\n                this.mCtx3D.setRenderToTexture(this.mFBO);\n                this.mCtx3D.clear(0, 0, 0, 0);\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, tmp, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                tmp.dispose();\n                this.mCacheBmd = null;\n            }\n            this.mCtx3D.setProgram(this.mMipShader);\n            this.mCtx3D.setVertexBufferAt(1, this.mCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.setup();\n            this.onActive();\n            dispatchEvent(new Event(stageJS.events.Event.ACTIVATE));\n        }\n        onActive() {\n            if (this.mCtx3D == null || this._mcWidth < 1 || this._mcHeight < 1)\n                return;\n            this.stage3d.addEventListener(stageJS.events.Event.ENTER_FRAME, (e) => { this.onEnterFrame(e); });\n        }\n        onDeactive() {\n            this.stage3d.removeEventListener(stageJS.events.Event.ENTER_FRAME, this.onEnterFrame);\n        }\n        onResize() {\n            this._mcWidth = this.stage3d.stageWidth / uniqlo.AppVals.GLOBAL_SCALE;\n            this._mcHeight = this.stage3d.stageHeight / uniqlo.AppVals.GLOBAL_SCALE - uniqlo.AppVals.STATUSBAR_HEIGHT;\n            this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n            //mStageWidth=this.stage3d.stageWidth;\n            //mStageHeight=this.stage3d.stageHeight;\n            if (this.mCtx3D == null || this._mcWidth < 1 || this._mcHeight < 1)\n                return;\n            this.mCtx3D.configureBackBuffer(this.stage3d.stageWidth, this.stage3d.stageHeight, 0, false);\n            this.mScreenMatrix.identity();\n            this.mScreenMatrix.appendTranslation(0, -uniqlo.AppVals.STATUSBAR_HEIGHT * .5, 0);\n            this.mScreenMatrix.appendScale(1.0 / (this._mcWidth * .5), 1.0 / ((this._mcHeight + uniqlo.AppVals.STATUSBAR_HEIGHT) * .5), 1);\n        }\n        draw() {\n            this.mCtx3D.setTextureAt(0, this.mTexBaseT);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, [0, 0, 1, 1]);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, [-512, 512, 0, 100]);\n            this.mCtx3D.drawTriangles(this.mIndicies);\n            return;\n        }\n        setBlendMode(bMode) {\n            this.mUniformColor[0] = 1;\n            this.mUniformColor[1] = 1;\n            this.mUniformColor[2] = 1;\n            this.mUniformColor[3] = 1;\n            switch (bMode) {\n                case uniqlo.BlendMode.ALPHA: //OK\n                    this.mUniformColor[0] = 0.6;\n                    this.mUniformColor[1] = 0.6;\n                    this.mUniformColor[2] = 0.6;\n                    this.mUniformColor[3] = 0.6;\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n                    break;\n                case uniqlo.BlendMode.ADD: //OK\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ONE);\n                    break;\n                case uniqlo.BlendMode.MULTIPLY: //OK\n                    if (uniqlo.UTItemManager.wkMultiply) {\n                        this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.DESTINATION_COLOR, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n                    }\n                    else {\n                        this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA, stageJS.Context3DBlendFactor.SOURCE_COLOR);\n                    }\n                    break;\n                case \"MULTI_ADD\":\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA, stageJS.Context3DBlendFactor.ONE);\n                    break;\n                case uniqlo.BlendMode.SCREEN: //OK\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR);\n                    break;\n                case uniqlo.BlendMode.ERASE:\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ZERO, stageJS.Context3DBlendFactor.SOURCE_ALPHA);\n                    break;\n                case \"SOURCE\":\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ZERO);\n                    break;\n                case \"LAYOUT\":\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_COLOR, stageJS.Context3DBlendFactor.ZERO);\n                    break;\n                default: //OK\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n                    break;\n            }\n        }\n        onEnterFrame(e) {\n            // if (!this.dirty) {\n            // \treturn;\n            // }\n            var h;\n            var w;\n            this.mCtx3D.setRenderToTexture(this.mFBO);\n            this.mCtx3D.setVertexBufferAt(0, this.mVerts, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mFBOMatrix, true);\n            this.draw();\n            this.mUniformColor[0] = 1;\n            this.mUniformColor[1] = 1;\n            this.mUniformColor[2] = 1;\n            this.mUniformColor[3] = 1;\n            this.mUniformMatrix[0] = 0;\n            this.mUniformMatrix[1] = 0;\n            this.mUniformMatrix[2] = 0;\n            this.mUniformMatrix[3] = 1024;\n            if (this._useFrontBuffer) {\n                this.mCtx3D.setRenderToTexture(this.mFBOFrontBuffer);\n                this.mCtx3D.clear(0, 0, 0, 0);\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this.mFrontTexture, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this.mFBO, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n            }\n            this.mCtx3D.setRenderToTexture(this.mFBOBlendBuffer);\n            if (this.blendMode == uniqlo.BlendMode.MULTIPLY) {\n                if (uniqlo.UTItemManager.wkMultiply) {\n                    this.mCtx3D.clear(255, 255, 255, 255);\n                }\n                else {\n                    this.mCtx3D.clear(255, 255, 255, 0);\n                }\n            }\n            else {\n                this.mCtx3D.clear(0, 0, 0, 0);\n            }\n            uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this.mBlendDistTexture, this.mVerts, this.mReversedCoords, this.mUniformMatrix, this.mUniformColor);\n            this.setBlendMode(this.blendMode);\n            uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this._useFrontBuffer ? this.mFBOFrontBuffer : this.mFBO, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n            if (this.blendMode == uniqlo.BlendMode.MULTIPLY && !uniqlo.UTItemManager.wkMultiply) {\n                this.setBlendMode(\"MULTI_ADD\");\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this.mBlendDistTexture, this.mVerts, this.mReversedCoords, this.mUniformMatrix, this.mUniformColor);\n            }\n            this.setBlendMode(null);\n            if (this.hasTopLayer) {\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this.texTopLayer, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n            }\n            ///////////////////////////////////////////////////////\n            this.mUniformMatrix[0] = 0;\n            this.mUniformMatrix[1] = 0;\n            this.mUniformMatrix[2] = 0;\n            this.mUniformMatrix[3] = 1;\n            this.mCtx3D.setRenderToBackBuffer();\n            this.mCtx3D.clear(0, 0, 0, 0);\n            // this.mCtx3D.clear(0,0,0,255);\n            this.mDPlate.update();\n            this.mUniformColor[0] = 1;\n            this.mUniformColor[1] = 1;\n            this.mUniformColor[2] = 1;\n            this.mUniformMatrix[2] = 0; //this.mDPlate.rad;\n            // this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ZERO);\n            var _s = this._currentRect.width * uniqlo.UTItemManager.wkWidth;\n            this.mUniformMatrix[0] = 0; // -this._mcWidth*.5+this._currentRect.width*0.5+this._currentRect.x+  this.mAccPos_x + this.mDPlate.pos_x*_s/1024;\n            this.mUniformMatrix[1] = 0; // -(- this._mcHeight*.5+this._currentRect.height*0.5+this._currentRect.y)+ this.mAccPos_y + this.mDPlate.pos_y*_s/1024;\n            this.mUniformMatrix[3] = this._currentRect.width;\n            uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mScreenMatrix, this.mTexBaseT, this.mVerts, this.mReversedCoords, this.mUniformMatrix, this.mUniformColor);\n            var _x = 0; // this._currentRect.width*0.5 - this._currentRect.width*UTItemManager.wkCenter.x;\n            var _y = 0; // this._currentRect.height*UTItemManager.wkCenter.y-this._currentRect.height*0.5;\n            var cx = 0; //_x*Math.cos(this.mDPlate.rad)-_y*Math.sin(this.mDPlate.rad);\n            var cy = 0; //_x*Math.sin(this.mDPlate.rad)+_y*Math.cos(this.mDPlate.rad);\n            this.mUniformMatrix[0] = 0; // -this._mcWidth*.5+this._currentRect.width*0.5+this._currentRect.x + this.mAccPos_x + this.mDPlate.pos_x*_s/1024  - cx;\n            this.mUniformMatrix[1] = 0; //-(- this._mcHeight*.5+this._currentRect.height*0.5+this._currentRect.y)+ this.mAccPos_y + this.mDPlate.pos_y*_s/1024 - cy;\n            this.mUniformMatrix[3] = this._currentRect.width; // this._currentRect.width*UTItemManager.wkWidth;\n            if (uniqlo.UTItemManager.wkMultiply)\n                this.setBlendMode(uniqlo.BlendMode.MULTIPLY);\n            uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mScreenMatrix, this.mFBOBlendBuffer, this.mVertsStage, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n            this.setBlendMode(null);\n            if (this._isZoom) {\n                if (this._toScale != 1) {\n                    this._toScale = 1;\n                    this._frScale = this.currentScale;\n                    this._ticktime = (new Date).getTime();\n                }\n            }\n            else {\n                if (this._toScale != 0) {\n                    this._toScale = 0;\n                    this._frScale = this.currentScale;\n                    this._ticktime = (new Date).getTime();\n                }\n            }\n            if (this.currentScale != this._toScale && this._drawingEnabled) {\n                var _v;\n                _v = ((new Date).getTime() - this._ticktime) / (1000 * 0.3);\n                if (_v > 1.0) {\n                    _v = 1;\n                    this.currentScale = this._toScale;\n                    this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n                }\n                else {\n                    _v = uniqlo.Easing.easeOutCubic(_v, 0, 1, 1);\n                    this.currentScale = this._frScale + (this._toScale - this._frScale) * _v;\n                    this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n                }\n            }\n            if (e != null)\n                this.mCtx3D.present();\n            this.acc();\n        }\n        acc() {\n            var _x = this._accelerationX;\n            var _y = this._accelerationY;\n            var l = Math.sqrt(_x * _x + _y * _y);\n            if (l > this.acc_l) {\n                var f = 40 + 10 * l * (1 + this.countUpForce);\n                if (f > 250)\n                    f = 250;\n                _x = _x / l * f;\n                _y = _y / l * f;\n                this.mAccVel_x += _x / 5;\n                this.mAccVel_y += _y / 5;\n                if (this._sensorAlltime || Math.random() < (1.0 - Math.pow((f) / 250.0, 1.3)) * .5)\n                    this.addPerticles(_x, _y);\n                this.soundForce(_x, _y);\n                this.countUpForce += 0.09;\n            }\n            else {\n                this.countUpForce *= 0.9;\n            }\n            this.mAccVel_x = 0.75 * (this.mAccVel_x - (this.mAccPos_x) * 0.1);\n            this.mAccVel_y = 0.75 * (this.mAccVel_y - (this.mAccPos_y) * 0.1);\n            this.mAccPos_x += this.mAccVel_x;\n            this.mAccPos_y += this.mAccVel_y;\n        }\n        convertMousePos(x, y) {\n            //ベースTシャツ　FBO\n            x /= uniqlo.AppVals.GLOBAL_SCALE;\n            y /= uniqlo.AppVals.GLOBAL_SCALE;\n            var _x = -this._mcWidth * .5 + this._currentRect.width * 0.5 + this._currentRect.x;\n            var _y = -this._mcHeight * .5 + this._currentRect.height * 0.5 + this._currentRect.y;\n            var _s = this._currentRect.width * uniqlo.UTItemManager.wkWidth;\n            this._cnverted_X = (x - this._mcWidth * .5 - _x) / _s * 1024;\n            this._cnverted_Y = -(y - this._mcHeight * .5 - _y - uniqlo.AppVals.STATUSBAR_HEIGHT) / _s * 1024;\n            var mx = uniqlo.UTItemManager.wkWidth + (1 - uniqlo.UTItemManager.wkWidth) * this.currentScale * 0.1;\n            this._cnverted_X *= mx;\n            this._cnverted_Y *= mx;\n        }\n        onMousePress(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            this.mDPlate.drag(this.mAccPos_x, this.mAccPos_y, false, false);\n            var pos_x;\n            var pos_y;\n            this.convertMousePos(x, y);\n            pos_x = this._cnverted_X;\n            pos_y = this._cnverted_Y;\n            //pos_x=(x - mStageWidth*.5)/(mStageWidth*currentScale*AppCanvas.IMAGE_ASPECTRATE*AppCanvas.BASET_HEIGHT_SCALE/1024.0);\n            //pos_y=-(y - mStageHeight*.5)/(mStageWidth*currentScale*AppCanvas.IMAGE_ASPECTRATE*AppCanvas.BASET_HEIGHT_SCALE/1024.0);\n            if (uniqlo.AppVals.REMIX_MOVE_RIMIT) {\n                this.mDPlate.drag(pos_x * uniqlo.AppVals.REMIX_MOVE_RIMIT_RATE, pos_y * uniqlo.AppVals.REMIX_MOVE_RIMIT_RATE, true, false);\n            }\n            else {\n                this.mDPlate.drag(pos_x, pos_y, true, false);\n            }\n            this.mPrevMouseX = pos_x;\n            this.mPrevMouseY = pos_y;\n        }\n        onMouseDrag(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            var pos_x;\n            var pos_y;\n            this.convertMousePos(x, y);\n            pos_x = this._cnverted_X;\n            pos_y = this._cnverted_Y;\n            //pos_x=(x - mStageWidth*.5)/(mStageWidth*currentScale*AppCanvas.IMAGE_ASPECTRATE*AppCanvas.BASET_HEIGHT_SCALE/1024.0);\n            //pos_y=-(y - mStageHeight*.5)/(mStageWidth*currentScale*AppCanvas.IMAGE_ASPECTRATE*AppCanvas.BASET_HEIGHT_SCALE/1024.0);\n            if (uniqlo.AppVals.REMIX_MOVE_RIMIT) {\n                this.mDPlate.drag(pos_x * uniqlo.AppVals.REMIX_MOVE_RIMIT_RATE, pos_y * uniqlo.AppVals.REMIX_MOVE_RIMIT_RATE, true, false);\n            }\n            else {\n                this.mDPlate.drag(pos_x, pos_y, true, false);\n            }\n            this.addPerticles((pos_x - this.mPrevMouseX) * 1.2, (pos_y - this.mPrevMouseY) * 1.2);\n            this.soundForce(pos_x - this.mPrevMouseX, pos_y - this.mPrevMouseY);\n            this.mPrevMouseX = pos_x;\n            this.mPrevMouseY = pos_y;\n        }\n        onMouseUp(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            var pos_x;\n            var pos_y;\n            this.convertMousePos(x, y);\n            pos_x = this._cnverted_X;\n            pos_y = this._cnverted_Y;\n            //pos_x=(x - mStageWidth*.5)/(mStageWidth*currentScale*AppCanvas.IMAGE_ASPECTRATE*AppCanvas.BASET_HEIGHT_SCALE/1024.0);\n            //pos_y=-(y - mStageHeight*.5)/(mStageWidth*currentScale*AppCanvas.IMAGE_ASPECTRATE*AppCanvas.BASET_HEIGHT_SCALE/1024.0);\n            if (uniqlo.AppVals.REMIX_MOVE_RIMIT) {\n                this.mDPlate.drag(pos_x * uniqlo.AppVals.REMIX_MOVE_RIMIT_RATE, pos_y * uniqlo.AppVals.REMIX_MOVE_RIMIT_RATE, false, false);\n            }\n            else {\n                this.mDPlate.drag(pos_x, pos_y, false, false);\n            }\n            this.mPrevMouseX = pos_x;\n            this.mPrevMouseY = pos_y;\n        }\n        addedForce(x, y) { }\n        addPerticles(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            this.addedForce(x, y);\n        }\n        soundForce(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            if (this.soundEnable) {\n                var _rad = Math.atan2(y, x);\n                var _ld = Math.abs(this._lastRad - _rad);\n                if (Math.PI < _ld)\n                    _ld = Math.PI * 2 - _ld;\n                if (_ld > Math.PI * 0.5 || this._weakforce) {\n                    if (Math.sqrt(x * x + y * y) > 25) {\n                        this._lastRad = _rad;\n                        // if(AppSound.checkSoundEnable())this.sounds[int(Math.floor(Math.random()*soundNum))].play();\n                    }\n                }\n                if (Math.sqrt(x * x + y * y) == 0)\n                    this._weakforce = true;\n            }\n        }\n        captureCurrentBuffer() {\n            this.stage3d.removeEventListener(stageJS.events.Event.ENTER_FRAME, this.onEnterFrame);\n            var bmd = new stageJS.BitmapData(this.stage3d.stageWidth, this.stage3d.stageHeight, false, 0xFFFFFF);\n            this.onEnterFrame(null);\n            this.mCtx3D.drawToBitmapData(bmd);\n            this.mCtx3D.present();\n            return bmd;\n        }\n        drawBufferToBitmap(bmd) {\n            this.onEnterFrame(null);\n            this.mCtx3D.drawToBitmapData(bmd);\n        }\n        captureToBitmap(bmd) {\n            if (this.mTexBaseT)\n                this.mTexBaseT.dispose();\n            if (this.mFBOBlendBuffer)\n                this.mFBOBlendBuffer.dispose();\n            if (this.mBlendDistTexture)\n                this.mBlendDistTexture.dispose();\n            if (this.mDisplayFbo)\n                this.mDisplayFbo.dispose();\n            if (this.mFBOFrontBuffer)\n                this.mFBOFrontBuffer.dispose();\n            if (this.mFrontTexture)\n                this.mFrontTexture.dispose();\n            this.mTexBaseT = null;\n            this.mFBOBlendBuffer = null;\n            this.mBlendDistTexture = null;\n            this.mDisplayFbo = null;\n            this.mFBOFrontBuffer = null;\n            this.mFrontTexture = null;\n            this.mUniformColor[0] = 1;\n            this.mUniformColor[1] = 1;\n            this.mUniformColor[2] = 1;\n            this.mUniformColor[3] = 1;\n            var mWid = Math.min(Math.min(this.stage3d.stageWidth, this.stage3d.stageHeight), Math.max(bmd.width / 2, bmd.height / 2));\n            // if(!UTDeviceCapabilities.isMobilePlatform())mWid=128;\n            // mWid = 128;\n            var m = new stageJS.geom.Matrix3D;\n            var m2 = new uniqlo.Matrix();\n            var b = new stageJS.BitmapData(mWid, mWid, true, 0);\n            var x, y;\n            this.mCtx3D.configureBackBuffer(mWid, mWid, 16, false);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n            this.mCtx3D.setVertexBufferAt(1, this.mCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setVertexBufferAt(0, this.mVertsStage, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setProgram(this.mNoMipShader);\n            if (this._useFrontBuffer || this.mNeedCache) {\n                this.mCtx3D.setRenderToBackBuffer();\n                this.mCacheBmd = new stageJS.BitmapData(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, true, 0);\n                var mHei = mWid * uniqlo.UTItemManager.IMAGE_HEIGHT / uniqlo.UTItemManager.IMAGE_WIDTH;\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[3] = bmd.width;\n                m.identity();\n                m.appendScale(1.0 / (mWid * .5), 1.0 / (mHei * .5), 1);\n                this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, m, false);\n                this.mCtx3D.setTextureAt(0, this.mFBO);\n                for (x = 0; x < Math.ceil(bmd.width / mWid); x++) {\n                    for (y = 0; y < Math.ceil(bmd.height / mWid); y++) {\n                        this.mCtx3D.clear(0, 0, 0, 0);\n                        this.mUniformMatrix[0] = -x * mWid + (bmd.width * .5 - mWid * .5);\n                        this.mUniformMatrix[1] = y * mHei - (bmd.height * .5 - mHei * .5);\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                        this.mCtx3D.drawTriangles(this.mIndicies);\n                        this.mCtx3D.drawToBitmapData(b);\n                        this.mCacheBmd.copyPixels(b, b.rect, { x: mWid * x, y: mWid * y });\n                    }\n                }\n            }\n            if (this.blendMode == uniqlo.BlendMode.ERASE) {\n                //mask blend\n                var mFBOBack = this.mCtx3D.createTexture(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, stageJS.Context3DTextureFormat.BGRA, true);\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[3] = 1024;\n                var tmp;\n                if (this._useFrontBuffer) {\n                    this.mCtx3D.setRenderToTexture(mFBOBack);\n                    this.mCtx3D.clear(0, 0, 0, 0);\n                    m2.identity();\n                    m2.scale(uniqlo.AppVals.TEXTURE_WIDTH / this._bmdFrontImage.width, uniqlo.AppVals.TEXTURE_WIDTH / this._bmdFrontImage.height);\n                    bmd.draw(this._bmdFrontImage, m2, null, null, null, true);\n                    tmp = this.mCtx3D.createTexture(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, stageJS.Context3DTextureFormat.BGRA, false);\n                    tmp.uploadFromBitmapData(bmd);\n                    uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, tmp, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                    tmp.dispose();\n                    tmp = null;\n                    uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this.mFBO, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                    bmd.fillRect(bmd.rect, 0);\n                }\n                this.mCtx3D.setRenderToTexture(this._useFrontBuffer ? this.mFBO : mFBOBack);\n                this.mCtx3D.clear(0, 0, 0, 0);\n                m2.identity();\n                m2.scale(uniqlo.AppVals.TEXTURE_WIDTH / this._bmdBackImage.width, uniqlo.AppVals.TEXTURE_WIDTH / this._bmdBackImage.height);\n                bmd.draw(this._bmdBackImage, m2, null, null, null, true);\n                tmp = this.mCtx3D.createTexture(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, stageJS.Context3DTextureFormat.BGRA, false);\n                tmp.uploadFromBitmapData(bmd);\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, tmp, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                tmp.dispose();\n                tmp = null;\n                this.setBlendMode(this.blendMode);\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, this._useFrontBuffer ? mFBOBack : this.mFBO, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                this.setBlendMode(null);\n                if (this._useFrontBuffer) {\n                    mFBOBack.dispose();\n                }\n                else {\n                    this.mFBO.dispose();\n                }\n                this.mCtx3D.setRenderToBackBuffer();\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[3] = bmd.width;\n                m.identity();\n                m.appendScale(1.0 / (mWid * .5), 1.0 / (mWid * .5), 1);\n                this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, m, false);\n                this.mCtx3D.setTextureAt(0, this._useFrontBuffer ? this.mFBO : mFBOBack);\n                this.mCtx3D.setVertexBufferAt(1, this.mCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n                this.mCtx3D.setVertexBufferAt(0, this.mVertsStage, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n                for (x = 0; x < Math.ceil(bmd.width / mWid); x++) {\n                    for (y = 0; y < Math.ceil(bmd.height / mWid); y++) {\n                        this.mCtx3D.clear(0, 0, 0, 0);\n                        this.mUniformMatrix[0] = -x * mWid + (bmd.width * .5 - mWid * .5);\n                        this.mUniformMatrix[1] = y * mWid - (bmd.height * .5 - mWid * .5);\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                        this.mCtx3D.drawTriangles(this.mIndicies);\n                        this.mCtx3D.drawToBitmapData(b);\n                        bmd.copyPixels(b, b.rect, { x: mWid * x, y: mWid * y });\n                    }\n                }\n            }\n            else if (this.blendMode == uniqlo.BlendMode.ALPHA ||\n                this.blendMode == uniqlo.BlendMode.ADD ||\n                this.blendMode == uniqlo.BlendMode.MULTIPLY ||\n                this.blendMode == uniqlo.BlendMode.SCREEN) {\n                ///////////////////customBlend\n                if (this._bmdBackImage != null)\n                    bmd.copyPixels(this._bmdBackImage, this._bmdBackImage.rect, { x: 0, y: 0 });\n                var bm = this.blendMode == uniqlo.BlendMode.ALPHA ? null : this.blendMode;\n                var ct = this.blendMode == uniqlo.BlendMode.ALPHA ? new uniqlo.ColorTransform(1, 1, 1, 0.6) : null;\n                this.mCtx3D.setRenderToBackBuffer();\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[3] = bmd.width;\n                m.identity();\n                m.appendScale(1.0 / (mWid * .5), 1.0 / (mWid * .5), 1);\n                this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, m, false);\n                this.mCtx3D.setTextureAt(0, this.mFBO);\n                if (this._useFrontBuffer) {\n                    var r = new Rectangle(0, 0, mWid, mWid);\n                    var b2 = new stageJS.BitmapData(mWid, mWid, true, 0);\n                }\n                for (x = 0; x < Math.ceil(bmd.width / mWid); x++) {\n                    for (y = 0; y < Math.ceil(bmd.height / mWid); y++) {\n                        this.mCtx3D.clear(0, 0, 0, 0);\n                        this.mUniformMatrix[0] = -x * mWid + (bmd.width * .5 - mWid * .5);\n                        this.mUniformMatrix[1] = y * mWid - (bmd.height * .5 - mWid * .5);\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                        this.mCtx3D.drawTriangles(this.mIndicies);\n                        this.mCtx3D.drawToBitmapData(b);\n                        m2.identity();\n                        m2.translate(mWid * x, mWid * y);\n                        if (this._useFrontBuffer) {\n                            r.x = mWid * x;\n                            r.y = mWid * y;\n                            b2.copyPixels(this._bmdFrontImage, r, { x: 0, y: 0 });\n                            b2.draw(b);\n                            bmd.draw(b2, m2, ct, bm);\n                        }\n                        else {\n                            bmd.draw(b, m2, ct, bm);\n                        }\n                    }\n                }\n            }\n            else {\n                /////////////////////////normal\n                // if(this._bmdBackImage!=null && !UTStampManager.getActiveLayerTop()){\n                if (this._bmdBackImage != null) {\n                    bmd.copyPixels(this._bmdBackImage, this._bmdBackImage.rect, { x: 0, y: 0 });\n                    if (this._useFrontBuffer)\n                        bmd.draw(this._bmdFrontImage);\n                }\n                else {\n                    if (this._useFrontBuffer)\n                        bmd.copyPixels(this._bmdFrontImage, this._bmdFrontImage.rect, { x: 0, y: 0 });\n                }\n                this.mCtx3D.setRenderToBackBuffer();\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[3] = bmd.width;\n                m.identity();\n                m.appendScale(1.0 / (mWid * .5), 1.0 / (mWid * .5), 1);\n                this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, m, false);\n                this.mCtx3D.setTextureAt(0, this.mFBO);\n                for (x = 0; x < Math.ceil(bmd.width / mWid); x++) {\n                    for (y = 0; y < Math.ceil(bmd.height / mWid); y++) {\n                        this.mCtx3D.clear(0, 0, 0, 0);\n                        this.mUniformMatrix[0] = -x * mWid + (bmd.width * .5 - mWid * .5);\n                        this.mUniformMatrix[1] = y * mWid - (bmd.height * .5 - mWid * .5);\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                        this.mCtx3D.drawTriangles(this.mIndicies);\n                        this.mCtx3D.drawToBitmapData(b);\n                        m2.identity();\n                        m2.translate(mWid * x, mWid * y);\n                        bmd.draw(b, m2);\n                    }\n                }\n            }\n            b.dispose();\n        }\n        _clear() {\n            if (!this.mCtx3D)\n                return;\n            this.mCtx3D.setRenderToBackBuffer();\n            this.mCtx3D.clear(0, 0, 0, 0);\n            this.mCtx3D.setRenderToTexture(this.mFBO);\n            this.mCtx3D.clear(0, 0, 0, 0);\n            this.mCtx3D.setRenderToTexture(this.mFBOBlendBuffer);\n            this.mCtx3D.clear(0, 0, 0, 0);\n            if (this._useFrontBuffer) {\n                this.mCtx3D.setRenderToTexture(this.mFBOFrontBuffer);\n                this.mCtx3D.clear(0, 0, 0, 0);\n            }\n            if (this.mTexBaseT == null)\n                this.canvasChange();\n            if (this.mBlendDistTexture == null) {\n                var bmd;\n                bmd = new stageJS.BitmapData(1024, 1024, true, 0x0);\n                if (this._bmdBackImage) {\n                    var m = new uniqlo.Matrix();\n                    m.scale(bmd.width / this._bmdBackImage.width, bmd.height / this._bmdBackImage.height);\n                    bmd.draw(this._bmdBackImage, m, null, null, null, true);\n                }\n                this.mBlendDistTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, bmd, stageJS.Context3DTextureFormat.BGRA, true, true);\n                bmd.dispose();\n            }\n        }\n        canvasChange() {\n            var bmd;\n            bmd = new stageJS.BitmapData(1024, 1024, true, 0x000000);\n            // UTImageBuilder.createPrintedImage(bmd,null,false,false,false,false);\n            this.mTexBaseT = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, bmd, stageJS.Context3DTextureFormat.BGRA, true, true, 'baseT', false);\n            this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n            bmd.dispose();\n        }\n        clear() { this._clear(); }\n    }\n    uniqlo.RemixBaseImpl = RemixBaseImpl;\n})(uniqlo || (uniqlo = {}));\n/// <reference path=\"RemixBaseImpl.ts\" />\nvar uniqlo;\n(function (uniqlo) {\n    class GlichImpl extends uniqlo.RemixBaseImpl {\n        constructor(mom, _weakMode) {\n            super(true, _weakMode);\n            this._isMotion = false;\n            this._rad = 0;\n            this._range = 0;\n            this.INIT_NUM_LINE = 7;\n            this.mMainVerts = new Array();\n            this.mMainCoords = new Array();\n            this.mMainIndicies = new Array();\n            this.gliLines = new Array();\n            this.playing = true;\n            this.mMom = mom;\n            this._addShapeLimit = this.INIT_NUM_LINE; //切出来的条数限制\n            this.numLine = 150;\n            if (this.weakMode)\n                this.numLine = 20;\n            this.vertNum = (this.numLine) * 4; //顶点数\n            this.indNum = (this.numLine) * 6; //索引数\n            for (var i = 0; i < this.numLine; i++) { //每条的四个顶点和索引置为0，索引是为了drawtriangle\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainVerts.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainCoords.push(0);\n                this.mMainIndicies.push(0);\n                this.mMainIndicies.push(0);\n                this.mMainIndicies.push(0);\n                this.mMainIndicies.push(0);\n                this.mMainIndicies.push(0);\n                this.mMainIndicies.push(0);\n            }\n            for (i = 0; i < this.numLine; i++) { //drawtriangle的顶点索引顺序\n                this.mMainIndicies[i * 6 + 0] = i * 4;\n                this.mMainIndicies[i * 6 + 1] = i * 4 + 2;\n                this.mMainIndicies[i * 6 + 2] = i * 4 + 1;\n                this.mMainIndicies[i * 6 + 3] = i * 4 + 2;\n                this.mMainIndicies[i * 6 + 4] = i * 4 + 3;\n                this.mMainIndicies[i * 6 + 5] = i * 4 + 1;\n            }\n        }\n        initWithData(stage, backBmd, srcBmd) {\n            this.addedForce(0, 0);\n            this._srcBmd = srcBmd;\n            super.init3D(stage, backBmd, null);\n        }\n        dispose() {\n            this._srcBmd = null;\n            super.dispose();\n        }\n        setup() {\n            this.mFBO.dispose();\n            this.mFBO = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true, 0, 'mFBO', false);\n            this.mTCoords = this.mCtx3D.createVertexBuffer(this.vertNum, 2);\n            this.mTVers = this.mCtx3D.createVertexBuffer(this.vertNum, 2);\n            this.mTIndicies = this.mCtx3D.createIndexBuffer(this.indNum);\n            this.mTIndicies.uploadFromVector(this.mMainIndicies, 0, this.indNum); //加载顶点索引\n            this.mTVers.uploadFromVector(this.mMainVerts, 0, this.vertNum); //加载顶点\n            //UTItemManager.IMAGE_WIDTH==2048\n            if (this._srcBmd.width == uniqlo.AppVals.TEXTURE_WIDTH && this._srcBmd.height == uniqlo.AppVals.TEXTURE_WIDTH) {\n                this.mainTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this._srcBmd, stageJS.Context3DTextureFormat.BGRA, false, false, 'main', false);\n            }\n            else {\n                var _bmd = new stageJS.BitmapData(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, true, 0);\n                var m = new uniqlo.Matrix();\n                m.scale((_bmd.width - 2) / this._srcBmd.width, (_bmd.height - 2) / this._srcBmd.height);\n                // m.translate(1,1);\n                _bmd.draw(this._srcBmd, m, null, null, null, true);\n                this.mainTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, _bmd, stageJS.Context3DTextureFormat.BGRA, false, true, 'main', false);\n            }\n            this.mTCoords.uploadFromVector(this.mMainCoords, 0, this.vertNum); //vertNum=numLine*4\n            this.mTVers.uploadFromVector(this.mMainVerts, 0, this.vertNum); //vertNum=numLine*4\n            // this.blendMode = \"SOURCE\";\n        }\n        //停止摇动或滑屏\n        stop() {\n            this.playing = false;\n            this.soundEnable = false;\n            this.mMom.playStageChange(this.playing); //显示停止（开始）按钮状态\n        }\n        //开始摇动或滑屏，playStagechange(boolean) 的功能是什么？\n        start() {\n            this.playing = true;\n            this.soundEnable = true;\n            this.mMom.playStageChange(this.playing); //显示停止（开始）按钮状态\n        }\n        //UTItemManager.IMAGE_WIDTH==2048\n        draw() {\n            // if(!_bUpdated)return;\n            this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ZERO);\n            this.mUniformMatrix[0] = -uniqlo.UTItemManager.IMAGE_WIDTH * .5;\n            this.mUniformMatrix[1] = uniqlo.UTItemManager.IMAGE_HEIGHT * .5;\n            this.mUniformMatrix[2] = 0;\n            this.mUniformMatrix[3] = 1;\n            this.mUniformColor[0] = 1;\n            this.mUniformColor[1] = 1;\n            this.mUniformColor[2] = 1;\n            if (this.playing) {\n                var i;\n                var v1;\n                var v2;\n                var _vx1;\n                var _vy1;\n                var _vx2;\n                var _vy2;\n                var _r1;\n                var _r2;\n                var _px1;\n                var _py1;\n                var _px2;\n                var _py2;\n                _r1 = Math.random() * this._range - this._range * .5; //-_range*.5到_range*.5随机产生的左右摆动距离；\n                for (i = 0; i < this.numLine; i++) { //numline是切片数量，对每一个切片进行如下处理\n                    v1 = this.gliLines[i]; //i/Number(numLine);\n                    v2 = this.gliLines[i + 1]; //(i+1)/Number(numLine);\n                    //下面是切块晃动时的上面两个顶点坐标\n                    _vx1 = this._tx1 + (this._tx3 - this._tx1) * v1;\n                    _vy1 = this._ty1 + (this._ty3 - this._ty1) * v1;\n                    _vx2 = this._tx2 + (this._tx4 - this._tx2) * v1;\n                    _vy2 = this._ty2 + (this._ty4 - this._ty2) * v1;\n                    //r1和r2应该是这一个切片摆动的两个幅度，产生切片晃动后的伸长和压缩效果\n                    _r1 = (Math.pow(Math.random(), 3)) * this._range * 1 * (_r1 == 0 ? (Math.random() < 0.5 ? 1 : -1) : (_r1 < 0 ? 1 : -1));\n                    _r2 = _r1; //Math.random()*_range-_range*.5;\n                    if (_r1 > 0) {\n                        _r2 += Math.random() * this._range * 0.25;\n                    }\n                    else {\n                        _r1 -= Math.random() * this._range * 0.25;\n                    }\n                    if (this.weakMode) {\n                        _r1 *= 0.1;\n                        _r2 *= 0.1;\n                    }\n                    if (v2 - v1 > 0.1 && this._addShapeLimit < 20)\n                        _r1 = _r2 = 0; //？\n                    _px1 = (_vx2 - _vx1) * _r1;\n                    _py1 = (_vy2 - _vy1) * _r1;\n                    _px2 = (_vx2 - _vx1) * _r2;\n                    _py2 = (_vy2 - _vy1) * _r2;\n                    //原来的图像切块，晃动后的四个顶点坐标（晃动时左右有变形）\n                    this.mMainCoords[i * 8] = this._tx1 + (this._tx3 - this._tx1) * v1 + _px1;\n                    this.mMainCoords[i * 8 + 1] = this._ty1 + (this._ty3 - this._ty1) * v1 + _py1;\n                    this.mMainCoords[i * 8 + 2] = this._tx2 + (this._tx4 - this._tx2) * v1 + _px2;\n                    this.mMainCoords[i * 8 + 3] = this._ty2 + (this._ty4 - this._ty2) * v1 + _py2;\n                    this.mMainCoords[i * 8 + 4] = this._tx1 + (this._tx3 - this._tx1) * v2 + _px1;\n                    this.mMainCoords[i * 8 + 5] = this._ty1 + (this._ty3 - this._ty1) * v2 + _py1;\n                    this.mMainCoords[i * 8 + 6] = this._tx2 + (this._tx4 - this._tx2) * v2 + _px2;\n                    this.mMainCoords[i * 8 + 7] = this._ty2 + (this._ty4 - this._ty2) * v2 + _py2;\n                }\n                //加载晃动后的顶点集合\n                this.mTCoords.uploadFromVector(this.mMainCoords, 0, this.vertNum);\n                this.mTVers.uploadFromVector(this.mMainVerts, 0, this.vertNum);\n                if (this._isMotion) { //切片是否还在摆动？\n                    if (this._range < 0.002) { //range是切片移动的幅度，<0.002则停止\n                        this._range = 0;\n                        this._addShapeLimit = this.INIT_NUM_LINE;\n                        this._isMotion = false;\n                        this.mMom.motionStateChange(this._isMotion);\n                    }\n                    else {\n                        this._range *= 0.986; //摆动幅度每次衰减0.014\n                    }\n                }\n            }\n            else {\n                if (!this._isMotion)\n                    this.start();\n            }\n            //加载和显示\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n            this.mCtx3D.setVertexBufferAt(0, this.mTVers, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setVertexBufferAt(1, this.mTCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mFBOMatrix, true);\n            this.mCtx3D.setTextureAt(0, this.mainTexture);\n            this.mCtx3D.drawTriangles(this.mTIndicies);\n            this.mCtx3D.setProgram(this.mMipShader);\n        }\n        addedForce(_x, _y) {\n            if (!this.playing)\n                return;\n            if (_x != 0 || _y != 0) { //判断手机是否摇动或者手指滑屏，x，y应该是加速器两个坐标轴的位移\n                this.mMom.motionStateChange(this._isMotion);\n                this._addShapeLimit += 0.03; //？\n                if (this._addShapeLimit > this.numLine)\n                    this._addShapeLimit = this.numLine; //切片数量限制为numLine\n                //trace(Math.sqrt(_x*_x+_y*_y),_range);\n                if (Math.sqrt(_x * _x + _y * _y) > 50 || !this._isMotion) {\n                    this._rad = Math.atan2(-_y, _x); //计算晃动角度\n                    if (Math.random() < 0.2)\n                        this.gliLines.length = 0;\n                }\n                this._range += Math.sqrt(_x * _x + _y * _y) / uniqlo.UTItemManager.IMAGE_WIDTH * 0.25; //range是摆动幅度\n                if (!this.mMom.showingStopAlert && this._range > 0.3)\n                    this.mMom.showStopAlert(); //超过一定摆动幅度，显示暂停按钮\n                this._isMotion = true;\n            }\n            var divY = uniqlo.UTItemManager.IMAGE_HEIGHT / Number(this.numLine);\n            var width = (uniqlo.UTItemManager.IMAGE_HEIGHT * 0.5 + uniqlo.UTItemManager.IMAGE_WIDTH * 0.5) * 2; //？\n            this.centerX = width * .5; //？\n            var r = this._rad + Math.PI * 0.25; //原有的弧度+45度\n            //计算centerX在rad+135度，45度，225度，-135度的顶点坐标，也就是原来画布坐标轴四个最大点，进行旋转\n            var _x1 = Math.cos(r + Math.PI * 0.5) * this.centerX;\n            var _y1 = -Math.sin(r + Math.PI * 0.5) * this.centerX;\n            var _x2 = Math.cos(r) * this.centerX;\n            var _y2 = -Math.sin(r) * this.centerX;\n            var _x3 = Math.cos(r + Math.PI) * this.centerX;\n            var _y3 = -Math.sin(r + Math.PI) * this.centerX;\n            var _x4 = Math.cos(r - Math.PI * 0.5) * this.centerX;\n            var _y4 = -Math.sin(r - Math.PI * 0.5) * this.centerX;\n            //重置旋转后的画布范围\n            var tw = (width / Math.sqrt(2)) / uniqlo.UTItemManager.IMAGE_WIDTH * .5;\n            var th = (width / Math.sqrt(2)) / uniqlo.UTItemManager.IMAGE_HEIGHT * .5;\n            var r2 = this._rad;\n            var sin = Math.sin(r2);\n            var cos = Math.cos(r2);\n            //这是哪四个点的坐标？旋转后画布扩大后的四个顶点？（坐标范围？）这些点在draw里做什么用？\n            this._tx1 = 0.5 - tw * cos - tw * sin;\n            this._ty1 = 0.5 + (-tw * sin + tw * cos) * th / tw;\n            this._tx2 = 0.5 + tw * cos - tw * sin;\n            this._ty2 = 0.5 + (+tw * sin + tw * cos) * th / tw;\n            this._tx3 = 0.5 - tw * cos + tw * sin;\n            this._ty3 = 0.5 + (-tw * sin - tw * cos) * th / tw;\n            this._tx4 = 0.5 + tw * cos + tw * sin;\n            this._ty4 = 0.5 + (+tw * sin - tw * cos) * th / tw;\n            var i;\n            //太さランダム//随机检索\n            //gliLines.length=0;\n            this.gliLines.push(0);\n            while (this.gliLines.length < this.numLine)\n                this.gliLines.push(1);\n            //while(gliLines.length <_addShapeLimit )gliLines.push(Math.random());\n            for (i = 1; i < this.numLine; i++) {\n                if (i < this._addShapeLimit) { //addShapeLimit是摆动的切片数量限制\n                    if (this.gliLines[i] == 1)\n                        this.gliLines[i] = Math.random();\n                }\n                else {\n                    this.gliLines[i] = 1;\n                }\n            }\n            ////消す//擦除\n            // this.gliLines.sort(Array.NUMERIC);\n            this.gliLines.sort();\n            //把_addShapeLimit数量多余的删除掉，包括gliLines[i]==1的\n            for (i = 1; i < this.gliLines.length;) {\n                if (this.gliLines[i] - this.gliLines[i - 1] < 5 / width) {\n                    this.gliLines.splice(i, 1); //把gliLines[i]从数组中删除\n                }\n                else {\n                    i++;\n                }\n            }\n            while (this.gliLines.length < this.numLine)\n                this.gliLines.push(1);\n            /////最後\n            this.gliLines.push(1);\n            for (i = 0; i < this.numLine; i++) { //每个切片四个顶点坐标，对应旋转后画布的矩形块；\n                //前面_addShapeLimit块会发生位移，后面的则不会，位移带有形变\n                var y = divY * i;\n                var y2 = divY * (i + 1);\n                var v1 = this.gliLines[i]; //i/Number(numLine);\n                var v2 = this.gliLines[i + 1]; //(i+1)/Number(numLine);\n                //产生晃动效果\n                this.mMainVerts[i * 8] = _x1 + (_x3 - _x1) * v1;\n                this.mMainVerts[i * 8 + 1] = _y1 + (_y3 - _y1) * v1;\n                this.mMainVerts[i * 8 + 2] = _x2 + (_x4 - _x2) * v1;\n                this.mMainVerts[i * 8 + 3] = _y2 + (_y4 - _y2) * v1;\n                this.mMainVerts[i * 8 + 4] = _x1 + (_x3 - _x1) * v2;\n                this.mMainVerts[i * 8 + 5] = _y1 + (_y3 - _y1) * v2;\n                this.mMainVerts[i * 8 + 6] = _x2 + (_x4 - _x2) * v2;\n                this.mMainVerts[i * 8 + 7] = _y2 + (_y4 - _y2) * v2;\n            }\n        }\n        captureToBitmap(bmd) {\n            if (this._isMotion || this.blendMode == uniqlo.BlendMode.ERASE) {\n                this.mFBO.dispose();\n                this.mFBO = this.mCtx3D.createTexture(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, stageJS.Context3DTextureFormat.BGRA, true);\n                this.mCtx3D.setRenderToTexture(this.mFBO, false, 4);\n                this.mCtx3D.clear(0, 0, 0, 0);\n                this.mCtx3D.setProgram(this.mNoMipShader);\n                this.mUniformMatrix[0] = uniqlo.UTItemManager.IMAGE_WIDTH * .5;\n                this.mUniformMatrix[1] = uniqlo.UTItemManager.IMAGE_HEIGHT * .5;\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[3] = 1;\n                this.mUniformColor[0] = 1;\n                this.mUniformColor[1] = 1;\n                this.mUniformColor[2] = 1;\n                this.mTCoords.uploadFromVector(this.mMainCoords, 0, this.vertNum);\n                this.mTVers.uploadFromVector(this.mMainVerts, 0, this.vertNum);\n                this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n                this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                this.mCtx3D.setVertexBufferAt(0, this.mTVers, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n                this.mCtx3D.setVertexBufferAt(1, this.mTCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n                this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mFBOMatrix, true);\n                this.mCtx3D.setTextureAt(0, this.mainTexture);\n                this.mCtx3D.drawTriangles(this.mTIndicies);\n                this.mCtx3D.setProgram(this.mMipShader);\n                super.captureToBitmap(bmd);\n            }\n            else {\n                if (this._bmdBackImage != null && !uniqlo.UTStampManager.getActiveLayerTop())\n                    bmd.copyPixels(this._bmdBackImage, this._bmdBackImage.rect, { x: 0, y: 0 });\n                var bm = this.blendMode == uniqlo.BlendMode.ALPHA ? null : this.blendMode;\n                var ct = this.blendMode == uniqlo.BlendMode.ALPHA ? new uniqlo.ColorTransform(1, 1, 1, 0.6) : null;\n                bmd.draw(this._srcBmd, null, ct, bm);\n            }\n        }\n        clear() {\n            this._rad = 0;\n            this._addShapeLimit = this.INIT_NUM_LINE;\n            this._range = 0;\n            this.addedForce(0, 0);\n            super.clear();\n            this.start();\n            this.mMom.playStageChange(this.playing);\n        }\n    }\n    uniqlo.GlichImpl = GlichImpl;\n})(uniqlo || (uniqlo = {}));\nvar stageJS;\n(function (stageJS) {\n    class DisplayObject {\n        constructor() {\n            this.children = [];\n            this.canvas = document.createElement('canvas');\n        }\n        addChild(child) {\n            this.children.push(child);\n        }\n    }\n    stageJS.DisplayObject = DisplayObject;\n})(stageJS || (stageJS = {}));\n/// <reference path=\"DisplayObject.ts\" />\nvar stageJS;\n(function (stageJS) {\n    // TODO: uded in MOMA2\n    class Bitmap extends stageJS.DisplayObject {\n        constructor(bitmapData = null, pixelSnapping = \"auto\", smoothing = false) {\n            super();\n            this._bitmapData = bitmapData;\n            this.pixelSnapping = pixelSnapping;\n        }\n        get bitmapData() {\n            return this._bitmapData;\n        }\n        set bitmapData(value) {\n            this._bitmapData = value;\n        }\n    }\n    stageJS.Bitmap = Bitmap;\n})(stageJS || (stageJS = {}));\n/// <reference path=\"Stage3D/flash/Bitmap.ts\" />\n/// <reference path=\"RemixBaseImpl.ts\" />\nvar uniqlo;\n(function (uniqlo) {\n    class LayoutImpl extends uniqlo.RemixBaseImpl {\n        // private _stampView:GraphicStampView;\n        constructor(_weakMode) {\n            super(true, _weakMode);\n            this.layouts = new Array();\n            this.perticles = new Array();\n            //投影位移和缩放规模\n            this.projectionMatrix = new stageJS.geom.Matrix3D();\n            this.projectionMatrix.appendTranslation(-uniqlo.UTItemManager.IMAGE_WIDTH * .5, -uniqlo.UTItemManager.IMAGE_HEIGHT * .5, 0);\n            this.projectionMatrix.appendScale(1.0 / (uniqlo.UTItemManager.IMAGE_WIDTH * .5), -1.0 / (uniqlo.UTItemManager.IMAGE_HEIGHT * .5), 1);\n            this.srcViewId = uniqlo.UTCreateMain.getActiveSrcType();\n            if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_TYPO) { //如果是文字\n                //_typeObject=(AppMain.getActiveSrcView() as NV03_TypographyView).typeObject;\n                // this.texts=(UTCreateMain.getActiveSrcView() as NV03_GraphicTypographyView).htmlText .split(\"</TEXTFORMAT>\");\n                for (var i = 0; i < this.texts.length; i++)\n                    this.texts[i] += \"</TEXTFORMAT>\";\n                this.texts.pop();\n                // this.textField=NV03_GraphicTypographyView.createRenderTextField();\n            }\n            if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_STAMP) { //如果是stamp\n                // this._stampView=(UTCreateMain.getActiveSrcView() as GraphicStampView);\n            }\n            this._step = 0;\n        }\n        initWithData(stage, backBmd, srcBmd) {\n            this._srcBmd = srcBmd;\n            super.init3D(stage, backBmd, null);\n            uniqlo.LayoutPericleGenelator._step = this._step;\n        }\n        dispose() {\n            //Stage3D関連オブジェクトを削除//删除相关对象\n            this._step = uniqlo.LayoutPericleGenelator._step;\n            super.dispose();\n        }\n        setup() {\n            this.mFBO.dispose();\n            this.mFBO = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true);\n            var i, j;\n            for (i = 0; i < this.layouts.length; i++)\n                this.layouts[i].dispose(); //清除原有的布局\n            this.layouts.length = 0;\n            //var tmp:BitmapData=new BitmapData(2048,2048,true,0xffff0000);\n            //tex=Stage3DHelper.uploadTexture(mCtx3D,tmp,Context3DTextureFormat.BGRA,true,true);\n            var rect;\n            var m = new uniqlo.Matrix();\n            var canvas;\n            var bmd;\n            var _drawX = 0;\n            var _drawY = 0;\n            var m2 = new uniqlo.Matrix;\n            var lo; //布局对象\n            var col = 0;\n            var _bmd;\n            var s2;\n            var scale;\n            canvas = new stageJS.BitmapData(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, true, 0);\n            if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_TYPO || this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_STAMP) { //如果是文字或者stamp\n                bmd = new stageJS.BitmapData(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, true, 0);\n                if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_TYPO) { //如果是文字\n                    for (i = 0; i < this.texts.length; i++) { //对所有行文字\n                        this.textField.htmlText = this.texts[i]; //每行文字内容\n                        this.textField.autoSize = stageJS.TextFieldAutoSize.LEFT; //靠左自动大小\n                        this.textField.scaleX = this.textField.scaleY = 1.0; //宽度和高度缩放比例\n                        var wid = this.textField.width; //每行文字的宽度\n                        var hei = this.textField.height; //每行文字的高度\n                        var wFlg;\n                        var x;\n                        var y;\n                        wFlg = this.textField.width > this.textField.height; //每行文字扁平为1，竖直为0；\n                        scale = wFlg ? 500 / this.textField.width : 500 / this.textField.height; //根据每行文字扁平或者竖直调整scale缩放函数\n                        m.identity();\n                        m.scale(scale, scale); //根据scale缩放文字图像\n                        x = (700 - this.textField.width * scale) * .5; //水平位移量\n                        y = (700 - this.textField.height * scale) * .5; //垂直位移量\n                        m.translate(x, y); //将文字图像显示在当前位移量位置\n                        canvas.fillRect(canvas.rect, 0);\n                        canvas.drawWithQuality(this.textField, m, null, null, null, true, stageJS.StageQuality.HIGH); //在新的位置显示文字\n                        rect = canvas.getColorBoundsRect(0xFF000000, 0x00000000, false); //rect是对字符图像的抠图矩形\n                        if (rect && rect.width > 0 && rect.height > 0) { //如果有内容显示，非全白\n                            if (_drawY + rect.height > uniqlo.AppVals.TEXTURE_WIDTH) { //如果文字行显示超过范围（正方形区域)\n                                col++; //多增加一列文字\n                                if (col > 3) { //最多增加到三列，否则提醒\n                                    console.log(\"SORRY,OVER THE TEXTURE!!!\", this.layouts.length);\n                                    break;\n                                }\n                                //则将超出的部分显示在第一行右侧（+512）\n                                _drawY = 0;\n                                _drawX += 512;\n                            }\n                            m2.identity();\n                            m2.scale(scale, scale);\n                            //无论是否有右侧多的部分，如果有右侧部分，只显示右侧部分\n                            m2.translate(x - rect.x + _drawX, y - rect.y + _drawY); //重新调整水平和垂直位移量\n                            bmd.drawWithQuality(this.textField, m2, null, null, null, true, stageJS.StageQuality.HIGH); //显示新布局的图像\n                            lo = new uniqlo.LayoutObject;\n                            lo.setup(this.mCtx3D, this.mIndicies, this.projectionMatrix);\n                            lo.textIndex = i;\n                            lo.setRectangleType(rect, _drawX, _drawY, 1.0 / scale);\n                            lo.orgX = (x - rect.x - rect.width * .5) / scale;\n                            lo.orgY = (y - rect.y - rect.height * .5) / scale;\n                            this.layouts.push(lo); //新的布局压栈\n                            _drawY += rect.height + 2; //ちょっと隙間空けとく//留出一点儿空隙\n                        }\n                    }\n                }\n                else if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_STAMP) {\n                    // \tvar _stamps:Array<StampObject>=this._stampView._stamps;\n                    // \tfor(i=0;i<_stamps.length;i++){\n                    // \t\t//未登録\n                    // \t\tvar bm:stageJS.BitmapData=_stamps[i].contents.bitmapData;\n                    // \t\tcanvas.fillRect(canvas.rect,0);\n                    // \t\tscale=1.0//缩放比例为1\n                    // \t\tm.identity();\n                    // \t\tif(bm.width>512||bm.height>512){\n                    // \t\t\tscale = bm.width>bm.height?512.0/bm.width:512.0/bm.height;//根据stamp的高度和宽度调整缩放比例\n                    // \t\t}\n                    // \t\tm.scale(scale,scale);\n                    // \t\tcanvas.draw(bm,m,null,null,null,true);\n                    // \t\trect=canvas.getColorBoundsRect(0xFF000000,0x00000000,false);\n                    // \t\tif(rect&&rect.width>0&&rect.height>0){\n                    // \t\t\tif(_drawY+rect.height>AppVals.TEXTURE_WIDTH){\n                    // \t\t\t\tcol++;\n                    // \t\t\t\tif(col>3){\n                    // \t\t\t\t\tconsole.log(\"SORRY,OVER THE TEXTURE!!!\",this.layouts.length);\n                    // \t\t\t\t\tbreak;\n                    // \t\t\t\t}\n                    // \t\t\t\t_drawY=0;\n                    // \t\t\t\t_drawX+=512;\n                    // \t\t\t}\n                    // \t\t\tm2.identity()\n                    // \t\t\tm2.scale(scale,scale);\n                    // \t\t\tm2.translate(-rect.x+_drawX,-rect.y+_drawY);\n                    // \t\t\tbmd.draw(bm,m2,null,null,null,true);\n                    // \t\t\tlo=new stageJS.LayoutObject;\n                    // \t\t\tlo.setup(this.mCtx3D,this.mIndicies,this.projectionMatrix);\n                    // \t\t\tlo.textIndex=i;\n                    // \t\t\tlo.setRectangleType(rect,_drawX,_drawY,1.0/scale);\n                    // \t\t\tlo.orgX=(rect.x-rect.width*.5)/scale;\n                    // \t\t\tlo.orgY=(rect.y-rect.height*.5)/scale;\n                    // \t\t\tlo.stampID=_stamps[i].id;\n                    // \t\t\tthis.layouts.push(lo);\n                    // \t\t\t_drawY+=rect.height+2;//ちょっと隙間空けとく//留出点儿空隙\n                    // \t\t}\n                    // \t}\n                    // }\n                    // this.mainTexture=Stage3DHelper.uploadTexture(this.mCtx3D,bmd,stageJS.Context3DTextureFormat.BGRA,true,true);\n                    // for(i=0;i<this.layouts.length;i++){\n                    // \tif(this.layouts[i].texture==null)this.layouts[i].setTexture(this.mainTexture);\n                }\n            }\n            else { //如果不是文字和stamp\n                if (this._srcBmd.width == uniqlo.UTItemManager.IMAGE_WIDTH && this._srcBmd.height == uniqlo.UTItemManager.IMAGE_HEIGHT) {\n                    this.mainTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this._srcBmd, stageJS.Context3DTextureFormat.BGRA, false, false, 'mainTexture', true);\n                }\n                else {\n                    _bmd = new stageJS.BitmapData(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, true, 0);\n                    m.scale(_bmd.width / this._srcBmd.width, _bmd.height / this._srcBmd.height);\n                    _bmd.draw(this._srcBmd, m, null, null, null, true);\n                    this.mainTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, _bmd, stageJS.Context3DTextureFormat.BGRA, true, true, 'mainTexture', true);\n                }\n                rect = this._srcBmd.getColorBoundsRect(0xFF000000, 0x00000000, false); //抠图图像区域\n                var lo2 = new uniqlo.LayoutObject;\n                lo2.setup(this.mCtx3D, this.mIndicies, this.projectionMatrix);\n                lo2.setRectangle(rect, 1);\n                lo2.setTexture(this.mainTexture);\n                this.layouts.push(lo2);\n            }\n            /////////////////////////////////////////////////////////////////////////////////初期イメージ//初期图像\n            scale = canvas.width / Math.max(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT);\n            m.identity();\n            m.scale(scale, scale);\n            canvas.fillRect(canvas.rect, 0);\n            canvas.draw(this._srcBmd, m, null, null, null, true);\n            rect = canvas.getColorBoundsRect(0xFF000000, 0x00000000, false);\n            _bmd = new stageJS.BitmapData(512, 512, true, 0);\n            s2 = 512 / Math.max(rect.width, rect.height);\n            m.identity();\n            m.scale(scale, scale);\n            m.translate(-rect.x, -rect.y);\n            m.scale(s2, s2 * uniqlo.UTItemManager.IMAGE_WIDTH / uniqlo.UTItemManager.IMAGE_HEIGHT);\n            _bmd.draw(this._srcBmd, m, null, null, null, true);\n            rect.width = rect.width * s2 * 4;\n            rect.height = rect.height * s2 * 4;\n            s2 = 1 / (scale * s2 * 4);\n            this.typeMainLayouts = new uniqlo.LayoutObject;\n            this.typeMainLayouts.setup(this.mCtx3D, this.mIndicies, this.projectionMatrix);\n            this.typeMainLayouts.setRectangleType(rect, 0, 0, s2);\n            this.typeMainLayouts.setTexture(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, _bmd, stageJS.Context3DTextureFormat.BGRA, true, true, '', true));\n            this.typeMainLayouts.x = rect.width * .5 * s2 + rect.x / scale;\n            this.typeMainLayouts.y = rect.height * .5 * s2 + rect.y / scale;\n            if (this.perticles.length > 0 && this._isMotion) {\n                console.log(\"restore perticle layouts\");\n                for (i = 0; i < this.perticles.length; i++) {\n                    this.perticles[i].updateLayoutObject(this.layouts[this.perticles[i].index]);\n                }\n            }\n            else {\n                this.clear();\n            }\n            // this.blendMode = 'LAYOUT';\n        }\n        draw() {\n            var i;\n            this.mCtx3D.clear(0, 0, 0, 0);\n            // this.mCtx3D.clear(0,0,0,255);\n            for (i = 0; i < this.perticles.length; i++) {\n                this.perticles[i].draw();\n                this.perticles[i].dumpingForce = this.force;\n            }\n            this.force *= 0.95;\n        }\n        addedForce(_x, _y) {\n            if (this.force < 0.3)\n                this.counter = 51;\n            this.force = 1;\n            this.counter++;\n            if (this.counter > 10) {\n                this._isMotion = true;\n                //perticles.length=0;\n                var num = this.perticles.length;\n                for (var i = 0; i < num;) {\n                    if (this.perticles[i].willDelete) {\n                        this.perticles.splice(i, 1);\n                        num--;\n                    }\n                    else {\n                        this.perticles[i].willDelete = true;\n                        i++;\n                    }\n                }\n                uniqlo.LayoutPericleGenelator.generateLayout(this.perticles, this.layouts, this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_TYPO, this.weakMode);\n                //根据图像类型，晃动时，产生多个图像图层\n                //这个方法里，有摇动时，产生多个图像的方法；\n                this.counter = 0;\n            }\n            for (i = 0; i < num;) { //对不需要显示的图层，进行删除\n                if (this.perticles[i].willDelete) {\n                    this.perticles.splice(i, 1);\n                    num--;\n                }\n                else {\n                    i++;\n                }\n            }\n        }\n        captureToBitmap(bmd) {\n            var btmap;\n            var m;\n            var bmode;\n            if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_TYPO || this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_STAMP) {\n                if (this._isMotion) {\n                    var i;\n                    var po;\n                    var lo;\n                    var num = this.perticles.length;\n                    m = new uniqlo.Matrix;\n                    btmap = new stageJS.BitmapData(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, true, 0);\n                    if (this.srcViewId == uniqlo.AppStoryDefs.VIEW_SRC_TYPO) { //如果是文字，根据perticles每个文字行，进行不同位置显示\n                        for (i = 0; i < this.perticles.length; i++) {\n                            po = this.perticles[i];\n                            m.identity();\n                            lo = this.layouts[po.index];\n                            this.textField.htmlText = this.texts[lo.textIndex];\n                            m.translate(lo.orgX, lo.orgY);\n                            m.rotate(po._angle);\n                            m.scale(po._scale, po._scale);\n                            m.translate(po._x, po._y);\n                            btmap.drawWithQuality(this.textField, m, null, null, null, true, stageJS.StageQuality.HIGH);\n                        }\n                    }\n                    else {\n                        //スタンプDRAW//stampDRAW\n                        var scale;\n                        var _bm = new stageJS.Bitmap(null, \"auto\", true);\n                        var stampManager = uniqlo.UTStampManager.getActive();\n                        // var stampCacheObject:Object=this._stampView.stampCacheObject;\n                        var _bd = null;\n                        for (var j = 0; j < this.layouts.length; j++) {\n                            lo = this.layouts[j];\n                            for (i = 0; i < this.perticles.length; i++) {\n                                po = this.perticles[i];\n                                if (po.index != j)\n                                    continue;\n                                var useThumb = po._scale < 0.5;\n                                var _mbd;\n                                var _thumbScale = 0;\n                                if (useThumb) {\n                                    // var _stamps:Array<StampObject>=this._stampView._stamps;\n                                    // _mbd=stampCacheObject[lo.stampID][0];\n                                    _thumbScale = 1.0;\n                                }\n                                else {\n                                    // if(_bd==null)_bd=FileManager.loadCache(stampCacheObject[lo.stampID][4],stampCacheObject[lo.stampID][2],stampCacheObject[lo.stampID][3],true,0);\n                                    _mbd = _bd;\n                                    _thumbScale = stampManager.ThumbnailScale;\n                                }\n                                _bm.bitmapData = _mbd;\n                                _bm.smoothing = true;\n                                scale = 1; //AppVals.IMAGE_WIDTH / photoMask.width;\n                                var stampScale = po._scale;\n                                var r = lo.angle;\n                                m.identity();\n                                m.translate(-_mbd.width * .5, -_mbd.height * .5);\n                                m.rotate(po._angle);\n                                m.scale(stampScale / _thumbScale * scale, stampScale / _thumbScale * scale);\n                                m.translate(po._x, po._y);\n                                if (stampManager.LayoutFringe) {\n                                    var whiteEdgeAA = new stageJS.GlowFilter(stampManager.EdgeColor, 1, 2, 2, 10, 4, false, false);\n                                    var whiteEdge2 = new stageJS.GlowFilter(stampManager.EdgeColor, 1, stampManager.EdgeWidth * stampScale * scale, stampManager.EdgeWidth * stampScale * scale, 300, 4, false, false);\n                                    _bm.filters = [whiteEdge2, whiteEdgeAA];\n                                    btmap.drawWithQuality(_bm, m, null, null, null, true, stageJS.StageQuality.HIGH);\n                                }\n                                else {\n                                    btmap.drawWithQuality(_mbd, m, null, null, null, true, stageJS.StageQuality.HIGH);\n                                }\n                            }\n                            if (_bd != null)\n                                _bd.dispose();\n                            _bd = null;\n                        }\n                    }\n                }\n                else {\n                    btmap = this._srcBmd;\n                }\n                if (this.blendMode == uniqlo.BlendMode.ERASE) {\n                    this.mFBO.dispose();\n                    this.mFBO = this.mCtx3D.createTexture(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, stageJS.Context3DTextureFormat.BGRA, true);\n                    this.mCtx3D.setRenderToTexture(this.mFBO, false, 4);\n                    this.mCtx3D.clear(0, 0, 0, 0);\n                    this.mUniformMatrix[0] = 0;\n                    this.mUniformMatrix[1] = 0;\n                    this.mUniformMatrix[2] = 0;\n                    this.mUniformMatrix[3] = 1024;\n                    this.mUniformColor[0] = 1;\n                    this.mUniformColor[1] = 1;\n                    this.mUniformColor[2] = 1;\n                    var mainTexture;\n                    if (btmap.width == uniqlo.AppVals.TEXTURE_WIDTH && btmap.height == uniqlo.AppVals.TEXTURE_WIDTH) {\n                        mainTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, btmap, stageJS.Context3DTextureFormat.BGRA, false, false);\n                    }\n                    else {\n                        var _bmd = new stageJS.BitmapData(uniqlo.AppVals.TEXTURE_WIDTH, uniqlo.AppVals.TEXTURE_WIDTH, true, 0);\n                        m = new uniqlo.Matrix;\n                        m.scale(_bmd.width / btmap.width, _bmd.height / btmap.height);\n                        _bmd.draw(btmap, m, null, null, null, true);\n                        mainTexture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, _bmd, stageJS.Context3DTextureFormat.BGRA, false, false);\n                    }\n                    this.mCtx3D.setProgram(this.mNoMipShader);\n                    uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, mainTexture, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                    this.mCtx3D.setProgram(this.mMipShader);\n                    super.captureToBitmap(bmd);\n                }\n                else {\n                    if (this._bmdBackImage != null && !uniqlo.UTStampManager.getActiveLayerTop())\n                        bmd.copyPixels(this._bmdBackImage, this._bmdBackImage.rect, { x: 0, y: 0 });\n                    bmode = this.blendMode == uniqlo.BlendMode.ALPHA ? null : this.blendMode;\n                    var ct = this.blendMode == uniqlo.BlendMode.ALPHA ? new uniqlo.ColorTransform(1, 1, 1, 0.6) : null;\n                    bmd.draw(btmap, null, ct, bmode);\n                }\n                if (this._isMotion)\n                    btmap.dispose();\n            }\n            else {\n                if (this._isMotion || this.blendMode == uniqlo.BlendMode.ERASE) {\n                    super.captureToBitmap(bmd);\n                }\n                else {\n                    if (this._bmdBackImage != null && !uniqlo.UTStampManager.getActiveLayerTop())\n                        bmd.copyPixels(this._bmdBackImage, this._bmdBackImage.rect, { x: 0, y: 0 });\n                    bmode = this.blendMode == uniqlo.BlendMode.ALPHA ? null : this.blendMode;\n                    var _ct = this.blendMode == uniqlo.BlendMode.ALPHA ? new uniqlo.ColorTransform(1, 1, 1, 0.6) : null;\n                    bmd.draw(this._srcBmd, null, _ct, bmode);\n                }\n            }\n        }\n        clear() {\n            uniqlo.LayoutPericleGenelator.layoutReset();\n            this._isMotion = false;\n            this.counter = 0;\n            this.force = 1;\n            this.perticles.length = 0;\n            var i;\n            var po;\n            po = new uniqlo.perticleObject(this.typeMainLayouts, -1);\n            po.willDelete = false;\n            po.setPositon(this.typeMainLayouts.x, this.typeMainLayouts.y, this.typeMainLayouts.scale, this.typeMainLayouts.angle);\n            this.perticles.push(po);\n        }\n    }\n    LayoutImpl.bm = new stageJS.Bitmap;\n    uniqlo.LayoutImpl = LayoutImpl;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class Vec4 {\n        //map xyz to rgb like glsl\n        /*\n        public function get r():Number{return r;}\n        public function get g():Number{return g;}\n        public function get b():Number{return b;}\n        public function get a():Number{return a;}\n        public function set r(_v:Number):void{x=_v;}\n        public function set g(_v:Number):void{y=_v;}\n        public function set b(_v:Number):void{z=_v;}\n        public function set a(_v:Number):void{w=_v;}\n        */\n        constructor(_x = 0, _y = 0, _z = 0, _w = 0) {\n            this.x = _x;\n            this.y = _y;\n            this.z = _z;\n            this.w = _w;\n        }\n        multiply4(src) {\n            this.x *= src.x;\n            this.y *= src.y;\n            this.z *= src.z;\n            this.w *= src.w;\n        }\n        multiplyed4(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.multiply4(src);\n            return ret;\n        }\n        add4(src) {\n            this.x += src.x;\n            this.y += src.y;\n            this.z += src.z;\n            this.w += src.w;\n        }\n        added4(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.add4(src);\n            return ret;\n        }\n        substract4(src) {\n            this.x -= src.x;\n            this.y -= src.y;\n            this.z -= src.z;\n            this.w -= src.w;\n        }\n        substracted4(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.substract4(src);\n            return ret;\n        }\n        division4(src) {\n            this.x /= src.x;\n            this.y /= src.y;\n            this.z /= src.z;\n            this.w /= src.w;\n        }\n        divisioned4(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.division4(src);\n            return ret;\n        }\n        //////////////////////////////////////////////////////////////\n        multiply(src) {\n            this.x *= src;\n            this.y *= src;\n            this.z *= src;\n            this.w *= src;\n        }\n        multiplyed(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.multiply(src);\n            return ret;\n        }\n        add(src) {\n            this.x += src;\n            this.y += src;\n            this.z += src;\n            this.w += src;\n        }\n        added(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.add(src);\n            return ret;\n        }\n        substract(src) {\n            this.x -= src;\n            this.y -= src;\n            this.z -= src;\n            this.w -= src;\n        }\n        substracted(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.substract(src);\n            return ret;\n        }\n        division(src) {\n            this.x /= src;\n            this.y /= src;\n            this.z /= src;\n            this.w /= src;\n        }\n        divisioned(src) {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.division(src);\n            return ret;\n        }\n        dot(src) {\n            return this.x * src.x + this.y * src.y + this.z * src.z + this.w * src.w;\n        }\n        rotate2d(angle) {\n            this.rotate2dRad(angle * Math.PI / 180.0);\n        }\n        rotate2dRad(angle) {\n            var xrot = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n            this.y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n            this.x = xrot;\n        }\n        normalize() {\n            var l = this.length();\n            if (l > 0) {\n                this.x /= l;\n                this.y /= l;\n                this.z /= l;\n                this.w /= l;\n            }\n        }\n        length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        }\n        normalized() {\n            var ret = new Vec4(this.x, this.y, this.z, this.w);\n            ret.normalize();\n            return ret;\n        }\n    }\n    uniqlo.Vec4 = Vec4;\n})(uniqlo || (uniqlo = {}));\n/// <reference path=\"RemixBaseImpl.ts\" />\n/// <reference path=\"helpers/objects/Vec4.ts\" />\nvar uniqlo;\n(function (uniqlo) {\n    class MOMA01Impl extends uniqlo.RemixBaseImpl {\n        constructor(_weakMode, particle) {\n            super(true, _weakMode);\n            this.knlHeight = 256 * 2;\n            this.knlWidth = this.knlHeight * uniqlo.UTItemManager.IMAGE_WIDTH / uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.prtHeight = 30 * 2;\n            this.prtWidth = this.prtHeight * uniqlo.UTItemManager.IMAGE_WIDTH / uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.rndWidth = uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.rndHeight = uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.mStyle = -1;\n            this.changeNextBtnCallback = null;\n            this.optImage = null;\n            this.srcImage = null;\n            this.BOOST_SPEED = 2;\n            this.LIGHT_SPEED = 2;\n            this.isMonoral = false;\n            this._colorNoize = 0.066;\n            this._brigtnessNoize = 0.066;\n            this._alpha = 1;\n            this._alphaStep = 0.095;\n            this._scale = 0.7;\n            this._lifeLength = 300 / this.BOOST_SPEED;\n            this._brightness = 1;\n            this._contrast = 1.5;\n            this._saturation = 1.5;\n            this._BORDER_MARGIN = 50;\n            this.toggler = 0;\n            this.mActivePow = 0;\n            this.mTime = -1;\n            this._colorNoize_s = 0.066;\n            this._brigtnessNoize_s = 0.066;\n            this._alpha_s = 1;\n            this._alphaStep_s = 0.095;\n            this._scale_s = 0.7;\n            this._lifeLength_s = 300 / this.BOOST_SPEED;\n            this._brightness_s = 1;\n            this._contrast_s = 1.5;\n            this._saturation_s = 1.5;\n            this._colorNoize_e = 0.066;\n            this._brigtnessNoize_e = 0.066;\n            this._alpha_e = 1;\n            this._alphaStep_e = 0.095;\n            this._scale_e = 0.7;\n            this._lifeLength_e = 300 / this.BOOST_SPEED;\n            this._brightness_e = 1;\n            this._contrast_e = 1.5;\n            this._saturation_e = 1.5;\n            this.mNeedCache = true;\n            this.parts = new Array();\n            var i;\n            this.knlHeight = 256;\n            this.knlWidth = Math.floor(this.knlHeight * uniqlo.UTItemManager.IMAGE_WIDTH / uniqlo.UTItemManager.IMAGE_HEIGHT);\n            this.prtHeight = 64;\n            this.prtWidth = Math.floor(this.prtHeight * uniqlo.UTItemManager.IMAGE_WIDTH / uniqlo.UTItemManager.IMAGE_HEIGHT);\n            this.rndWidth = uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.rndHeight = uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.KernelCovorRangeX = this.rndWidth / (this.knlWidth - 1) * 5;\n            this.KernelCovorRangeY = this.rndHeight / (this.knlHeight - 1) * 5;\n            this.particle = particle;\n            for (i = 0; i < this.prtHeight * this.prtWidth; i++) {\n                this.parts.push(new uniqlo.IPPerticles());\n            }\n            this.setStyle(this.mStyle);\n        }\n        ;\n        initWithData(stage, backBmd, srcBmd) {\n            if (this.srcImage == null) {\n                var _srcThumb = new stageJS.BitmapData(this.knlWidth, this.knlHeight, true, 0);\n                var mat = new uniqlo.Matrix;\n                mat.scale(_srcThumb.width / srcBmd.width, _srcThumb.height / srcBmd.height);\n                _srcThumb.draw(srcBmd, mat, null, null, null, true);\n                this.srcImage = _srcThumb.getPixels(_srcThumb.rect);\n                var bmd = new stageJS.BitmapData(this.knlWidth, this.knlHeight, true, 0);\n                // bmd.perlinNoise(this.knlHeight/30,this.knlHeight/30,1,Math.random()*10000,false,true);\n                bmd.perlinNoise(this.knlHeight / 30, this.knlHeight / 30, Math.random() * 10000, false, true); // BUG: removed 1\n                var rect = bmd.rect;\n                bmd.draw(_srcThumb, null, null, null, bmd.rect);\n                this.optImage = uniqlo.MOMA01ImageUtils.calcOpticalFlowByteArray(bmd);\n            }\n            super.init3D(stage, backBmd, null);\n        }\n        ContrastSaturationBrightness(color, brt, sat, con) {\n            var brtColor = new uniqlo.Vec4(color.x, color.y, color.z, color.w);\n            color.multiply(brt);\n            var intensity = brtColor.dot(MOMA01Impl.LumCoeff) * (1.0 - sat);\n            brtColor.multiply(sat);\n            brtColor.add(intensity);\n            brtColor.multiply(con);\n            var conColor = 0.5 * (1 - con);\n            brtColor.add(conColor);\n            return brtColor;\n        }\n        getRandom() {\n            return Math.random() * 2.0 - 1.0;\n        }\n        setup() {\n            this.texture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle, stageJS.Context3DTextureFormat.BGRA, false, false, 'particle');\n        }\n        ;\n        draw() {\n            this.mActivePow *= 0.90;\n            if (this.motion < 1)\n                return;\n            this.motion--;\n            this.mCtx3D.setTextureAt(0, this.texture);\n            this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n            var i;\n            var col;\n            var vec = new uniqlo.Vec4;\n            var p;\n            var srcCol = new uniqlo.Vec4;\n            this.toggler++;\n            if (this.toggler + 1 > this.LIGHT_SPEED)\n                this.toggler = 0;\n            for (i = 0; i < this.prtHeight * this.prtWidth; i++) {\n                if (i % this.LIGHT_SPEED != this.toggler)\n                    continue;\n                var pt = this.parts[i];\n                if (pt.orgAlpha) {\n                    p = uniqlo.MOMA01ImageUtils.clampi(pt.y / (this.rndHeight - 1) * (this.knlHeight - 1), 0, this.knlHeight - 1) * this.knlWidth + uniqlo.MOMA01ImageUtils.clampi(pt.x / (this.rndWidth - 1) * (this.knlWidth - 1), 0, this.knlWidth - 1);\n                    vec.x = (this.optImage[p * 2] - 127.0) * 0.02 * 10 * this.BOOST_SPEED;\n                    vec.y = (this.optImage[p * 2 + 1] - 127.0) * 0.02 * 10 * this.BOOST_SPEED;\n                    pt.x += vec.x;\n                    pt.y += vec.y;\n                    this.mUniformMatrix[0] = pt.x - this.rndWidth;\n                    this.mUniformMatrix[1] = this.rndHeight - pt.y;\n                    this.mUniformMatrix[2] = 0;\n                    this.mUniformMatrix[3] = 40 * pt.scale;\n                    this.mUniformColor[3] = pt.alpha * pt.orgAlpha;\n                    this.mUniformColor[0] = pt.r * this.mUniformColor[3];\n                    this.mUniformColor[1] = pt.g * this.mUniformColor[3];\n                    this.mUniformColor[2] = pt.b * this.mUniformColor[3];\n                    var border = this.mUniformMatrix[3] * .55;\n                    if (this.mUniformColor[3] > 0) {\n                        if (pt.x > border &&\n                            pt.y > border &&\n                            pt.x < uniqlo.UTItemManager.IMAGE_WIDTH - border &&\n                            pt.y < uniqlo.UTItemManager.IMAGE_HEIGHT - border) {\n                            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n                            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                            this.mCtx3D.drawTriangles(this.mIndicies);\n                        }\n                        else {\n                            pt.orgAlpha = 0;\n                        }\n                    }\n                    if (pt.alpha < 1) {\n                        pt.alpha += this._alphaStep;\n                        if (pt.alpha > 1)\n                            pt.alpha = 1;\n                    }\n                }\n                pt.life--;\n                if (pt.life < 0) {\n                    pt.x = pt.orgX + this.getRandom() * this.KernelCovorRangeX - this.KernelCovorRangeX * .5;\n                    pt.y = pt.orgY + this.getRandom() * this.KernelCovorRangeY - this.KernelCovorRangeY * .5;\n                    pt.life = Math.random() * this._lifeLength;\n                    pt.scale = Math.random() * this._scale + 0.1;\n                    p = uniqlo.MOMA01ImageUtils.clampi(pt.y / (this.rndHeight - 1) * (this.knlHeight - 1), 0, this.knlHeight - 1) * this.knlWidth + uniqlo.MOMA01ImageUtils.clampi(pt.x / (this.rndWidth - 1) * (this.knlWidth - 1), 0, this.knlWidth - 1);\n                    srcCol.x = this.srcImage[p * 4 + 1] / 255.0;\n                    srcCol.y = this.srcImage[p * 4 + 2] / 255.0;\n                    srcCol.z = this.srcImage[p * 4 + 3] / 255.0;\n                    col = this.ContrastSaturationBrightness(srcCol, this._brightness, this.isMonoral ? 0.1 : this._saturation, this._contrast);\n                    col.x = uniqlo.MOMA01ImageUtils.clampf(col.x, 0, 1);\n                    col.y = uniqlo.MOMA01ImageUtils.clampf(col.y, 0, 1);\n                    col.z = uniqlo.MOMA01ImageUtils.clampf(col.z, 0, 1);\n                    var vn = this.getRandom() * this._brigtnessNoize;\n                    pt.r = col.x + this.getRandom() * this._colorNoize + vn;\n                    pt.g = col.y + this.getRandom() * this._colorNoize + vn;\n                    pt.b = col.z + this.getRandom() * this._colorNoize + vn;\n                    pt.orgAlpha = this.srcImage[p * 4] / 255.0;\n                    pt.alpha = this._alpha;\n                }\n            }\n            this.dirty = false;\n        }\n        addedForce(_x, _y) {\n            this.motion += 1;\n            var t = (new Date()).getTime();\n            // this.mActivePow+=Math.min(Math.sqrt(_x*_x+_y*_y)*(t-this.mTime)/1000,1.0);\n            this.mActivePow += Math.min(Math.sqrt(_x * _x + _y * _y) * (t - this.mTime) / 1500, 0.5);\n            this.mTime = t;\n            var power = (this.mActivePow - 5) / 4.0;\n            if (power < 0)\n                power = 0;\n            if (power > 1)\n                power = 1;\n            this._colorNoize = this._colorNoize_s + (this._colorNoize_e - this._colorNoize_s) * power;\n            this._brigtnessNoize = this._brigtnessNoize_s + (this._brigtnessNoize_e - this._brigtnessNoize_s) * power;\n            this._alpha = this._alpha_s; //+(this._alpha_e-this._alpha_s)*power; // BUG 886\n            this._alphaStep = this._alphaStep_s; //+(this._alphaStep_e-this._alphaStep_s)*power; // BUG 886\n            this._scale = this._scale_s + (this._scale_e - this._scale_s) * power;\n            this._lifeLength = this._lifeLength_s + (this._lifeLength_e - this._lifeLength_s) * power;\n            this._brightness = this._brightness_s + (this._brightness_e - this._brightness_s) * power;\n            this._contrast = this._contrast_s + (this._contrast_e - this._contrast_s) * power;\n            this._saturation = this._saturation_s + (this._saturation_e - this._saturation_s) * power;\n            if (!this._isEnableNextBtn && this._counter > 10) {\n                this._isEnableNextBtn = true;\n                this.changeNextBtnCallback(true);\n            }\n            this._counter++;\n            this.dirty = true;\n        }\n        setStyle(style) {\n            this.mStyle = style;\n            switch (this.mStyle) {\n                case 1:\n                    this._colorNoize_s = 0.066;\n                    this._brigtnessNoize_s = 0.2;\n                    this._alpha_s = 1;\n                    this._alphaStep_s = 0.095;\n                    this._scale_s = 0.5;\n                    this._lifeLength_s = 300 / this.BOOST_SPEED;\n                    this._brightness_s = 1;\n                    this._contrast_s = 1.5;\n                    this._saturation_s = 1.5;\n                    this._colorNoize_e = 0.5;\n                    this._brigtnessNoize_e = 0.5;\n                    this._alpha_e = 1;\n                    this._alphaStep_e = 1;\n                    this._scale_e = 0.32;\n                    this._lifeLength_e = 500 / this.BOOST_SPEED;\n                    this._brightness_e = 1;\n                    this._contrast_e = 1.5;\n                    this._saturation_e = 1.5;\n                    break;\n                case 2:\n                    this._colorNoize_s = 0.5;\n                    this._brigtnessNoize_s = 0.1215;\n                    this._alpha_s = 1;\n                    this._alphaStep_s = 1;\n                    this._scale_s = 0.8;\n                    this._lifeLength_s = 4 / this.BOOST_SPEED;\n                    this._brightness_s = 1;\n                    this._contrast_s = 1.5;\n                    this._saturation_s = 1.29;\n                    this._colorNoize_e = 0.2;\n                    this._brigtnessNoize_e = 0.123;\n                    this._alpha_e = 1;\n                    this._alphaStep_e = 1;\n                    this._scale_e = 1.5;\n                    this._lifeLength_e = 4 / this.BOOST_SPEED;\n                    this._brightness_e = 1;\n                    this._contrast_e = 1.5;\n                    this._saturation_e = 1.29;\n                    break;\n                default:\n                    this._colorNoize_s = 0.1;\n                    this._brigtnessNoize_s = 0.1;\n                    this._alpha_s = 1; // BUG: UTM-699 0 --> 1 edit by 孔令开\n                    this._alphaStep_s = 0.02;\n                    this._scale_s = 1.0; // 1.5 // BUG: 714 ;\n                    this._lifeLength_s = 50 / this.BOOST_SPEED;\n                    this._brightness_s = 1;\n                    this._contrast_s = 1.505;\n                    this._saturation_s = 1.28;\n                    this._colorNoize_e = 0.2;\n                    this._brigtnessNoize_e = 0.1;\n                    this._alpha_e = 0;\n                    this._alphaStep_e = 0.03;\n                    this._scale_e = 1.0;\n                    this._lifeLength_e = 50 / this.BOOST_SPEED;\n                    this._brightness_e = 1;\n                    this._contrast_e = 1.505;\n                    this._saturation_e = 1.28;\n                    break;\n            }\n            this.clear();\n        }\n        clear() {\n            var y;\n            var x;\n            this._isEnableNextBtn = false;\n            if (this.changeNextBtnCallback != null)\n                this.changeNextBtnCallback(false);\n            this._counter = 0;\n            this.motion = 0;\n            this.mActivePow = 0;\n            for (y = 0; y < this.prtHeight; y++) {\n                for (x = 0; x < this.prtWidth; x++) {\n                    this.parts[Math.floor(y * this.prtWidth + x)].orgX = this.rndWidth * x / (this.prtWidth) + (this.rndWidth / this.prtWidth) * .5;\n                    this.parts[Math.floor(y * this.prtWidth + x)].orgY = this.rndHeight * y / (this.prtHeight) + (this.rndHeight / this.prtHeight) * .5;\n                    this.parts[Math.floor(y * this.prtWidth + x)].life = 150 * Math.random();\n                    this.parts[Math.floor(y * this.prtWidth + x)].alpha = 0;\n                    this.parts[Math.floor(y * this.prtWidth + x)].orgAlpha = 0;\n                }\n            }\n            if (this.mCtx3D)\n                super.clear();\n        }\n    }\n    MOMA01Impl.LumCoeff = new uniqlo.Vec4(0.2125, 0.7154, 0.0721);\n    MOMA01Impl.AvgLumin = new uniqlo.Vec4(0.5, 0.5, 0.5);\n    uniqlo.MOMA01Impl = MOMA01Impl;\n})(uniqlo || (uniqlo = {}));\n/// <reference path=\"RemixBaseImpl.ts\" />\nvar uniqlo;\n(function (uniqlo) {\n    class MOMA02Impl extends uniqlo.RemixBaseImpl {\n        constructor(_weakMode) {\n            super(true, _weakMode);\n            this.SHADOW_WIDTH = 30;\n            this.MIN_WIDTH = 100;\n            this.MAX_PERTS = 60; // KLK : 40->60\n            this.activeIndex = 0;\n            this.SCALE_BIAS_UP = 4;\n            this.SCALE_BIAS = 1.0 / this.SCALE_BIAS_UP;\n            //private var isFaceRecognize:Boolean;\n            this.BOOST_SPEED = 2;\n            this.LIGHT_SPEED = 5;\n            this.mStyle = 0;\n            this.changeNextBtnCallback = null;\n            this.mActivePow = 0;\n            this.mTime = -1;\n            this._animaCounter = 0;\n            stageJS.Context3D.MAX_TEXTURE = 6;\n            this.parts = new Array();\n            for (var i = 0; i < this.MAX_PERTS; i++)\n                this.parts.push(new uniqlo.MOMA02CPerticles());\n            this.mask = new stageJS.Shape();\n            this.tmpView = new stageJS.MovieClip();\n            this.tmpViewlayer = new stageJS.Bitmap();\n            this.tmpView.addChild(this.tmpViewlayer);\n            this.tmpView.addChild(this.mask);\n            this.tmpViewlayer.mask = this.mask;\n            this.shadwoPreviewActive = new stageJS.DropShadowFilter(0, 0, 0, 0.3, this.SHADOW_WIDTH * this.SCALE_BIAS, this.SHADOW_WIDTH * this.SCALE_BIAS, 1.0, 2);\n            this.shadwoOutActive = new stageJS.DropShadowFilter(0, 0, 0, 0.3, this.SHADOW_WIDTH, this.SHADOW_WIDTH, 1.0, 2);\n            this.shadwoInPreviewActive = new stageJS.DropShadowFilter(0, 0, 0, 1, this.SHADOW_WIDTH * this.SCALE_BIAS * .2, this.SHADOW_WIDTH * this.SCALE_BIAS * .2, 1.0, 2);\n            this.shadwoINOutActive = new stageJS.DropShadowFilter(0, 0, 0, 1, this.SHADOW_WIDTH * .2, this.SHADOW_WIDTH * .2, 1.0, 2);\n            this.colorManager = new stageJS.AdjustColor;\n            this.colorManager.brightness = 0;\n            this.colorManager.contrast = 0;\n            this.colorManager.saturation = 0;\n            this.colFilter = new stageJS.ColorMatrixFilter;\n            this._srcTypePhoto = uniqlo.UTCreateMain.getActiveSrcType() == uniqlo.AppStoryDefs.VIEW_SRC_PHOTO;\n        }\n        ;\n        initWithData(stage, backBmd, srcBmd) {\n            this._srcBmd = srcBmd;\n            this.srcRect = this._srcBmd.getColorBoundsRect(0xff000000, 0, false);\n            this._thumBmd = new stageJS.BitmapData(this._srcBmd.width * this.SCALE_BIAS, this._srcBmd.height * this.SCALE_BIAS, true, 0);\n            var mat;\n            mat = new uniqlo.Matrix;\n            mat.scale(this._thumBmd.width / this._srcBmd.width, this._thumBmd.height / this._srcBmd.height);\n            this._thumBmd.draw(this._srcBmd, mat, null, null, null, true);\n            this.tmpViewlayer.bitmapData = this._thumBmd;\n            this.tmpViewlayer.smoothing = true;\n            super.init3D(stage, backBmd, null);\n        }\n        getRandom() {\n            return Math.random() * 2.0 - 1.0;\n        }\n        setup() {\n            var i;\n            this.mFBO.dispose();\n            this.mFBO = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true);\n            for (i = 0; i < this.MAX_PERTS; i++)\n                this.parts[i].setCtx(this.mCtx3D);\n            this.recreateTexture();\n        }\n        draw() {\n            this.mCtx3D.clear(0, 0, 0, 0);\n            this.mCtx3D.setProgram(this.mNoMipShader);\n            this.mCtx3D.setVertexBufferAt(0, this.mVerts, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mFBOMatrix, true);\n            var i;\n            for (i = this.activeIndex; i < this.parts.length; i++) {\n                this.parts[i].draw(this.mIndicies);\n            }\n            for (i = 0; i < this.activeIndex; i++) {\n                this.parts[i].draw(this.mIndicies);\n            }\n            this.mCtx3D.setProgram(this.mMipShader);\n            this.mActivePow *= 0.90;\n        }\n        recreateTexture() {\n            var i;\n            this.tmpViewlayer.bitmapData = this._thumBmd;\n            var mat = new uniqlo.Matrix;\n            var rect = new Rectangle;\n            var scale = this.SCALE_BIAS;\n            var scale_up = 1;\n            for (i = 0; i < this.MAX_PERTS; i++) {\n                var pt = this.parts[i];\n                if (!pt.bAllocated)\n                    continue;\n                rect.x = (pt.org_x - pt.org_width * .5);\n                rect.y = (pt.org_y - pt.org_height * .5);\n                rect.width = pt.org_width;\n                rect.height = pt.org_height;\n                this.updateMask(rect, this.mStyle, scale);\n                var _bmd = new stageJS.BitmapData(pt.texSize * scale_up, pt.texSize * scale_up, true, 0);\n                mat.identity();\n                mat.translate(-pt.tx * scale_up, -pt.ty * scale_up);\n                this.colorManager.hue = pt.hue;\n                this.colFilter.matrix = this.colorManager.CalculateFinalFlatArray();\n                this.tmpView.filters = [this.colFilter, this.shadwoPreviewActive, this.shadwoInPreviewActive];\n                _bmd.drawWithQuality(this.tmpViewlayer.bitmapData.canvas, mat, null, null, null, true, stageJS.StageQuality.HIGH);\n                pt.updateTexture(_bmd);\n                _bmd.dispose();\n            }\n        }\n        setStyle(style) {\n            this.mStyle = style;\n            this.clear();\n        }\n        updateMask(rect, style, scale) {\n            this.mask.graphics.clear();\n            this.mask.graphics.beginFill(0xFFFFFF, 1);\n            if (style == 1) {\n                //Full Circler\n                this.mask.graphics.drawRoundRect(this.SHADOW_WIDTH * scale, this.SHADOW_WIDTH * scale, (rect.width - this.SHADOW_WIDTH * 2) * scale, (rect.height - this.SHADOW_WIDTH * 2) * scale, (rect.width - this.SHADOW_WIDTH * 2) * scale, (rect.height - this.SHADOW_WIDTH * 2) * scale);\n            }\n            else if (style == 2) {\n                //Full Circler\n                var tri = new Array();\n                for (var i = 0; i < 3; i++) {\n                    tri.push(this.SHADOW_WIDTH * scale + Math.random() * (rect.width - this.SHADOW_WIDTH * 2) * scale);\n                    tri.push(this.SHADOW_WIDTH * scale + Math.random() * (rect.height - this.SHADOW_WIDTH * 2) * scale);\n                }\n                this.mask.graphics.drawTriangles(tri);\n            }\n            else {\n                //Rectangle\n                this.mask.graphics.drawRect(this.SHADOW_WIDTH * scale, this.SHADOW_WIDTH * scale, (rect.width - this.SHADOW_WIDTH * 2) * scale, (rect.height - this.SHADOW_WIDTH * 2) * scale);\n            }\n            this.mask.graphics.endFill();\n            this.tmpViewlayer.x = -rect.x * scale;\n            this.tmpViewlayer.y = -rect.y * scale;\n        }\n        addedForce(_x, _y) {\n            var t = (new Date()).getTime();\n            this.mActivePow += Math.min(Math.sqrt(_x * _x + _y * _y) * (t - this.mTime) / 1000, 1.0);\n            this.mTime = t;\n            // var power:number=(this.mActivePow-5)/4.0;\n            var power = this.mActivePow; // BUG: adjusted mActivePow\n            if (power < 0)\n                power = 0;\n            if (power > 1)\n                power = 1;\n            this._animaCounter += power;\n            if (this._animaCounter < 1.0) {\n            }\n            else {\n                //\tvar maxSide:Number=1024+power*(800-1024);\n                //\tvar minSide:Number=SHADOW_WIDTH*2+MIN_WIDTH+20*(1-power);\n                this.motion += 1;\n                if (this.motion < 3)\n                    return;\n                this.motion = 0;\n                var rect = null;\n                var scale = Math.random() * 0.8 + 0.5 + (0.5 - 0.5) * (1 - power);\n                var rad = (Math.random() - 0.5) * 0.13;\n                var areaMaxWidth = uniqlo.UTItemManager.IMAGE_WIDTH;\n                var areaMaxHeight = uniqlo.UTItemManager.IMAGE_HEIGHT;\n                var W = 700;\n                var H = 600;\n                var M = 200;\n                var LONG_WID = W + (W / 2 - W) * (1 - power);\n                var SHORT_WID = H + (M - H) * (1 - power);\n                var MaxMenseki = LONG_WID * LONG_WID;\n                var MinMenseki = SHORT_WID * SHORT_WID;\n                var MIN_SIDE = this.SHADOW_WIDTH * 2 + this.MIN_WIDTH;\n                var Menseki = MinMenseki + (MaxMenseki - MinMenseki) * Math.random();\n                var SISE_MAX = Math.sqrt(Menseki);\n                if (rect == null) {\n                    rect = new Rectangle;\n                    const TEX_MAX = 1024;\n                    var area = new Rectangle;\n                    var AREA_MARGIN = 200;\n                    var AREA_MARGIN = 0;\n                    if (this.mStyle == 1 && this._srcTypePhoto)\n                        AREA_MARGIN = 0;\n                    area.x = Math.max(0, this.srcRect.x - AREA_MARGIN);\n                    area.y = Math.max(0, this.srcRect.y - AREA_MARGIN);\n                    area.width = Math.min(areaMaxWidth - area.x, this.srcRect.width + AREA_MARGIN * 2);\n                    area.height = Math.min(areaMaxHeight - area.y, this.srcRect.height + AREA_MARGIN * 2);\n                    if (this.mStyle == 1) {\n                        rect.width = rect.height = Math.sqrt(Menseki);\n                        rect.x = Math.random() * (area.width - rect.width) + area.x;\n                        rect.y = Math.random() * (area.height - rect.height) + area.y;\n                    }\n                    else {\n                        //var menseki:Number=700*700+(300*300-700*700)*power\n                        if (Math.random() < 0.5) {\n                            rect.width = Math.min(TEX_MAX, Math.max(SISE_MAX * (0.4 + Math.random())));\n                            rect.height = Math.min(TEX_MAX, Menseki / rect.width);\n                        }\n                        else {\n                            rect.height = Math.min(TEX_MAX, Math.max(SISE_MAX * (0.4 + Math.random())));\n                            rect.width = Math.min(TEX_MAX, Menseki / rect.height);\n                        }\n                        rect.x = Math.random() * (area.width - rect.width) + area.x;\n                        rect.y = Math.random() * (area.height - rect.height) + area.y;\n                    }\n                }\n                rect.width /= 4;\n                rect.height /= 4;\n                rect.x = Math.random() * area.width;\n                rect.y = Math.random() * area.height;\n                this.updateMask(rect, this.mStyle, this.SCALE_BIAS);\n                var bmd2 = new stageJS.BitmapData(rect.width * this.SCALE_BIAS, rect.height * this.SCALE_BIAS, true, 0);\n                var pt = this.parts[this.activeIndex];\n                pt.hue = 20 * (Math.random() - 0.5);\n                this.colorManager.hue = pt.hue;\n                this.colFilter.matrix = this.colorManager.CalculateFinalFlatArray();\n                this.tmpView.filters = [this.colFilter, this.shadwoPreviewActive, this.shadwoInPreviewActive];\n                // BUG: added by KLK\n                let bitmap = this.tmpViewlayer._bitmapData;\n                // let r = new Rectangle((bmd2.width-rect.width)/2 * sw, (bmd2.height-rect.height)/2 * sh, bitmap.width, bitmap.height);\n                let r = new Rectangle(rect.x * this.SCALE_BIAS, rect.y * this.SCALE_BIAS, rect.width * this.SCALE_BIAS, rect.height * this.SCALE_BIAS);\n                let canvas = document.createElement('canvas');\n                canvas.width = bitmap.canvas.width;\n                canvas.height = bitmap.canvas.height;\n                bmd2.drawWithQuality(bitmap.canvas, null, null, null, r, true, stageJS.StageQuality.HIGH);\n                if (this.mStyle == 1) {\n                    let ctx = bmd2.context;\n                    ctx.globalCompositeOperation = 'destination-in';\n                    ctx.beginPath();\n                    ctx.arc(bmd2.width / 2, bmd2.height / 2, Math.min(bmd2.width / 2, bmd2.height / 2), 0, 2 * Math.PI);\n                    ctx.fillStyle = \"rgba(0, 0, 0, 255)\";\n                    ctx.fill();\n                    // ctx.globalCompositeOperation = 'source-over';\n                    // ctx.stroke();\n                    ctx.closePath();\n                }\n                //はみ出し処理\n                var cx = Math.max(Math.abs(rect.width * .5 * scale * Math.cos(rad) - rect.height * .5 * scale * Math.sin(rad)), Math.abs(rect.width * .5 * scale * Math.cos(rad) + rect.height * .5 * scale * Math.sin(rad)));\n                var cy = Math.max(Math.abs(rect.width * .5 * scale * Math.sin(rad) + rect.height * .5 * scale * Math.cos(rad)), Math.abs(rect.width * .5 * scale * Math.sin(rad) - rect.height * .5 * scale * Math.cos(rad)));\n                var px = rect.x + rect.width * .5;\n                var py = rect.y + rect.height * .5;\n                if (px - cx < 0)\n                    scale *= px / cx;\n                if (px + cx > areaMaxWidth)\n                    scale *= (areaMaxWidth - px) / cx;\n                if (py - cy < 0)\n                    scale *= py / cy;\n                if (py + cy > areaMaxHeight)\n                    scale *= (areaMaxHeight - py) / cy;\n                pt.setup(bmd2, px, py, rect.width, rect.height, rad, scale * this.SCALE_BIAS_UP);\n                bmd2.dispose();\n            }\n            this.activeIndex++;\n            if (this.activeIndex + 1 > this.MAX_PERTS)\n                this.activeIndex = 0;\n            pt = this.parts[this.activeIndex];\n            pt.setOrgRadWithScale(0, 0);\n            if (!this._isEnableNextBtn && this.activeIndex > 3) {\n                this._isEnableNextBtn = true;\n                this.changeNextBtnCallback(true);\n            }\n        }\n        clear() {\n            this._isEnableNextBtn = false;\n            this.changeNextBtnCallback(false);\n            this._intervalPoinst = 0;\n            this.motion = 0;\n            this.activeIndex = 0;\n            this.itemIndex = 0;\n            this.partsIndex = 0;\n            this.mActivePow = 0;\n            this._animaCounter = 100;\n            for (var i = 0; i < this.MAX_PERTS; i++)\n                this.parts[i].dispose();\n            super.clear();\n        }\n    }\n    uniqlo.MOMA02Impl = MOMA02Impl;\n})(uniqlo || (uniqlo = {}));\n/// <reference path=\"RemixBaseImpl.ts\" />\nvar uniqlo;\n(function (uniqlo) {\n    class MosaicImpl extends uniqlo.RemixBaseImpl {\n        constructor(textureMosiac, _weakMode) {\n            super(true, _weakMode);\n            this.margin = 7;\n            this.InMargin = 256 / 252 * 2.2;\n            this.updatePointsX = [];\n            this.updatePointsY = [];\n            this.updatePointsLod = [];\n            this._lodSum = 0;\n            this._lod1Count = 0;\n            this.textureMosiac = textureMosiac;\n            this.textureIndex = 2;\n            this._mozWidth = Math.floor(16 * 5 / 2);\n            this._mozHeight = Math.floor(16 * 6 / 2);\n            this._mosicRemderSize = 23.9 * 2;\n            if (this.weakMode) {\n                this._mozWidth *= 3 / 2.0;\n                this._mozHeight *= 3 / 2.0;\n                this._mosicRemderSize *= 2 / 3.0;\n            }\n            //是四边空白的大小，martigX，martigY也是第一个马赛克的起始坐标\n            this._martigX = (uniqlo.UTItemManager.IMAGE_WIDTH - this._mosicRemderSize * this._mozWidth) * .5; //-_mosicRemderSize*.5;;\n            this._martigY = (uniqlo.UTItemManager.IMAGE_HEIGHT - this._mosicRemderSize * this._mozHeight) * .5; //-_mosicRemderSize*.5;;\n            this._LODLevel = new stageJS.ByteArray();\n            this._LODLevel.length = this._mozWidth * this._mozHeight;\n            this._LODLevel.position = 0;\n            while (this._LODLevel.position < this._LODLevel.length)\n                this._LODLevel.writeByte(1);\n            this._enableTransparentWhite = false; //AppVals.HISTORY==0;\n            // this.srcViewId=UTCreateMain.getActiveSrcType();\n        }\n        //private static var debugBm:Bitmap=new Bitmap\n        generateMipmapWithBitmap(_org, width, height) {\n            var mipWidth = width; //纹理贴图的宽度\n            var mipHeight = height; //纹理贴图的高度\n            var mipLevel = 0; //纹理贴图的层\n            var scaleTransform = new uniqlo.Matrix();\n            var s = (mipWidth) / (_org.width);\n            scaleTransform.identity();\n            // scaleTransform.translate(-_org.width*.5,-_org.height*.5);\n            scaleTransform.scale(mipWidth / (_org.width), mipWidth / (_org.width));\n            // scaleTransform.translate(mipWidth*.5,mipHeight*.5);\n            var bmd = _org;\n            var mipImage;\n            while (mipWidth > 0 && mipHeight > 0) { //产生图像不同级别的纹理贴图，每次规模缩小一半\n                mipImage = new stageJS.BitmapData(mipWidth, mipHeight, true, 0);\n                mipImage.draw(bmd, scaleTransform, null, null, null, false); //将原始图像处理成第一次马赛克纹理图像\n                // scaleTransform.identity();\n                scaleTransform.scale(0.5, 0.5);\n                mipLevel++; //纹理层数加1\n                mipWidth >>= 1; //宽度减少一半\n                mipHeight >>= 1; //高度减少一般\n                // bmd=mipImage;  //将纹理贴图付给bmd进行再处理\n                this._mipmaps.push(mipImage); //将纹理贴图压栈\n            }\n            // if(srcViewId!=AppStoryDefs.VIEW_SRC_PHOTO){  //如果是图片\n            if (true) { //如果是图片\n                bmd = this._mipmaps[0]; //取0层纹理贴图\n                bmd.lock();\n                var x, y, i;\n                var c;\n                var r, g, b, a;\n                for (i = 0; i < 2; i++) { //图像上下两条线，透明度乘0.65\n                    y = i == 0 ? 0 : bmd.height - 1;\n                    for (x = 0; x < bmd.width; x++) {\n                        c = bmd.getPixel32(x, y);\n                        a = ((c >> 24) & 0xFF);\n                        r = ((c >> 16) & 0xFF);\n                        g = ((c >> 8) & 0xFF);\n                        b = ((c >> 0) & 0xFF);\n                        a *= 0.65;\n                        c = (a << 24) | (r << 16) | (g << 8) | (b << 0);\n                        bmd.setPixel32(x, y, c);\n                    }\n                }\n                for (i = 0; i < 2; i++) { //图像左右两条线，透明度乘0.65\n                    x = i == 0 ? 0 : bmd.width - 1;\n                    for (y = 0; y < bmd.height; y++) {\n                        c = bmd.getPixel32(x, y);\n                        a = ((c >> 24) & 0xFF);\n                        r = ((c >> 16) & 0xFF);\n                        g = ((c >> 8) & 0xFF);\n                        b = ((c >> 0) & 0xFF);\n                        a *= 0.65;\n                        c = (a << 24) | (r << 16) | (g << 8) | (b << 0);\n                        bmd.setPixel32(x, y, c);\n                    }\n                }\n                bmd.unlock();\n                bmd = null;\n            }\n        }\n        initWithData(stage, backBmd, srcBmd) {\n            this._mipmaps = [];\n            // this.generateMipmapWithBitmap(srcBmd,this._mozWidth, this._mozHeight);\n            this.generateMipmapWithBitmap(srcBmd, srcBmd.width / this._mozWidth, srcBmd.height / this._mozHeight);\n            this.maxCellNum = this._mozHeight * this._mozWidth; //初始化时产生的马赛克数量\n            this.maxCellLod = this._mozHeight * this._mozWidth * (this._mipmaps.length - 1 - 2); //最大最终剩余马赛克数量，对最后的马赛克数量产生影响，最多7*7\n            super.init3D(stage, backBmd, null);\n        }\n        dispose() {\n            for (var i = 0; i < this._mipmaps.length; i++) {\n                this._mipmaps[i].dispose();\n                this._mipmaps[i] = null;\n            }\n            this._mipmaps.length = 0;\n            this._texture.dispose();\n            this._texture = null;\n            super.dispose();\n        }\n        setup() {\n            this._bUpdated = true;\n            this._bClear = true;\n            this.setTexture(this.textureIndex);\n        }\n        setTexture(tindex) {\n            this.textureIndex = tindex;\n            if (!this.mCtx3D)\n                return;\n            // var tex:textureMosic=new textureMosic;\n            var tex = this.textureMosiac;\n            var m = new uniqlo.Matrix();\n            // m.scale(4,4);\n            var _bmd = new stageJS.BitmapData(1024, 1024, true, 0);\n            switch (this.textureIndex) {\n                case 2:\n                    tex.gotoAndStop(2);\n                    this.margin = 7;\n                    // this.InMargin=256/252;\n                    break;\n                case 3:\n                    tex.gotoAndStop(3);\n                    this.margin = 7;\n                    // this.InMargin=256/252;\n                    break;\n                default:\n                    tex.gotoAndStop(1);\n                    this.margin = 0;\n                // this.InMargin=1;\n            }\n            if (_bmd.hasOwnProperty(\"drawWithQuality\")) {\n                // _bmd.drawWithQuality(tex,m,null,null,null,true,StageQuality.HIGH);\n                _bmd.draw(tex, m, null, null, null, true);\n            }\n            else {\n                _bmd.draw(tex, m, null, null, null, true);\n            }\n            if (this._texture)\n                this._texture.dispose();\n            this._texture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, _bmd, stageJS.Context3DTextureFormat.BGRA, true, true);\n            this._bUpdated = true;\n            this._bClear = true;\n        }\n        draw() {\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mFBOMatrix, true);\n            if (!this._bUpdated)\n                return;\n            //LODレンダリングシステム//LOD渲染系统\n            var c;\n            var p; //ポインタポジション //指针位置\n            var lp;\n            var lod;\n            var sd;\n            var x;\n            var y;\n            var i;\n            var al;\n            if (this._bClear) {\n                this.mCtx3D.clear(0, 0, 0, 0);\n                this.mCtx3D.setTextureAt(0, this._texture);\n                this._LODLevel.position = 0;\n                for (y = 0; y < this._mozHeight; y++) { //两个for循环做马赛克块的显示\n                    for (x = 0; x < this._mozWidth; x++) {\n                        lod = this._LODLevel.readUnsignedByte();\n                        lp = Math.pow(2, lod - 1);\n                        if (x % lp != 0 || y % lp != 0)\n                            continue;\n                        c = this._mipmaps[lod - 1].getPixel32(x / lp, y / lp); //取下一纹理图层该块对应的第一个像素颜色\n                        if (((c >> 24) & 0xFF) < 10)\n                            continue;\n                        if (this._enableTransparentWhite && ((c >> 16) & 0xFF) > 235 && ((c >> 8) & 0xFF) > 235 && ((c >> 0) & 0xFF) > 235)\n                            continue;\n                        al = ((c >> 24) & 0xFF) / 255.0;\n                        ;\n                        this.mUniformColor[0] = al * ((c >> 16) & 0xFF) / 255.0;\n                        this.mUniformColor[1] = al * ((c >> 8) & 0xFF) / 255.0;\n                        this.mUniformColor[2] = al * ((c >> 0) & 0xFF) / 255.0;\n                        this.mUniformColor[3] = al;\n                        // this.mUniformMatrix[0] = this._martigX+ x*this._mosicRemderSize+this._mosicRemderSize*lp*.5 ;//+ xp*lodProg\n                        // this.mUniformMatrix[1] = -this._martigY+UTItemManager.IMAGE_HEIGHT- y*this._mosicRemderSize-this._mosicRemderSize*lp*.5;// + yp*lodProg\n                        this.mUniformMatrix[0] = -1024 + x * this._mosicRemderSize + this._mosicRemderSize * lp * .5; //+ xp*lodProg\n                        this.mUniformMatrix[1] = 1152 - (y * this._mosicRemderSize + this._mosicRemderSize * lp * .5); // + yp*lodProg\n                        this.mUniformMatrix[2] = 0;\n                        this.mUniformMatrix[3] = this._mosicRemderSize * lp * this.InMargin;\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                        this.mCtx3D.drawTriangles(this.mIndicies);\n                    }\n                }\n                this._bClear = false;\n            }\n            else {\n                this.mCtx3D.setTextureAt(0, this._texture);\n                for (i = 0; i < this.updatePointsLod.length; i++) { //对每一个已经生成的马赛克点\n                    //定位到该马赛克的起始点（x，y）\n                    x = this.updatePointsX[i];\n                    y = this.updatePointsY[i];\n                    this._LODLevel.position = x + this._mozWidth * y;\n                    lod = this.updatePointsLod[i]; //马赛克层数\n                    lp = Math.pow(2, lod - 1); //马赛克尺寸\n                    if (x % lp != 0 || y % lp != 0)\n                        continue;\n                    c = this._mipmaps[lod - 1].getPixel32(x / lp, y / lp); //取该块马赛克的颜色\n                    al = ((c >> 24) & 0xFF) / 255.0;\n                    this.mUniformColor[0] = al * ((c >> 16) & 0xFF) / 255.0;\n                    this.mUniformColor[1] = al * ((c >> 8) & 0xFF) / 255.0;\n                    this.mUniformColor[2] = al * ((c >> 0) & 0xFF) / 255.0;\n                    this.mUniformColor[3] = al;\n                    // this.mUniformMatrix[0] = this._martigX+ x*this._mosicRemderSize+this._mosicRemderSize*lp*.5 ;//+ xp*lodProg\n                    // this.mUniformMatrix[1] = -this._martigY+UTItemManager.IMAGE_HEIGHT- y*this._mosicRemderSize-this._mosicRemderSize*lp*.5;// + yp*lodProg\n                    this.mUniformMatrix[0] = -1024 + x * this._mosicRemderSize + this._mosicRemderSize * lp * .5; //+ xp*lodProg\n                    if (this.mUniformMatrix[0] > 0)\n                        this.mUniformMatrix[0] = 0;\n                    this.mUniformMatrix[1] = y * this._mosicRemderSize + this._mosicRemderSize * lp * .5; // + yp*lodProg\n                    if (this.mUniformMatrix[1] < 0)\n                        this.mUniformMatrix[1] = 0;\n                    this.mUniformMatrix[2] = 0;\n                    this.mUniformMatrix[3] = this._mosicRemderSize * lp * this.InMargin;\n                    this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n                    this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                    this.mCtx3D.drawTriangles(this.mIndicies);\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n                    if (((c >> 24) & 0xFF) < 10)\n                        continue;\n                    if (this._enableTransparentWhite && ((c >> 16) & 0xFF) > 235 && ((c >> 8) & 0xFF) > 235 && ((c >> 0) & 0xFF) > 235)\n                        continue;\n                    this.mCtx3D.drawTriangles(this.mIndicies); //显示马赛克\n                }\n                this.updatePointsX.length = 0;\n                this.updatePointsY.length = 0;\n                this.updatePointsLod.length = 0;\n            }\n            this.mUniformColor[3] = 1;\n            this._bUpdated = false;\n        }\n        addedForce(_x, _y) {\n            this._bUpdated = true;\n            var va = this._lodSum / this.maxCellLod; //保证在最后四个层停止，，可能的尺寸小于等于7*7\n            var bUpdated = false;\n            var cnv = (1 - va) * 8; //小于等于8的数\n            //cnv=Math.pow(cnv,2);\n            var i;\n            var x;\n            var y;\n            var _miR;\n            var _miG;\n            var _miB;\n            var _maR;\n            var _maG;\n            var _maB;\n            var _r;\n            var _g;\n            var _b;\n            var c;\n            //if(Math.floor(cnv)==0&&Math.random()<0.9)return;\n            if (cnv < 5) { //static public var REMIX_PERTICLE_SPEED:Number=1.0;\n                if (Math.random() > (cnv / 5.0 * .5 + 0.05) * uniqlo.AppVals.REMIX_PERTICLE_SPEED)\n                    return;\n            }\n            for (i = 0; i < cnv * uniqlo.AppVals.REMIX_PERTICLE_SPEED; i++) { //每次摇动手机，处理马赛克的数量，最多8个\n                if (va == 1)\n                    return; //达到小于7*7以下马赛克，停止\n                let LABEL_RESTART_RANDOM = () => {\n                    //随机取（x，y）\n                    x = Math.floor(this._mozWidth * Math.random());\n                    y = Math.floor(this._mozHeight * Math.random());\n                    let LABEL_RESTART = () => {\n                        this._LODLevel.position = x + this._mozWidth * y;\n                        var lod = this._LODLevel.readUnsignedByte(); //第一次读出来的是1，以后可能是该点买塞克的尺寸大小\n                        var writeLod;\n                        writeLod = lod + 1; //==2 每次摇动，遂渐将原有的马赛克增大一倍\n                        var lp = Math.pow(2, writeLod - 1); //初始lp==2  马赛克尺寸增加一倍，比lod大一个尺寸\n                        x = Math.floor(x / lp) * lp; //把x，y变为lp的倍数，定位到（x，y）要换到大一倍的马赛克粒的初始点\n                        y = Math.floor(y / lp) * lp;\n                        //check\n                        var ly;\n                        var lx;\n                        //检查，是否存在x，y点，从这个点起始，找到lp范围内，都是lod尺寸的马赛克块\n                        var chk = true;\n                        for (ly = y; ly < y + lp; ly++) { //检查马赛克，(x,y)是否是该马赛克起始点，并且在（x，y）到（lx，y+lp)都是同样规模的块\n                            if (ly < this._mozHeight) {\n                                this._LODLevel.position = x + this._mozWidth * ly;\n                                for (lx = x; lx < x + lp && lx < this._mozWidth; lx++) { //好像有bug\n                                    if (this._LODLevel.readUnsignedByte() != lod) { //该列（x，y）到（lx，y+lp)中存在不同大小的马赛克，\n                                        x = lx;\n                                        y = ly;\n                                        LABEL_RESTART();\n                                        return;\n                                        // chk=false;\n                                        // break;\n                                    }\n                                }\n                            }\n                            else {\n                                chk = false;\n                            }\n                            if (!chk)\n                                break;\n                        }\n                        if (!chk) {\n                            LABEL_RESTART_RANDOM();\n                            return;\n                        }\n                        //如果监测成果\n                        if (lod == this._mipmaps.length - 3) {\n                            if (cnv < 5) {\n                                if (Math.random() < Math.pow(1 - cnv / 5.0, 2)) {\n                                    if (this._lod1Count < this.maxCellNum) {\n                                        if (Math.random() < 0.6) {\n                                            LABEL_RESTART_RANDOM();\n                                            return;\n                                        }\n                                    }\n                                }\n                                else {\n                                    LABEL_RESTART_RANDOM();\n                                    return;\n                                }\n                            }\n                        }\n                        if (lod == this._mipmaps.length - 2) {\n                            LABEL_RESTART_RANDOM();\n                            return;\n                        }\n                        if (this.weakMode) {\n                            if (lod == 2) {\n                                LABEL_RESTART_RANDOM();\n                                return;\n                            }\n                        }\n                        //如果监测成果，将里面的四个大小一样的马赛克块处理成一个，色块内的颜色值不能差别太大\n                        chk = false;\n                        lp = Math.pow(2, writeLod - 1);\n                        var lpc = Math.pow(2, lod - 1);\n                        for (ly = y; ly < y + lp && ly < this._mozHeight; ly++) { //对(x,y,x+lp,y+lp)区域进行马赛克处理\n                            for (lx = x; lx < x + lp && lx < this._mozWidth; lx++) { //找到最大的颜色值ma，和最小的颜色值mi\n                                if (lx % lpc != 0 || ly % lpc != 0)\n                                    continue;\n                                c = this._mipmaps[lod - 1].getPixel32(lx / lpc, ly / lpc); //取下一纹理图层对应的像素颜色\n                                _r = ((c >> 16) & 0xFF);\n                                _g = ((c >> 8) & 0xFF);\n                                _b = ((c >> 0) & 0xFF);\n                                //trace(_r,_g,_b);\n                                if (chk) {\n                                    if (_miR > _r)\n                                        _miR = _r;\n                                    if (_maR < _r)\n                                        _maR = _r;\n                                    if (_miG > _g)\n                                        _miG = _g;\n                                    if (_maG < _g)\n                                        _maG = _g;\n                                    if (_miB > _b)\n                                        _miB = _b;\n                                    if (_maB < _b)\n                                        _maB = _b;\n                                }\n                                else {\n                                    chk = true;\n                                    _miR = _maR = _r;\n                                    _miG = _maG = _g;\n                                    _miB = _maB = _b;\n                                }\n                            }\n                        }\n                        //计算颜色距离\n                        _r = _maR - _miR;\n                        _g = _maG - _miG;\n                        _b = _maB - _miB;\n                        var r = Math.sqrt(_r * _r + _g * _g + _b * _b) / ((va) * 500); //颜色距离，这里是不是有bug？第一次调用addforce，va=0；\n                        if (this.weakMode) {\n                            if (r > 0.6)\n                                return;\n                        }\n                        if (r > 0.92)\n                            r = 0.92;\n                        r = Math.pow(r, 2);\n                        //trace(\"-----------\",r,Math.sqrt(_r*_r+_g*_g+_b*_b),lp,lod);\n                        if (Math.random() < r) {\n                            LABEL_RESTART_RANDOM();\n                            return;\n                        }\n                        for (ly = y; ly < y + lp && ly < this._mozHeight; ly++) { //将这个区域马赛克level标记为writelod\n                            this._LODLevel.position = x + this._mozWidth * ly;\n                            for (lx = x; lx < x + lp && lx < this._mozWidth; lx++) {\n                                this._LODLevel.writeByte(writeLod);\n                                this._lodSum++; //总处理的点数\n                                if (writeLod == 2)\n                                    this._lod1Count++;\n                            }\n                        }\n                        //trace(_lod1Count,maxCellNum);\n                        //标记马赛克起始点x，y，和马赛克大小writelod\n                        this.updatePointsX.push(x);\n                        this.updatePointsY.push(y);\n                        this.updatePointsLod.push(writeLod);\n                    };\n                    LABEL_RESTART();\n                };\n                LABEL_RESTART_RANDOM();\n            }\n        }\n        clear() {\n            this._LODLevel.position = 0;\n            while (this._LODLevel.position < this._LODLevel.length)\n                this._LODLevel.writeByte(1);\n            super.clear();\n            this._bClear = true;\n            this._bUpdated = true;\n            this._lodSum = 0;\n            this._lod1Count = 0;\n        }\n    }\n    uniqlo.MosaicImpl = MosaicImpl;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class PaintImpl {\n        constructor(p1, p2, p3, p4, p5, p6, p7) {\n            this.mFudeSize = 1.2;\n            this.mColorRandRange = 1.0;\n            this.mActiveColor = 0xFF00FF;\n            this.currentScale = 0;\n            this.colorSelectMode = false;\n            this.selectedColor = 0;\n            this.CBcolorChanged = null;\n            this.dirty = true;\n            this.colArray = new Array();\n            this.mVF = new uniqlo.PVVectprField;\n            this.mParticles = new Array();\n            this.mTexParts = new Array();\n            this._isZoom = false;\n            this.currentScale = this._isZoom ? 1 : 0;\n            this._painted = false;\n            this.particle1 = p1;\n            this.particle2 = p2;\n            this.particle3 = p3;\n            this.particle4 = p4;\n            this.particle5 = p5;\n            this.particle6 = p6;\n            this.particle7 = p7;\n        }\n        initWithData(stage, backBmd, cacheBmd) {\n            this.mCacheBmd = cacheBmd;\n            this.mBackImage = backBmd;\n            this.init3D(stage, this.mBackImage);\n        }\n        dispose() {\n            this.stopRendering();\n            this.stage3d.removeEventListener(stageJS.events.Event.CONTEXT3D_CREATE, (e) => { this.context3DCreateHandler(e); });\n            // this.stage3d.removeEventListener(Event.ENTER_FRAME, onEnterFrame);\n            this.mParticles.length = 0;\n            this.mMipShader.dispose();\n            this.mMipShader = null;\n            this.mNoMipShader.dispose();\n            this.mNoMipShader = null;\n            this.mVerts.dispose();\n            this.mVerts = null;\n            this.mCoords.dispose();\n            this.mCoords = null;\n            this.mVertsStage.dispose();\n            this.mVertsStage = null;\n            this.mIndicies.dispose();\n            this.mIndicies = null;\n            // if(texTopLayer)texTopLayer.dispose();\n            for (var i = 0; i < this.mTexParts.length; i++) {\n                this.mTexParts[i].dispose();\n            }\n            this.mTexParts.length = 0;\n            this.mTexParts = null;\n            if (this.mTexBaseT)\n                this.mTexBaseT.dispose();\n            this.mTexBaseT = null;\n            this.mFBO.dispose();\n            this.mFBO = null;\n            this.mUniformMatrix.length = 0;\n            this.mUniformMatrix = null;\n            this.mUniformColor.length = 0;\n            this.mUniformColor = null;\n            this.mScreenMatrix = null;\n            this.mFBOMatrix = null;\n            this.mCacheBmd = null;\n            this._bmdBackImage = null;\n            this.mCtx3D.dispose();\n            this.mCtx3D = null;\n            this.stage3d = null;\n        }\n        stopRendering() {\n            this._drawingEnabled = false;\n        }\n        startRendering() {\n            this._drawingEnabled = true;\n            this._toScale = 0;\n        }\n        toggleScale() {\n            this._isZoom = !this._isZoom;\n        }\n        setEraseMode(eraseMode) {\n            this.mParticles.length = 0;\n            this._eraseMode = eraseMode;\n        }\n        getEraseMode() { return this._eraseMode; }\n        setSelectedToolMode(toolMode) {\n            if (toolMode == \"eraserMenuBtn\")\n                uniqlo.AppVals.SELECTED_TOOL_MODE = uniqlo.AppVals.ERASE_MODE;\n            else if (toolMode == \"thickBrushBtn\")\n                uniqlo.AppVals.SELECTED_TOOL_MODE = uniqlo.AppVals.THICK_BRUSH_MODE;\n            else if (toolMode == \"thinBrushBtn\")\n                uniqlo.AppVals.SELECTED_TOOL_MODE = uniqlo.AppVals.THIN_BRUSH_MODE;\n        }\n        getSelectedToolMode() {\n            return uniqlo.AppVals.SELECTED_TOOL_MODE;\n        }\n        init3D(stage, back) {\n            this.mScreenMatrix = new stageJS.geom.Matrix3D();\n            // this.mVF.setupField(UTItemManager.IMAGE_WIDTH/75,UTItemManager.IMAGE_HEIGHT/75,UTItemManager.IMAGE_WIDTH,UTItemManager.IMAGE_HEIGHT);\n            this.mVF.setupField(uniqlo.UTItemManager.IMAGE_WIDTH / 75, uniqlo.UTItemManager.IMAGE_HEIGHT, uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT); // BUG 772\n            this._drawingEnabled = false;\n            this._bmdBackImage = back;\n            // this.stage3d = stage;\n            this.stage3d = stage;\n            this.stage3d.addEventListener(stageJS.events.Event.CONTEXT3D_CREATE, (e) => { this.context3DCreateHandler(e); });\n            this.stage3d.requestContext3D();\n        }\n        updateTopLayer() {\n            // hasTopLayer=UTTopLayerManager.hasTopLayer();\n            // if(hasTopLayer){\n            //     texTopLayer=Stage3DHelper.uploadTexture(mCtx3D,UTTopLayerManager.getTopLayerThumbImage(),Context3DTextureFormat.BGRA,true,true);\n            // }\n        }\n        context3DCreateHandler(e) {\n            console.log(\"context created\");\n            //Begin Stage 3Ds////////////////////////////////////////////////////////////////\n            //stage3d.removeEventListener(Event.CONTEXT3D_CREATE, context3DCreateHandler);\n            this.onDeactive();\n            this.mTexBaseT = null;\n            this.mCtx3D = this.stage3d.context3D;\n            this.mMipShader = uniqlo.Stage3DHelper.createMainProgram(this.mCtx3D, true);\n            this.mNoMipShader = uniqlo.Stage3DHelper.createMainProgram(this.mCtx3D, false);\n            // if(AppVals.DEBUG_MODE)mCtx3D.enableErrorChecking=true;\n            // trace(this.mCtx3D.driverInfo);\n            this.mCtx3D.configureBackBuffer(this.stage3d.stageWidth, this.stage3d.stageHeight, 0, true);\n            this.onResize();\n            var vertices = [-0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5];\n            var coords = [0, 1, 1, 1, 0, 0, 1, 0];\n            var a = uniqlo.UTItemManager.IMAGE_HEIGHT / uniqlo.UTItemManager.IMAGE_WIDTH;\n            var verticesStg = [-0.5, -a * 0.5, 0.5, -a * 0.5, -0.5, a * 0.5, 0.5, a * 0.5];\n            this.mVerts = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mVerts.uploadFromVector(vertices, 0, 4);\n            this.mCoords = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mCoords.uploadFromVector(coords, 0, 4);\n            this.mVertsStage = this.mCtx3D.createVertexBuffer(4, 2);\n            this.mVertsStage.uploadFromVector(verticesStg, 0, 4);\n            var indices = [0, 2, 1, 2, 3, 1];\n            this.mIndicies = this.mCtx3D.createIndexBuffer(6);\n            this.mIndicies.uploadFromVector(indices, 0, 6);\n            ///////////////////////////////////////////////////////////////////////////////////////////\n            this.mFBOMatrix = new stageJS.geom.Matrix3D();\n            this.mFBOMatrix.appendTranslation(-uniqlo.UTItemManager.IMAGE_WIDTH * .5, -uniqlo.UTItemManager.IMAGE_HEIGHT * .5, 0);\n            this.mFBOMatrix.appendScale(1 / (uniqlo.UTItemManager.IMAGE_WIDTH * .5), 1 / (uniqlo.UTItemManager.IMAGE_HEIGHT * .5), 1);\n            this.mFBO = this.mCtx3D.createTexture(uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT, stageJS.Context3DTextureFormat.BGRA, true, 0, 'mFBO');\n            this.mUniformMatrix = [0.0, 0.0, 0.0, 1.0];\n            this.mUniformColor = [1.0, 1.0, 1.0, 1.0];\n            ///////////////////////////////////////////////////////////////////////////////////////////\n            this.mTexParts = null;\n            this.mTexParts = new Array();\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle1, stageJS.Context3DTextureFormat.BGRA, true, true, 'p1'));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle2, stageJS.Context3DTextureFormat.BGRA, true, true, 'p2'));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle4, stageJS.Context3DTextureFormat.BGRA, true, true, 'p4'));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle5, stageJS.Context3DTextureFormat.BGRA, true, true, 'p5'));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle6, stageJS.Context3DTextureFormat.BGRA, true, true, 'p6'));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle7, stageJS.Context3DTextureFormat.BGRA, true, true, 'p7'));\n            ///////////////////////////////////////////////////////////////////////////////////////////\n            this.mDisplayFboMatrix = new stageJS.geom.Matrix3D();\n            this.mDisplayFboMatrix.appendScale(1 / (1024 * .5), 1 / (1024 * .5), 1);\n            this.mCtx3D.setVertexBufferAt(1, this.mCoords, 2, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n            this.mCtx3D.setCulling(stageJS.Context3DTriangleFace.BACK);\n            this.updateTopLayer();\n            this.clear();\n            if (this.mCacheBmd != null) {\n                this.mUniformMatrix[0] = 0;\n                this.mUniformMatrix[1] = 0;\n                this.mUniformMatrix[2] = 0;\n                this.mUniformMatrix[3] = 1024;\n                this.mUniformColor[0] = 1;\n                this.mUniformColor[1] = 1;\n                this.mUniformColor[2] = 1;\n                this.mUniformColor[3] = 1;\n                this.mCtx3D.setProgram(this.mNoMipShader);\n                var tmp = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.mCacheBmd, stageJS.Context3DTextureFormat.BGRA, true, true, 'tmp');\n                this.mCtx3D.setRenderToTexture(this.mFBO);\n                uniqlo.Stage3DHelper.drawTriangles(this.mCtx3D, this.mIndicies, this.mDisplayFboMatrix, tmp, this.mVerts, this.mCoords, this.mUniformMatrix, this.mUniformColor);\n                tmp.dispose();\n                this.mCacheBmd = null;\n                this._painted = true;\n            }\n            this.mCtx3D.setProgram(this.mMipShader);\n            this.mCtx3D.setVertexBufferAt(0, this.mVerts, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setVertexBufferAt(1, this.mCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mFBOMatrix);\n            this.mCtx3D.setRenderToBackBuffer();\n            this.onActive();\n            dispatchEvent(new Event(stageJS.events.Event.ACTIVATE));\n        }\n        onActive() {\n            if (this.mCtx3D == null || this._mcWidth < 1 || this._mcHeight < 1)\n                return;\n            this.stage3d.addEventListener(stageJS.events.Event.ENTER_FRAME, (e) => { this.onEnterFrame(e); });\n        }\n        onDeactive() {\n            this.stage3d.removeEventListener(stageJS.events.Event.ENTER_FRAME, this.onEnterFrame);\n        }\n        onResize() {\n            this._mcWidth = this.stage3d.stageWidth / uniqlo.AppVals.GLOBAL_SCALE;\n            this._mcHeight = this.stage3d.stageHeight / uniqlo.AppVals.GLOBAL_SCALE - uniqlo.AppVals.STATUSBAR_HEIGHT;\n            this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n            //mStageWidth=this.stage3d.stageWidth;\n            //mStageHeight=this.stage3d.stageHeight;\n            if (this.mCtx3D == null || this._mcWidth < 1 || this._mcHeight < 1)\n                return;\n            this.mCtx3D.configureBackBuffer(this.stage3d.stageWidth, this.stage3d.stageHeight, 0, false);\n            this.mScreenMatrix.identity();\n            this.mScreenMatrix.appendTranslation(0, -uniqlo.AppVals.STATUSBAR_HEIGHT * .5, 0);\n            this.mScreenMatrix.appendScale(1.0 / (this._mcWidth * .5), 1.0 / ((this._mcHeight + uniqlo.AppVals.STATUSBAR_HEIGHT) * .5), 1);\n        }\n        draw() {\n            var num = this.mParticles.length;\n            if (num > 0) {\n                if (this._eraseMode) {\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ZERO, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n                }\n                else {\n                    this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n                }\n                var part;\n                //var currentTex:int=-1;\n                var ac = -1;\n                for (var i = 0; i < num;) {\n                    part = this.mParticles[i];\n                    if (!(part.flg && Math.random() > 0.5)) {\n                        //如果画点不超出画布范围\n                        if ((part.posX - part.scale * 0.55 > 0 &&\n                            part.posY - part.scale * 0.55 > 0 &&\n                            part.posX + part.scale * 0.55 < uniqlo.UTItemManager.IMAGE_WIDTH &&\n                            part.posY + part.scale * 0.55 < uniqlo.UTItemManager.IMAGE_HEIGHT) || this._eraseMode) {\n                            if (ac != part.texIndex) {\n                                this.mCtx3D.setTextureAt(0, this.mTexParts[Math.floor(part.texIndex)]);\n                                ac = part.texIndex;\n                            }\n                            if (part.flg) {\n                                this.mUniformMatrix[0] = part.posX + (Math.random() * 1 - 0.5) * part.scale * .06;\n                                this.mUniformMatrix[1] = part.posY + (Math.random() * 1 - 0.5) * part.scale * .06;\n                                this.mUniformMatrix[3] = part.scale * (Math.random() * 0.4 + 0.8);\n                                this.mUniformColor[3] = Math.random();\n                                this.mUniformColor[0] = part.r * this.mUniformColor[3];\n                                this.mUniformColor[1] = part.g * this.mUniformColor[3];\n                                this.mUniformColor[2] = part.b * this.mUniformColor[3];\n                            }\n                            else {\n                                // console.log(part.posX, part.posY, part.scale);\n                                this.mUniformMatrix[0] = part.posX;\n                                this.mUniformMatrix[1] = part.posY;\n                                this.mUniformMatrix[3] = part.scale;\n                                this.mUniformColor[0] = part.r;\n                                this.mUniformColor[1] = part.g;\n                                this.mUniformColor[2] = part.b;\n                                this.mUniformColor[3] = 1;\n                            }\n                            this.mUniformMatrix[2] = part.angle;\n                            this.mUniformMatrix[3] = part.scale;\n                            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n                            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                            this.mCtx3D.drawTriangles(this.mIndicies);\n                            if (!this._painted) {\n                                if (this.onPainted)\n                                    this.onPainted();\n                                this._painted = true;\n                            }\n                        }\n                    }\n                    if (part.life > 0) {\n                        this.mVF.getForceFromPos(part.posX, part.posY);\n                        part.setVFupdate(this.mVF.outX, this.mVF.outY); //把part的坐标延申outx，outy，幅度为outx，outy的摇动幅度*0.15\n                        i++;\n                    }\n                    else {\n                        this.mParticles.splice(i, 1);\n                        num--;\n                    }\n                }\n                this.mUniformColor[3] = 1;\n            }\n            this.mVF.fadeField(0.96);\n            this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.ONE, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n        }\n        onEnterFrame(e) {\n            if (!this.dirty && this.mParticles.length == 0)\n                return;\n            if (this._drawingEnabled) {\n                this.draw();\n            }\n            this.dirty = this.mParticles.length > 0;\n            // this.mCtx3D.setRenderToBackBuffer();\n            // this.mCtx3D.clear(0, 0, 0, 0);\n            // this.mUniformColor[0] = 1;\n            // this.mUniformColor[1] = 1;\n            // this.mUniformColor[2] = 1;\n            // this.mUniformMatrix[0] = 0;\n            // this.mUniformMatrix[2] = 0;\n            // //ベースTシャツ\n            // this.mUniformMatrix[0] = -this._mcWidth*.5+this._currentRect.width*0.5+this._currentRect.x;\n            // this.mUniformMatrix[1] = -(- this._mcHeight*.5+this._currentRect.height*0.5+this._currentRect.y);\n            // this.mUniformMatrix[3] = this._currentRect.width;\n            // Stage3DHelper.drawTriangles(this.mCtx3D,this.mIndicies,this.mScreenMatrix,this.mTexBaseT,this.mVerts,this.mCoords,this.mUniformMatrix,this.mUniformColor);\n            //ベースTシャツ　FBO\n            // this.mUniformMatrix[0]= -this._mcWidth*.5+this._currentRect.width*0.5+this._currentRect.x + this._currentRect.width*UTItemManager.wkCenter.x-this._currentRect.width*0.5;\n            // this.mUniformMatrix[1]=-(- this._mcHeight*.5+this._currentRect.height*0.5+this._currentRect.y + this._currentRect.height*UTItemManager.wkCenter.y-this._currentRect.height*0.5);\n            // this.mUniformMatrix[3]=this._currentRect.width*UTItemManager.wkWidth;\n            // Stage3DHelper.drawTriangles(this.mCtx3D,this.mIndicies,this.mScreenMatrix,this.mFBO,this.mVertsStage,this.mCoords,this.mUniformMatrix,this.mUniformColor);\n            // this.mCtx3D.setTextureAt(0, this.mFBO);\n            // this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.mScreenMatrix);\n            // this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, [1, 1, 1, 1]);\n            // this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, [0, 0, 0, this._currentRect.width]);\n            // this.mCtx3D.drawTriangles(this.mIndicies);\n            //TOPレイヤー\n            // if(hasTopLayer){\n            //     Stage3DHelper.drawTriangles(mCtx3D,mIndicies,mScreenMatrix,texTopLayer,mVertsStage,mCoords,mUniformMatrix,mUniformColor);\n            // }\n            if (this._isZoom) {\n                if (this._toScale != 1) {\n                    this._toScale = 1;\n                    this._frScale = this.currentScale;\n                    this._ticktime = (new Date).getTime();\n                }\n            }\n            else {\n                if (this._toScale != 0) {\n                    this._toScale = 0;\n                    this._frScale = this.currentScale;\n                    this._ticktime = (new Date).getTime();\n                }\n            }\n            if (this.currentScale != this._toScale && this._drawingEnabled) {\n                var _v;\n                _v = ((new Date).getTime() - this._ticktime) / (1000 * 0.3);\n                if (_v > 1.0) {\n                    _v = 1;\n                    this.currentScale = this._toScale;\n                    this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n                }\n                else {\n                    _v = uniqlo.Easing.easeOutCubic(_v, 0, 1, 1);\n                    this.currentScale = this._frScale + (this._toScale - this._frScale) * _v;\n                    this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n                }\n            }\n            if (e != null)\n                this.mCtx3D.present();\n        }\n        captureCurrentBuffer() {\n            this.stage3d.removeEventListener(stageJS.events.Event.ENTER_FRAME, this.onEnterFrame);\n            var bmd = new stageJS.BitmapData(this.stage3d.stageWidth, this.stage3d.stageHeight, false, 0xFFFFFF);\n            this.onEnterFrame(null);\n            this.mCtx3D.drawToBitmapData(bmd);\n            this.mCtx3D.present();\n            return bmd;\n        }\n        drawBufferToBitmap(bmd) {\n            this.onEnterFrame(null);\n            this.mCtx3D.drawToBitmapData(bmd);\n        }\n        captureToBitmap(bmd, cacheBmd) {\n            if (this.mTexBaseT)\n                this.mTexBaseT.dispose();\n            this.mTexBaseT = null;\n            this.mUniformColor[0] = 1;\n            this.mUniformColor[1] = 1;\n            this.mUniformColor[2] = 1;\n            this.mUniformColor[3] = 1;\n            var mWid = Math.min(Math.min(this.stage3d.stageWidth, this.stage3d.stageHeight), Math.max(bmd.width / 2, bmd.height / 2));\n            // if(!UTDeviceCapabilities.isMobilePlatform())mWid=128;\n            mWid = 128;\n            var m = new stageJS.geom.Matrix3D;\n            var m2 = new uniqlo.Matrix;\n            var b = new stageJS.BitmapData(mWid, mWid, true, 0);\n            var x, y;\n            this.mCtx3D.configureBackBuffer(mWid, mWid, 16, false);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n            this.mCtx3D.setVertexBufferAt(1, this.mCoords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setVertexBufferAt(0, this.mVertsStage, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            this.mCtx3D.setProgram(this.mNoMipShader);\n            this.mCtx3D.setRenderToBackBuffer();\n            this.mCtx3D.setTextureAt(0, this.mFBO);\n            this.mUniformMatrix[0] = 0;\n            this.mUniformMatrix[1] = 0;\n            this.mUniformMatrix[2] = 0;\n            this.mUniformMatrix[3] = bmd.width;\n            m.identity();\n            m.appendScale(1.0 / (mWid * .5), 1.0 / (mWid * .5), 1);\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, m, true);\n            this.mCtx3D.setTextureAt(0, this.mFBO);\n            for (x = 0; x < Math.ceil(bmd.width / mWid); x++) {\n                for (y = 0; y < Math.ceil(bmd.height / mWid); y++) {\n                    this.mCtx3D.clear(0, 0, 0, 0);\n                    this.mUniformMatrix[0] = -x * mWid + (bmd.width * .5 - mWid * .5);\n                    this.mUniformMatrix[1] = y * mWid - (bmd.height * .5 - mWid * .5);\n                    this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                    this.mCtx3D.drawTriangles(this.mIndicies);\n                    this.mCtx3D.drawToBitmapData(b);\n                    bmd.copyPixels(b, b.rect, { x: mWid * x, y: mWid * y });\n                }\n            }\n            var mHei = mWid * uniqlo.UTItemManager.IMAGE_HEIGHT / uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.mUniformMatrix[0] = 0;\n            this.mUniformMatrix[1] = 0;\n            this.mUniformMatrix[2] = 0;\n            this.mUniformMatrix[3] = bmd.width;\n            m.identity();\n            m.appendScale(1.0 / (mWid * .5), 1.0 / (mHei * .5), 1);\n            this.mCtx3D.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, m, false);\n            for (x = 0; x < Math.ceil(uniqlo.UTItemManager.IMAGE_WIDTH / mWid); x++) {\n                for (y = 0; y < Math.ceil(uniqlo.UTItemManager.IMAGE_HEIGHT / mWid); y++) {\n                    this.mCtx3D.clear(0, 0, 0, 0);\n                    this.mUniformMatrix[0] = -x * mWid + (uniqlo.UTItemManager.IMAGE_WIDTH * .5 - mWid * .5);\n                    this.mUniformMatrix[1] = y * mHei - (uniqlo.UTItemManager.IMAGE_HEIGHT * .5 - mHei * .5);\n                    this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                    this.mCtx3D.drawTriangles(this.mIndicies);\n                    this.mCtx3D.drawToBitmapData(b);\n                    cacheBmd.copyPixels(b, b.rect, { x: mWid * x, y: mWid * y });\n                }\n            }\n            b.dispose();\n        }\n        setColor(color) {\n            this.colArray.length = 0;\n            for (var i = 0; i < color.length; i++)\n                this.colArray.push(color[i]);\n            this.setColorIndex(this.selectedColor);\n        }\n        setColorIndex(color) {\n            this.selectedColor = color < this.colArray.length ? color : 0;\n            this.mActiveColor = this.colArray[this.selectedColor];\n            if (this.CBcolorChanged)\n                this.CBcolorChanged();\n        }\n        convertMousePos(x, y) {\n            //ベースTシャツ　FBO  //基本T恤 FBO\n            x /= uniqlo.AppVals.GLOBAL_SCALE;\n            y /= uniqlo.AppVals.GLOBAL_SCALE;\n            var _x = -this._mcWidth * .5 + this._currentRect.width * 0.5 + this._currentRect.x + this._currentRect.width * uniqlo.UTItemManager.wkCenter.x - this._currentRect.width * 0.5;\n            var _y = -(-this._mcHeight * .5 + this._currentRect.height * 0.5 + this._currentRect.y + this._currentRect.height * uniqlo.UTItemManager.wkCenter.y - this._currentRect.height * 0.5);\n            var _s = this._currentRect.width * uniqlo.UTItemManager.wkWidth;\n            this._cnverted_X = (x - this._mcWidth * .5 - _x) / _s * uniqlo.UTItemManager.IMAGE_WIDTH + uniqlo.UTItemManager.IMAGE_WIDTH * .5;\n            this._cnverted_Y = -(y - this._mcHeight * .5 + _y - uniqlo.AppVals.STATUSBAR_HEIGHT) / _s * uniqlo.UTItemManager.IMAGE_WIDTH + uniqlo.UTItemManager.IMAGE_HEIGHT * .5;\n        }\n        onMousePress(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            this.convertMousePos(x, y);\n            this.mPrevMouseX = this._cnverted_X;\n            this.mPrevMouseY = this._cnverted_Y;\n            this.mPrevDiffX = 0;\n            this.mPrevDiffY = 0;\n        }\n        onMouseRelease(x, y) {\n            if (!this.colorSelectMode && !this._eraseMode) {\n                this.selectedColor++;\n                if (this.selectedColor > this.colArray.length - 1)\n                    this.selectedColor = 0;\n                this.setColorIndex(this.selectedColor);\n            }\n        }\n        onMouseDrag(x, y) {\n            if (!this._drawingEnabled)\n                return;\n            //选择画笔粗细\n            var mFudeSize = this.mFudeSize;\n            if (uniqlo.AppVals.SELECTED_TOOL_MODE == uniqlo.AppVals.THICK_BRUSH_MODE)\n                mFudeSize = this.mFudeSize;\n            else if (uniqlo.AppVals.SELECTED_TOOL_MODE == uniqlo.AppVals.THIN_BRUSH_MODE)\n                mFudeSize = this.mFudeSize / 16;\n            else if (uniqlo.AppVals.SELECTED_TOOL_MODE == uniqlo.AppVals.ERASE_MODE)\n                mFudeSize = this.mFudeSize;\n            var pos_x;\n            var pos_y;\n            var diff_x;\n            var diff_y;\n            //定位当前坐标\n            this.convertMousePos(x, y);\n            pos_x = this._cnverted_X;\n            pos_y = this._cnverted_Y;\n            //计算和前一个位置的偏移量\n            diff_x = pos_x - this.mPrevMouseX;\n            diff_y = pos_y - this.mPrevMouseY;\n            //计算运动距离\n            // var v:number=Math.max(Math.sqrt(diff_x*diff_x+diff_y*diff_y)/30.0,1.0);\n            var v = Math.max(Math.sqrt(diff_x * diff_x + diff_y * diff_y) / 20.0, 1.0);\n            var p_x, p_y;\n            var d_x, d_y;\n            var pR_x, pR_y;\n            var f, c;\n            for (var i = 0; i < v; i++) {\n                f = (i + 1) / v;\n                p_x = pos_x - this.mPrevMouseX;\n                p_y = pos_y - this.mPrevMouseY;\n                p_x *= f;\n                p_y *= f;\n                p_x = this.mPrevMouseX + p_x;\n                p_y = this.mPrevMouseY + p_y;\n                d_x = diff_x - this.mPrevDiffX;\n                d_y = diff_y - this.mPrevDiffY;\n                d_x *= f;\n                d_y *= f;\n                d_x = this.mPrevDiffX + d_x;\n                d_y = this.mPrevDiffY + d_y;\n                var strength = 0.2 + Math.min(mFudeSize, Math.sqrt(d_x * d_x + d_y * d_y) / 50.0);\n                //把这段位移部分使用不同大小的圆进行颜色填充\n                this.mVF.addVectorCircle(p_x, p_y, d_x * 0.5, d_y * 0.5, 80, 0.3);\n                //产生多个颗粒，进行飞溅和流动\n                var pw;\n                for (var a = 0; a < 10; a++) {\n                    var r = this._eraseMode ? 1000 : Math.random() * 1000;\n                    var part = new uniqlo.PVParticle;\n                    part.angle = Math.random() * 720;\n                    part.flg = false;\n                    var color;\n                    if (Math.random() < 0.1) { //里面混的杂色，这个新程序不需要，但需要变浅，修改一下即可\n                        var coladd = (Math.random() * this.mColorRandRange - this.mColorRandRange * .5) * 255;\n                        var _colorR = ((this.mActiveColor >> 16) & 0xFF) + coladd;\n                        var _colorG = ((this.mActiveColor >> 8) & 0xFF) + coladd;\n                        var _colorB = ((this.mActiveColor >> 0) & 0xFF) + coladd;\n                        _colorR = _colorR < 0 ? 0 : (_colorR > 255 ? 255 : _colorR);\n                        _colorG = _colorG < 0 ? 0 : (_colorG > 255 ? 255 : _colorG);\n                        _colorB = _colorB < 0 ? 0 : (_colorB > 255 ? 255 : _colorB);\n                        color = (_colorR << 16) | (_colorG << 8) | (_colorB);\n                    }\n                    else {\n                        color = this.mActiveColor;\n                    }\n                    part.r = ((color >> 16) & 0xFF) / 255.0;\n                    part.g = ((color >> 8) & 0xFF) / 255.0;\n                    part.b = ((color >> 0) & 0xFF) / 255.0;\n                    pR_x = Math.random() * 100 - 50;\n                    pR_y = Math.random() * 100 - 50;\n                    //pR.normalize(1);\n                    //计算喷溅颗粒的喷溅方向和距离\n                    f = Math.sqrt(pR_x * pR_x + pR_y * pR_y);\n                    pR_x /= f;\n                    pR_y /= f;\n                    c = Math.random() * 50 - 25;\n                    pR_x *= c;\n                    pR_y *= c;\n                    //针对不同规模的颗粒，进行如下计算和处理，用于喷溅\n                    if (r < 10) {\n                        if (Math.random() < 0.1) {\n                            part.scale = Math.random() * 6.0;\n                        }\n                        else {\n                            part.scale = Math.random() * 3.0;\n                        }\n                        part.setInitialCondition(p_x + Math.random() * 100 - 50, p_y + Math.random() * 100 - 50, 0, 0, 0);\n                        part.texIndex = Math.random() * 6;\n                    }\n                    else if (r < 30) {\n                        if (Math.random() < 0.1) {\n                            part.scale = Math.random() * 4.0;\n                            part.texIndex = 1;\n                        }\n                        else {\n                            part.scale = Math.random() * 0.5 + 1.0;\n                            part.texIndex = Math.random() * 6;\n                        }\n                        pw = Math.random() * 0.7 + 0.3;\n                        part.setInitialCondition(p_x + d_x * pw * 15, p_y + d_y * pw * 15, 0, 0, 0);\n                    }\n                    else if (r < 50) {\n                        pw = Math.random() * 0.7 + 0.3;\n                        part.scale = Math.random() * 0.1 + 0.5;\n                        part.setInitialCondition(p_x + pR_x, p_y + pR_y, d_x * pw, d_y * pw, 30 * Math.pow(strength, 0.7));\n                        part.texIndex = 0;\n                        part.flg = true;\n                    }\n                    else {\n                        part.setInitialCondition(p_x + pR_x, p_y + pR_y, d_x * .1, d_y * .1, 30);\n                        part.texIndex = Math.random() < 0.2 ? 1 : 0;\n                        part.scale = Math.random() * 0.3 + 1.2;\n                    }\n                    part.scale *= 1.2;\n                    //texScaleは解像度fetch\n                    part.scale *= strength * 40; //?\n                    this.mParticles.push(part);\n                    if (this.mParticles.length > 500) {\n                        var cc = Math.floor(Math.random() * 250);\n                        this.mParticles.splice(cc, 1);\n                    }\n                }\n            }\n            this.mPrevDiffX = diff_x;\n            this.mPrevDiffY = diff_y;\n            this.mPrevMouseX = pos_x;\n            this.mPrevMouseY = pos_y;\n        }\n        clear() {\n            this._painted = false;\n            this.mParticles.length = 0;\n            this.mCtx3D.setRenderToBackBuffer();\n            this.mCtx3D.clear(0, 0, 0, 0);\n            //Tシャツイメージを作成  //创建基本T恤图案\n            if (this.mTexBaseT == null)\n                this.canvasChange();\n        }\n        canvasChange() {\n            var bmd = new stageJS.BitmapData(1024, 1024, false, 0xFFFFFF);\n            uniqlo.UTImageBuilder.createPrintedImage(bmd, this._bmdBackImage, uniqlo.UTItemManager.wkMultiply, false, false, false);\n            this.mTexBaseT = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, bmd, stageJS.Context3DTextureFormat.BGRA, false, false, 'mTexBaseT');\n            this._currentRect = uniqlo.UTItemManager.getZoomRectMotion(this.currentScale, this._mcWidth, this._mcHeight);\n        }\n    }\n    uniqlo.PaintImpl = PaintImpl;\n})(uniqlo || (uniqlo = {}));\n/// <reference path=\"RemixBaseImpl.ts\" />\nvar uniqlo;\n(function (uniqlo) {\n    class SplashImpl extends uniqlo.RemixBaseImpl {\n        constructor(_weakMode, p1, p2, p3, p4, p5, p6, p7) {\n            super(false, _weakMode);\n            this.mColorRandRange = 0.3;\n            // private mFudeSize:number=5;  //笔刷尺寸\n            this.mFudeSize = 3; //笔刷尺寸\n            this.srcRate = 0.6;\n            this.mWeakCounter = 0;\n            this.mParticles = new Array();\n            this.particle1 = p1;\n            this.particle2 = p2;\n            this.particle3 = p3;\n            this.particle4 = p4;\n            this.particle5 = p5;\n            this.particle6 = p6;\n            this.particle7 = p7;\n        }\n        initWithData(stage, backBmd, srcBmd) {\n            this.mColorBmd = new stageJS.BitmapData(uniqlo.UTItemManager.IMAGE_WIDTH * this.srcRate, uniqlo.UTItemManager.IMAGE_HEIGHT * this.srcRate, true, 0);\n            var m2 = new uniqlo.Matrix;\n            m2.scale(this.mColorBmd.width / srcBmd.width, this.mColorBmd.height / srcBmd.height);\n            this.mColorBmd.draw(srcBmd, m2, null, null, null, false);\n            this.mSrcImage = srcBmd;\n            super.init3D(stage, backBmd, srcBmd);\n        }\n        dispose() {\n            this.mSrcImage = null;\n            this.mParticles.length = 0;\n            this.mColorBmd.dispose();\n            this.mColorBmd = null;\n            for (var i = 0; i < this.mTexParts.length; i++) {\n                this.mTexParts[i].dispose();\n            }\n            this.mTexParts.length = 0;\n            this.mTexParts = null;\n            super.dispose();\n        }\n        setup() {\n            this.mTexParts = null;\n            this.mTexParts = new Array();\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle1, stageJS.Context3DTextureFormat.BGRA, true, true));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle2, stageJS.Context3DTextureFormat.BGRA, true, true));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle3, stageJS.Context3DTextureFormat.BGRA, true, true));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle4, stageJS.Context3DTextureFormat.BGRA, true, true));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle5, stageJS.Context3DTextureFormat.BGRA, true, true));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle6, stageJS.Context3DTextureFormat.BGRA, true, true));\n            this.mTexParts.push(uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, this.particle7, stageJS.Context3DTextureFormat.BGRA, true, true));\n        }\n        draw() {\n            var part;\n            var ac = -1;\n            var num = this.mParticles.length;\n            for (var i = 0; i < num;) { //对所有的画点\n                part = this.mParticles[i];\n                if (part.posX - part.scale * .55 > 0 &&\n                    part.posY - part.scale * .55 > 0 &&\n                    part.posX + part.scale * .55 < uniqlo.UTItemManager.IMAGE_WIDTH &&\n                    part.posY + part.scale * .55 < (uniqlo.UTItemManager.IMAGE_HEIGHT)) { //如果喷溅点整体落在画布内\n                    if (!(part.flg && Math.random() > 0.7)) { //大颗粒要按随机概率喷\n                        if (ac != part.texIndex) { //设置画点的纹理\n                            this.mCtx3D.setTextureAt(0, this.mTexParts[part.texIndex]);\n                            ac = part.texIndex;\n                        }\n                        this.mUniformMatrix[0] = part.posX + (Math.random() * 1 - 0.5) * part.scale * .06 - uniqlo.UTItemManager.IMAGE_WIDTH; // BUG: -\n                        this.mUniformMatrix[1] = uniqlo.UTItemManager.IMAGE_HEIGHT - part.posY + (Math.random() * 1 - 0.5) * part.scale * .06; // BUG: -\n                        this.mUniformMatrix[3] = part.scale * (Math.random() * 0.4 + 0.8);\n                        if (part.flg || Math.random() < 0.1) { //颜色按随机按颗粒是否飞溅进行变浅或者加深，part.flg标志是否飞溅出去的颗粒\n                            this.mUniformColor[3] = Math.random();\n                            this.mUniformColor[0] = part.r * this.mUniformColor[3];\n                            this.mUniformColor[1] = part.g * this.mUniformColor[3];\n                            this.mUniformColor[2] = part.b * this.mUniformColor[3];\n                        }\n                        else { //否则颜色不变\n                            this.mUniformColor[0] = part.r;\n                            this.mUniformColor[1] = part.g;\n                            this.mUniformColor[2] = part.b;\n                            this.mUniformColor[3] = 1;\n                        }\n                        this.mUniformMatrix[2] = part.flg ? Math.random() * 100 : part.angle; //大部分颗粒的纹理设置固定角度\n                        //飞溅出去的颗粒的纹理按角度进行处理\n                        this.mUniformMatrix[3] = part.scale;\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, this.mUniformColor);\n                        this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.mUniformMatrix);\n                        this.mCtx3D.drawTriangles(this.mIndicies);\n                    }\n                }\n                if (part.life > 0) {\n                    part.update();\n                    i++;\n                }\n                else { //把life为0的画点，从数组中删除\n                    this.mParticles.splice(i, 1);\n                    num--;\n                }\n            }\n            this.mUniformColor[3] = 1;\n        }\n        addedForce(_x, _y) {\n            this.mWeakCounter++;\n            // if(this.weakMode&&this.mWeakCounter>100)return;\n            var pos_x;\n            var pos_y;\n            // var vel_x:number=-_x*1.3;\n            // var vel_y:number=-_y*1.3;\n            var vel_x = -_x * 0.5;\n            var vel_y = -_y * 0.5;\n            var pw;\n            var mActiveColor;\n            var strength = 0.1 + Math.min(this.mFudeSize, Math.sqrt(vel_x * vel_x + vel_y * vel_y) / 50.0); //喷溅强度，和笔划粗细及摇动强度相关\n            var v = Math.max(Math.sqrt(vel_x * vel_x + vel_y * vel_y), 10.0); //晃动速度\n            if (this.weakMode) {\n                if (strength > 1.2)\n                    strength = 1.2;\n            }\n            var pR_x, pR_y;\n            var f, c;\n            //trace(strength);\n            var alphaPower;\n            var alpha;\n            for (var i = 0; i < v; i++) { //随机v个随机点（数），和晃动速度相关\n                for (var cl = 0; cl < 50; cl++) { //找到一个透明度大于1的点\n                    pos_y = Math.floor(Math.random() * uniqlo.UTItemManager.IMAGE_HEIGHT);\n                    pos_x = Math.floor(Math.random() * uniqlo.UTItemManager.IMAGE_WIDTH);\n                    mActiveColor = this.mColorBmd.getPixel32(pos_x / uniqlo.UTItemManager.IMAGE_WIDTH * (uniqlo.UTItemManager.IMAGE_WIDTH * this.srcRate), (uniqlo.UTItemManager.IMAGE_HEIGHT - pos_y) / uniqlo.UTItemManager.IMAGE_HEIGHT * (uniqlo.UTItemManager.IMAGE_HEIGHT * this.srcRate));\n                    alpha = (mActiveColor >> 24 & 0xFF);\n                    if (alpha > 0)\n                        break;\n                }\n                if (alpha < 1)\n                    return; //alpha通道值是0-255的数，\n                alphaPower = Math.pow(alpha / 255.0, 5);\n                if (alphaPower < 1.0)\n                    alphaPower *= 0.5; //计算alpha通道值\n                var r = Math.random() * 1000;\n                var part = new uniqlo.PVParticle;\n                part.angle = Math.random() * 720;\n                part.flg = false;\n                var color;\n                if (Math.random() < 0.1) { //在小概率情况下，变换颜色\n                    var coladd = (Math.random() * this.mColorRandRange - this.mColorRandRange * .5) * 255;\n                    var _colorR = ((mActiveColor >> 16) & 0xFF) + coladd;\n                    var _colorG = ((mActiveColor >> 8) & 0xFF) + coladd;\n                    var _colorB = ((mActiveColor >> 0) & 0xFF) + coladd;\n                    _colorR = _colorR < 0 ? 0 : (_colorR > 255 ? 255 : _colorR);\n                    _colorG = _colorG < 0 ? 0 : (_colorG > 255 ? 255 : _colorG);\n                    _colorB = _colorB < 0 ? 0 : (_colorB > 255 ? 255 : _colorB);\n                    color = (_colorR << 16) | (_colorG << 8) | (_colorB); //RGB的拼接，\n                }\n                else { //大概率情况下，颜色不变\n                    color = mActiveColor;\n                }\n                part.r = ((color >> 16) & 0xFF) / 255.0;\n                part.g = ((color >> 8) & 0xFF) / 255.0;\n                part.b = ((color >> 0) & 0xFF) / 255.0;\n                pR_x = Math.random() * 100 - 50;\n                pR_y = Math.random() * 100 - 50;\n                //pR.normalize(1);\n                f = Math.sqrt(pR_x * pR_x + pR_y * pR_y);\n                pR_x /= f; //将pR_x, pR_y缩小为-1/根号2--1/根号2之间\n                pR_y /= f;\n                c = Math.random() * 50 - 25;\n                pR_x *= c; //放大\n                pR_y *= c;\n                if (r < 10) { //很少的概率下，1%以内，让颗粒飞溅出去，设置很小的颗粒半径\n                    //小粒　飛距離大\n                    //continue;\n                    part.scale = Math.pow(Math.random(), 0.3) * 2.0 * strength * alphaPower * (this.weakMode ? 0.3 : 1.0); //颗粒直径\n                    part.texIndex = Math.floor(Math.random() * 6);\n                    if (part.texIndex == 2)\n                        part.texIndex = 6;\n                    part.setInitialCondition(pos_x + Math.random() * 400 - 200, pos_y + Math.random() * 400 - 200, 0, 0, 0); //喷溅位置和方向\n                    //part.texIndex=1;\n                }\n                else if (r < 20) { ////很少的概率下，1%，让颗粒飞溅较近，半径涉及稍大\n                    //大粒　飛距離小\n                    //continue;\n                    part.scale = Math.pow(Math.random(), 0.3) * 4.0 * strength * alphaPower * (this.weakMode ? 0.3 : 1.0); //颗粒直径\n                    part.texIndex = Math.floor(Math.random() * 6);\n                    if (part.texIndex == 2)\n                        part.texIndex = 6;\n                    part.setInitialCondition(pos_x + Math.random() * 100 - 50, pos_y + Math.random() * 100 - 50, 0, 0, 0); //喷溅位置和方向\n                    //part.texIndex=1;\n                }\n                else if (r < 30) {\n                    //continue;\n                    pw = (Math.random() * 0.7 + 0.3) * 0.5 * alphaPower * strength * (this.weakMode ? 0.3 : 1.0);\n                    part.scale = (Math.random() * 0.5 + 1.0) * alphaPower * strength * (this.weakMode ? 0.3 : 1.0); //颗粒直径\n                    part.setInitialCondition(pos_x + pR_x, pos_y + pR_y, vel_x * pw, vel_y * pw, this.weakMode ? 10 : 30); //喷溅位置和方向\n                    part.texIndex = 0;\n                    part.flg = Math.random() < 0.8; //随机喷溅\n                }\n                else { //大概率下，颗粒飞溅效果弱，但方向和晃动方向保持一致\n                    //continue;\n                    //通常の弱いストローク//通常较弱的形成\n                    pw = Math.pow(Math.random(), 2) * 0.3 * alphaPower * (this.weakMode ? 0.3 : 1.0);\n                    part.setInitialCondition(pos_x + pR_x, pos_y + pR_y, vel_x * pw, vel_y * pw, this.weakMode ? 3 : 10); //飞溅方向和坐标设置\n                    part.texIndex = Math.random() < 0.8 ? 0 : 2; //Math.random()<0.5?0:Math.random()*7;\n                    part.scale = (Math.random() * 1.6 + 0.4) * alphaPower * strength * (this.weakMode ? 0.3 : 1.0); //颗粒直径\n                    part.flg = part.texIndex == 0 && pw < 0.2 ? false : true; //part.texIndex>0;//随机喷溅\n                }\n                //texScaleは解像度fetch\n                part.scale *= 20; //颗粒直径放大\n                this.mParticles.push(part); //将颗粒压栈\n                if (this.mParticles.length > 500) { //如果颗粒超过500，随机删除一个，最多500个飞溅颗粒\n                    var cc = Math.random() * 250;\n                    this.mParticles.splice(cc, 1);\n                }\n            }\n        }\n        clear() {\n            this.mWeakCounter = 0;\n            this.mParticles.length = 0;\n            super.clear();\n        }\n    }\n    uniqlo.SplashImpl = SplashImpl;\n})(uniqlo || (uniqlo = {}));\n///<reference path=\"../reference.ts\"/>\n/**\n * Base event class\n * @class stageJS.events.Event\n */\nvar stageJS;\n(function (stageJS) {\n    var events;\n    (function (events) {\n        class Event {\n            constructor(type) {\n                this.type = undefined;\n                this.target = undefined;\n                this.type = type;\n            }\n            clone() {\n                return new Event(this.type);\n            }\n        }\n        Event.CONTEXT3D_CREATE = \"CONTEXT3D_CREATE\";\n        Event.ENTER_FRAME = \"ENTER_FRAME\";\n        Event.ACTIVATE = \"ACTIVATE\";\n        events.Event = Event;\n    })(events = stageJS.events || (stageJS.events = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var events;\n    (function (events) {\n        class ErrorEvent extends stageJS.events.Event {\n            constructor() {\n                super(ErrorEvent.ERROR);\n            }\n        }\n        ErrorEvent.ERROR = \"error\";\n        events.ErrorEvent = ErrorEvent;\n    })(events = stageJS.events || (stageJS.events = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var events;\n    (function (events) {\n        /**\n         * copy from https://github.com/awayjs/awayjs-core-ts/blob/master/src/away/events/EventDispatcher.ts\n         *\n         * Base class for dispatching events\n         *\n         * @class stageJS.events.EventDispatcher\n         *\n         */\n        class EventDispatcher {\n            constructor(target = null) {\n                this.listeners = new Array();\n                this.target = target || this;\n            }\n            /**\n             * Add an event listener\n             * @method addEventListener\n             * @param {String} Name of event to add a listener for\n             * @param {Function} Callback function\n             */\n            addEventListener(type, listener) {\n                if (this.listeners[type] === undefined)\n                    this.listeners[type] = new Array();\n                if (this.getEventListenerIndex(type, listener) === -1)\n                    this.listeners[type].push(listener);\n            }\n            /**\n             * Remove an event listener\n             * @method removeEventListener\n             * @param {String} Name of event to remove a listener for\n             * @param {Function} Callback function\n             */\n            removeEventListener(type, listener) {\n                var index = this.getEventListenerIndex(type, listener);\n                if (index !== -1)\n                    this.listeners[type].splice(index, 1);\n            }\n            /**\n             * Dispatch an event\n             * @method dispatchEvent\n             * @param {Event} Event to dispatch\n             */\n            dispatchEvent(event) {\n                var listenerArray = this.listeners[event.type];\n                if (listenerArray !== undefined) {\n                    var l = listenerArray.length;\n                    event.target = this.target;\n                    for (var i = 0; i < l; i++)\n                        listenerArray[i](event);\n                }\n            }\n            /**\n             * get Event Listener Index in array. Returns -1 if no listener is added\n             * @method getEventListenerIndex\n             * @param {String} Name of event to remove a listener for\n             * @param {Function} Callback function\n             */\n            getEventListenerIndex(type, listener) {\n                if (this.listeners[type] !== undefined) {\n                    var a = this.listeners[type];\n                    var l = a.length;\n                    for (var i = 0; i < l; i++)\n                        if (listener == a[i])\n                            return i;\n                }\n                return -1;\n            }\n            /**\n             * check if an object has an event listener assigned to it\n             * @method hasListener\n             * @param {String} Name of event to remove a listener for\n             * @param {Function} Callback function\n             */\n            hasEventListener(type, listener) {\n                if (listener != null) {\n                    return (this.getEventListenerIndex(type, listener) !== -1);\n                }\n                else {\n                    if (this.listeners[type] !== undefined)\n                        return (this.listeners[type].length > 0);\n                    return false;\n                }\n            }\n        }\n        events.EventDispatcher = EventDispatcher;\n    })(events = stageJS.events || (stageJS.events = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var geom;\n    (function (geom) {\n        class Orientation3D {\n        }\n        Orientation3D.AXIS_ANGLE = \"axisAngle\";\n        Orientation3D.EULER_ANGLES = \"eulerAngles\";\n        Orientation3D.QUATERNION = \"quaternion\";\n        geom.Orientation3D = Orientation3D;\n    })(geom = stageJS.geom || (stageJS.geom = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var geom;\n    (function (geom) {\n        class Vector3D {\n            /**\n             * Creates an instance of a Vector3D object. If you do not specify a parameter for the constructor,\n             * a Vector3D object is created with the elements (0,0,0,0).\n             * @param\tx\tThe first element, such as the x coordinate.\n             * @param\ty\tThe second element, such as the y coordinate.\n             * @param\tz\tThe third element, such as the z coordinate.\n             * @param\tw\tAn optional element for additional data such as the angle of rotation.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            constructor(x = 0, y = 0, z = 0, w = 0) {\n                this.x = x;\n                this.y = y;\n                this.z = z;\n                this.w = w;\n            }\n            /**\n             * [read-only] The length, magnitude, of the current Vector3D object from the origin(0, 0, 0) to the object's x, y, and z coordinates.\n             */\n            get length() {\n                return Math.sqrt(this.lengthSquared);\n            }\n            /**\n             * [read-only] The square of the length of the current Vector3D object, calculated using the x, y, and z properties.\n             */\n            get lengthSquared() {\n                return this.x * this.x + this.y * this.y + this.z * this.z;\n            }\n            /**\n             * [static] Returns the angle in radians between two vectors.\n             */\n            static angleBetween(a, b) {\n                return Math.acos(a.dotProduct(b) / (a.length * b.length));\n            }\n            /**\n             * [static] Returns the distance between two Vector3D objects.\n             */\n            static distance(pt1, pt2) {\n                var x = (pt1.x - pt2.x);\n                var y = (pt1.y - pt2.y);\n                var z = (pt1.z - pt2.z);\n                return Math.sqrt(x * x + y * y + z * z);\n            }\n            /**\n             * Adds the value of the x, y, and z elements of the current Vector3D object\n             * to the values of the x, y, and z elements of another Vector3D object.\n             * The add() method does not change the current Vector3D object. Instead, it returns\n             * a new Vector3D object with the new values.\n             *\n             *   The result of adding two vectors together is a resultant vector. One way to visualize\n             * the result is by drawing a vector from the origin or tail of the first vector\n             * to the end or head of the second vector. The resultant vector is the distance\n             * between the origin point of the first vector and the end point of the second vector.\n             * @param\ta\tA Vector3D object to be added to the current Vector3D object.\n             * @return\tA Vector3D object that is the result of adding the current Vector3D object\n             *   to another Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            add(a) {\n                return new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z);\n            }\n            /**\n             * Subtracts the value of the x, y, and z elements of the current Vector3D object\n             * from the values of the x, y, and z elements of another Vector3D object.\n             * The subtract() method does not change the current Vector3D object. Instead,\n             * this method returns a new Vector3D object with the new values.\n             * @param\ta\tThe Vector3D object to be subtracted from the current Vector3D object.\n             * @return\tA new Vector3D object that is the difference between the current Vector3D\n             *   and the specified Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            subtract(a) {\n                return new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n            }\n            /**\n             * Increments the value of the x, y, and z elements of the current Vector3D object\n             * by the values of the x, y, and z elements of a specified Vector3D object. Unlike the\n             * Vector3D.add() method, the incrementBy() method changes the current\n             * Vector3D object and does not return a new Vector3D object.\n             * @param\ta\tThe Vector3D object to be added to the current Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            incrementBy(a) {\n                this.x += a.x;\n                this.y += a.y;\n                this.z += a.z;\n            }\n            /**\n             * Decrements the value of the x, y, and z elements of the current Vector3D object\n             * by the values of the x, y, and z elements of specified Vector3D object. Unlike the\n             * Vector3D.subtract() method, the decrementBy() method changes the current\n             * Vector3D object and does not return a new Vector3D object.\n             * @param\ta\tThe Vector3D object containing the values to subtract from the current Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            decrementBy(a) {\n                this.x -= a.x;\n                this.y -= a.y;\n                this.z -= a.z;\n            }\n            /**\n             * Determines whether two Vector3D objects are equal by comparing the x, y, and z\n             * elements of the current Vector3D object with a specified Vector3D object. If the values of\n             * these elements are the same, the two Vector3D objects are equal. If the second\n             * optional parameter is set to true, all four elements of the Vector3D objects,\n             * including the w property, are compared.\n             * @param\ttoCompare\tThe Vector3D object to be compared with the current Vector3D object.\n             * @param\tallFour\tAn optional parameter that specifies whether the w property of\n             *   the Vector3D objects is used in the comparison.\n             * @return\tA value of true if the specified Vector3D object is equal to the current\n             *   Vector3D object; false if it is not equal.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            equals(toCompare, allFour = false) {\n                return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (allFour ? this.w == toCompare.w : true));\n            }\n            /**\n             * Compares the elements of the current Vector3D object with the elements of a specified\n             * Vector3D object to determine whether they are nearly equal. The two Vector3D objects are nearly equal\n             * if the value of all the elements of the two vertices are equal, or the result of the comparison\n             * is within the tolerance range. The difference between two elements must be less than the number\n             * specified as the tolerance parameter. If the third optional parameter is set to\n             * true, all four elements of the Vector3D objects, including the w property,\n             * are compared. Otherwise, only the x, y, and z elements are included in the comparison.\n             * @param\ttoCompare\tThe Vector3D object to be compared with the current Vector3D object.\n             * @param\ttolerance\tA number determining the tolerance factor. If the difference between the values\n             *   of the Vector3D element specified in the toCompare parameter and the current Vector3D element\n             *   is less than the tolerance number, the two values are considered nearly equal.\n             * @param\tallFour\tAn optional parameter that specifies whether the w property of\n             *   the Vector3D objects is used in the comparison.\n             * @return\tA value of true if the specified Vector3D object is nearly equal to the current\n             *   Vector3D object; false if it is not equal.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            nearEquals(toCompare, tolerance, allFour = false) {\n                var abs = Math.abs;\n                return ((abs(this.x - toCompare.x) < tolerance) && (abs(this.y - toCompare.y) < tolerance) && (abs(this.z - toCompare.z) < tolerance) && (allFour ? (abs(this.w - toCompare.w) < tolerance) : true));\n            }\n            /**\n             * Returns a new Vector3D object that is an exact copy of the current Vector3D object.\n             * @return\tA new Vector3D object that is a copy of the current Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            clone() {\n                return new Vector3D(this.x, this.y, this.z, this.w);\n            }\n            /**\n             * Copies all of vector data from the source Vector3D object into the calling Vector3D object.\n             */\n            copyFrom(sourceVector3D) {\n                this.x = sourceVector3D.x;\n                this.y = sourceVector3D.y;\n                this.z = sourceVector3D.z;\n                this.w = sourceVector3D.w;\n            }\n            /**\n             * Sets the current Vector3D object to its inverse. The inverse object is also considered the\n             * opposite of the original object. The value of\n             * the x, y, and z properties of the current Vector3D object\n             * is changed to -x, -y, and -z.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            negate() {\n                this.x = -this.x;\n                this.y = -this.y;\n                this.z = -this.z;\n            }\n            /**\n             * Scales the current Vector3D object by a scalar, a magnitude. The Vector3D object's\n             * x, y, and z elements are multiplied by the scalar number\n             * specified in the parameter. For example, if the vector is scaled by ten,\n             * the result is a vector that is ten times longer. The scalar can also\n             * change the direction of the vector. Multiplying the vector by a negative\n             * number reverses its direction.\n             * @param\ts\tA multiplier (scalar) used to scale a Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            scaleBy(s) {\n                this.x *= s;\n                this.y *= s;\n                this.z *= s;\n            }\n            /**\n             * Sets the members of Vector3D to the specified values\n             */\n            setTo(xa, ya, za) {\n                this.x = xa;\n                this.y = ya;\n                this.z = za;\n            }\n            /**\n             * Converts a Vector3D object to a unit vector by dividing the first three elements\n             * (x, y, z) by the length of the vector. Unit vertices are\n             * vertices that have a direction but their length is one. They simplify\n             * vector calculations by removing length as a factor.\n             * @return\tThe length of the current Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            normalize() {\n                var leng = this.length;\n                if (leng != 0)\n                    this.scaleBy(1 / leng);\n                return leng;\n            }\n            /**\n             * Returns a new Vector3D object that is perpendicular (at a right angle) to the current\n             * Vector3D and another Vector3D object. If the returned Vector3D object's coordinates are\n             * (0,0,0), then the two Vector3D objects are perpendicular to each other.\n             *\n             *   You can use the normalized cross product of two vertices of a polygon surface with the\n             * normalized vector of the camera or eye viewpoint to get a dot product. The value of\n             * the dot product can identify whether a surface of a three-dimensional object is hidden\n             * from the viewpoint.\n             * @param\ta\tA second Vector3D object.\n             * @return\tA new Vector3D object that is perpendicular to the current Vector3D object and the Vector3D\n             *   object specified as the parameter.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            crossProduct(a) {\n                return new Vector3D(this.y * a.z - this.z * a.y, this.z * a.x - this.x * a.z, this.x * a.y - this.y * a.x);\n            }\n            /**\n             * If the current Vector3D object and the one specified as the parameter are unit vertices, this\n             * method returns the cosine of the angle between the two vertices. Unit vertices are vertices that\n             * point to the same direction but their length is one. They remove the length of the vector\n             * as a factor in the result. You can use the normalize() method to convert a vector to a unit vector.\n             *\n             *   The dotProduct() method finds the angle between two vertices. It is also\n             * used in backface culling or lighting calculations. Backface culling is a procedure for determining\n             * which surfaces are hidden from the viewpoint. You can use the normalized vertices from the camera,\n             * or eye, viewpoint and the cross product of the vertices of a polygon surface to get the dot product.\n             * If the dot product is less than zero, then the surface is facing the camera or the viewer. If the\n             * two unit vertices are perpendicular to each other, they are orthogonal and the dot product is zero.\n             * If the two vertices are parallel to each other, the dot product is one.\n             * @param\ta\tThe second Vector3D object.\n             * @return\tA scalar which is the dot product of the current Vector3D object and the specified Vector3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            dotProduct(a) {\n                return (this.x * a.x + this.y * a.y + this.z * a.z);\n            }\n            /**\n             * Divides the value of the x, y, and z properties of the\n             * current Vector3D object by the value of its w property.\n             *\n             *   If the current Vector3D object is the result of multiplying a Vector3D object by a projection Matrix3D object,\n             * the w property can hold the transform value. The project() method then can\n             * complete the projection by dividing the elements by the w property. Use the\n             * Matrix3D.rawData property to create a projection Matrix3D object.\n             * @langversion\t3.0\n             * @playerversion\tFlash 10\n             * @playerversion\tAIR 1.5\n             */\n            project() {\n                if (this.w == 0)\n                    return;\n                this.x /= this.w;\n                this.y /= this.w;\n                this.z /= this.w;\n            }\n            /**\n             * Returns a string representation of the current Vector3D object.\n             */\n            toString() {\n                return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z:\" + this.z + \", w:\" + this.w + \")\";\n            }\n        }\n        /**\n         * The x axis defined as a Vector3D object with coordinates (1,0,0).\n         */\n        Vector3D.X_AXIS = new Vector3D(1, 0, 0);\n        /**\n         * The y axis defined as a Vector3D object with coordinates (0,1,0).\n         */\n        Vector3D.Y_AXIS = new Vector3D(0, 1, 0);\n        /**\n         * The z axis defined as a Vector3D object with coordinates (0,0,1).\n         */\n        Vector3D.Z_AXIS = new Vector3D(0, 0, 1);\n        geom.Vector3D = Vector3D;\n    })(geom = stageJS.geom || (stageJS.geom = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var geom;\n    (function (geom) {\n        class Matrix3D {\n            /**\n             * Creates a Matrix3D object.\n             */\n            constructor(v = null) {\n                if (v != null && v.length == 16)\n                    this.rawData = new Float32Array(v.slice(0));\n                else\n                    this.rawData = new Float32Array([\n                        1, 0, 0, 0,\n                        0, 1, 0, 0,\n                        0, 0, 1, 0,\n                        0, 0, 0, 1\n                    ]);\n            }\n            /**\n             * [read-only] A Number that determines whether a matrix is invertible.\n             */\n            get determinant() {\n                return ((this.rawData[0] * this.rawData[5] - this.rawData[4] * this.rawData[1]) * (this.rawData[10] * this.rawData[15] - this.rawData[14] * this.rawData[11])\n                    - (this.rawData[0] * this.rawData[9] - this.rawData[8] * this.rawData[1]) * (this.rawData[6] * this.rawData[15] - this.rawData[14] * this.rawData[7])\n                    + (this.rawData[0] * this.rawData[13] - this.rawData[12] * this.rawData[1]) * (this.rawData[6] * this.rawData[11] - this.rawData[10] * this.rawData[7])\n                    + (this.rawData[4] * this.rawData[9] - this.rawData[8] * this.rawData[5]) * (this.rawData[2] * this.rawData[15] - this.rawData[14] * this.rawData[3])\n                    - (this.rawData[4] * this.rawData[13] - this.rawData[12] * this.rawData[5]) * (this.rawData[2] * this.rawData[11] - this.rawData[10] * this.rawData[3])\n                    + (this.rawData[8] * this.rawData[13] - this.rawData[12] * this.rawData[9]) * (this.rawData[2] * this.rawData[7] - this.rawData[6] * this.rawData[3]));\n            }\n            get position() {\n                return new geom.Vector3D(this.rawData[3], this.rawData[7], this.rawData[11]);\n            }\n            /**\n             * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n             * Apply a transform after this transform\n             */\n            append(lhs) {\n                //lhs * this\n                var a11 = lhs.rawData[0];\n                var a12 = lhs.rawData[1];\n                var a13 = lhs.rawData[2];\n                var a14 = lhs.rawData[3];\n                var a21 = lhs.rawData[4];\n                var a22 = lhs.rawData[5];\n                var a23 = lhs.rawData[6];\n                var a24 = lhs.rawData[7];\n                var a31 = lhs.rawData[8];\n                var a32 = lhs.rawData[9];\n                var a33 = lhs.rawData[10];\n                var a34 = lhs.rawData[11];\n                var a41 = lhs.rawData[12];\n                var a42 = lhs.rawData[13];\n                var a43 = lhs.rawData[14];\n                var a44 = lhs.rawData[15];\n                var b11 = this.rawData[0];\n                var b12 = this.rawData[1];\n                var b13 = this.rawData[2];\n                var b14 = this.rawData[3];\n                var b21 = this.rawData[4];\n                var b22 = this.rawData[5];\n                var b23 = this.rawData[6];\n                var b24 = this.rawData[7];\n                var b31 = this.rawData[8];\n                var b32 = this.rawData[9];\n                var b33 = this.rawData[10];\n                var b34 = this.rawData[11];\n                var b41 = this.rawData[12];\n                var b42 = this.rawData[13];\n                var b43 = this.rawData[14];\n                var b44 = this.rawData[15];\n                // a * b\n                this.rawData[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n                this.rawData[1] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n                this.rawData[2] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n                this.rawData[3] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n                this.rawData[4] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n                this.rawData[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n                this.rawData[6] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n                this.rawData[7] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n                this.rawData[8] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n                this.rawData[9] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n                this.rawData[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n                this.rawData[11] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n                this.rawData[12] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n                this.rawData[13] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n                this.rawData[14] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n                this.rawData[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n            }\n            /**\n            * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n            */\n            prepend(rhs) {\n                // this * rhs\n                var a11 = rhs.rawData[0];\n                var a12 = rhs.rawData[1];\n                var a13 = rhs.rawData[2];\n                var a14 = rhs.rawData[3];\n                var a21 = rhs.rawData[4];\n                var a22 = rhs.rawData[5];\n                var a23 = rhs.rawData[6];\n                var a24 = rhs.rawData[7];\n                var a31 = rhs.rawData[8];\n                var a32 = rhs.rawData[9];\n                var a33 = rhs.rawData[10];\n                var a34 = rhs.rawData[11];\n                var a41 = rhs.rawData[12];\n                var a42 = rhs.rawData[13];\n                var a43 = rhs.rawData[14];\n                var a44 = rhs.rawData[15];\n                var b11 = this.rawData[0];\n                var b12 = this.rawData[1];\n                var b13 = this.rawData[2];\n                var b14 = this.rawData[3];\n                var b21 = this.rawData[4];\n                var b22 = this.rawData[5];\n                var b23 = this.rawData[6];\n                var b24 = this.rawData[7];\n                var b31 = this.rawData[8];\n                var b32 = this.rawData[9];\n                var b33 = this.rawData[10];\n                var b34 = this.rawData[11];\n                var b41 = this.rawData[12];\n                var b42 = this.rawData[13];\n                var b43 = this.rawData[14];\n                var b44 = this.rawData[15];\n                //b * a\n                this.rawData[0] = b11 * a11 + b12 * a21 + b13 * a31 + b14 * a41;\n                this.rawData[1] = b11 * a12 + b12 * a22 + b13 * a32 + b14 * a42;\n                this.rawData[2] = b11 * a13 + b12 * a23 + b13 * a33 + b14 * a43;\n                this.rawData[3] = b11 * a14 + b12 * a24 + b13 * a34 + b14 * a44;\n                this.rawData[4] = b21 * a11 + b22 * a21 + b23 * a31 + b24 * a41;\n                this.rawData[5] = b21 * a12 + b22 * a22 + b23 * a32 + b24 * a42;\n                this.rawData[6] = b21 * a13 + b22 * a23 + b23 * a33 + b24 * a43;\n                this.rawData[7] = b21 * a14 + b22 * a24 + b23 * a34 + b24 * a44;\n                this.rawData[8] = b31 * a11 + b32 * a21 + b33 * a31 + b34 * a41;\n                this.rawData[9] = b31 * a12 + b32 * a22 + b33 * a32 + b34 * a42;\n                this.rawData[10] = b31 * a13 + b32 * a23 + b33 * a33 + b34 * a43;\n                this.rawData[11] = b31 * a14 + b32 * a24 + b33 * a34 + b34 * a44;\n                this.rawData[12] = b41 * a11 + b42 * a21 + b43 * a31 + b44 * a41;\n                this.rawData[13] = b41 * a12 + b42 * a22 + b43 * a32 + b44 * a42;\n                this.rawData[14] = b41 * a13 + b42 * a23 + b43 * a33 + b44 * a43;\n                this.rawData[15] = b41 * a14 + b42 * a24 + b43 * a34 + b44 * a44;\n            }\n            /**\n             * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n             */\n            appendScale(xScale, yScale, zScale) {\n                /*\n                 *              x 0 0 0\n                 *              0 y 0 0    *  this\n                 *              0 0 z 0\n                 *              0 0 0 1\n                 */\n                this.rawData[0] *= xScale;\n                this.rawData[1] *= xScale;\n                this.rawData[2] *= xScale;\n                this.rawData[3] *= xScale;\n                this.rawData[4] *= yScale;\n                this.rawData[5] *= yScale;\n                this.rawData[6] *= yScale;\n                this.rawData[7] *= yScale;\n                this.rawData[8] *= zScale;\n                this.rawData[9] *= zScale;\n                this.rawData[10] *= zScale;\n                this.rawData[11] *= zScale;\n            }\n            /**\n             * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n             */\n            prependScale(xScale, yScale, zScale) {\n                /*\n                 *            x 0 0 0\n                 *    this *  0 y 0 0\n                 *            0 0 z 0\n                 *            0 0 0 1\n                 */\n                this.rawData[0] *= xScale;\n                this.rawData[1] *= yScale;\n                this.rawData[2] *= zScale;\n                this.rawData[4] *= xScale;\n                this.rawData[5] *= yScale;\n                this.rawData[6] *= zScale;\n                this.rawData[8] *= xScale;\n                this.rawData[9] *= yScale;\n                this.rawData[10] *= zScale;\n                this.rawData[12] *= xScale;\n                this.rawData[13] *= yScale;\n                this.rawData[14] *= zScale;\n            }\n            /**\n             * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n             */\n            appendTranslation(x, y, z) {\n                /*\n                 *             1 0 0 x\n                 *             0 1 0 y   *  this\n                 *             0 0 1 z\n                 *             0 0 0 1\n                 */\n                this.rawData[0] += this.rawData[12] * x;\n                this.rawData[1] += this.rawData[13] * x;\n                this.rawData[2] += this.rawData[14] * x;\n                this.rawData[3] += this.rawData[15] * x;\n                this.rawData[4] += this.rawData[12] * y;\n                this.rawData[5] += this.rawData[14] * y;\n                this.rawData[6] += this.rawData[14] * y;\n                this.rawData[7] += this.rawData[15] * y;\n                this.rawData[8] += this.rawData[12] * z;\n                this.rawData[9] += this.rawData[13] * z;\n                this.rawData[10] += this.rawData[14] * z;\n                this.rawData[11] += this.rawData[15] * z;\n            }\n            /**\n             * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n             */\n            prependTranslation(x, y, z) {\n                /*\n                             1 0 0 x\n                    this *   0 1 0 y\n                             0 0 0 z\n                             0 0 0 1\n                 */\n                this.rawData[3] = this.rawData[0] * x + this.rawData[1] * y + this.rawData[2] * z + this.rawData[3];\n                this.rawData[7] = this.rawData[4] * x + this.rawData[5] * y + this.rawData[6] * z + this.rawData[7];\n                this.rawData[11] = this.rawData[8] * x + this.rawData[9] * y + this.rawData[10] * z + this.rawData[11];\n                this.rawData[15] = this.rawData[12] * x + this.rawData[13] * y + this.rawData[14] * z + this.rawData[15];\n            }\n            /**\n             * Appends an incremental rotation to a Matrix3D object.\n             */\n            appendRotation(degrees, axis, pivotPoint = null) {\n                var r = this.getRotateMatrix(axis, degrees * Matrix3D.DEG_2_RAD);\n                if (pivotPoint) {\n                    //TODO:simplify\n                    this.appendTranslation(-pivotPoint.x, -pivotPoint.y, -pivotPoint.z);\n                    this.append(r);\n                    this.appendTranslation(pivotPoint.x, pivotPoint.y, pivotPoint.z);\n                }\n                else {\n                    this.append(r);\n                }\n            }\n            /**\n             * Prepends an incremental rotation to a Matrix3D object.\n             */\n            prependRotation(degrees, axis, pivotPoint = null) {\n                var r = this.getRotateMatrix(axis, degrees * Matrix3D.DEG_2_RAD);\n                if (pivotPoint) {\n                    //TODO:simplify\n                    this.prependTranslation(pivotPoint.x, pivotPoint.y, pivotPoint.z);\n                    this.prepend(r);\n                    this.prependTranslation(-pivotPoint.x, -pivotPoint.y, -pivotPoint.z);\n                }\n                else {\n                    this.prepend(r);\n                }\n            }\n            /**\n             * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n             */\n            clone() {\n                return new Matrix3D(Array.prototype.slice.call(this.rawData));\n            }\n            /**\n             *  Copies a Vector3D object into specific column of the calling Matrix3D object.\n             */\n            copyColumnFrom(column /*uint*/, vector3D) {\n                if (column < 0 || column > 3)\n                    throw new Error(\"column error\");\n                this.rawData[column] = vector3D.x;\n                this.rawData[column + 4] = vector3D.y;\n                this.rawData[column + 8] = vector3D.z;\n                this.rawData[column + 12] = vector3D.w;\n            }\n            /**\n             * Copies specific column of the calling Matrix3D object into the Vector3D object.\n             */\n            copyColumnTo(column /*uint*/, vector3D) {\n                if (column < 0 || column > 3)\n                    throw new Error(\"column error\");\n                vector3D.x = this.rawData[column];\n                vector3D.y = this.rawData[column + 4];\n                vector3D.z = this.rawData[column + 8];\n                vector3D.w = this.rawData[column + 12];\n            }\n            /**\n             * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n             */\n            copyFrom(sourceMatrix3D) {\n                this.rawData.set(sourceMatrix3D.rawData);\n            }\n            /**\n             * Copies all of the vector data from the source vector object into the calling Matrix3D object.\n             */\n            copyRawDataFrom(vector, index = 0, transpose = false) {\n                if (transpose)\n                    this.transpose();\n                var len = vector.length - index;\n                if (len < 16)\n                    throw new Error(\"Arguments Error\");\n                else if (len > 16)\n                    len = 16;\n                for (var c = 0; c < len; c++)\n                    this.rawData[c] = vector[c + index];\n                if (transpose)\n                    this.transpose();\n            }\n            /**\n             * Copies all of the matrix data from the calling Matrix3D object into the provided vector.\n             */\n            copyRawDataTo(vector, index = 0, transpose = false) {\n                if (transpose)\n                    this.transpose();\n                if (index > 0) {\n                    for (var i = 0; i < index; i++)\n                        vector[i] = 0;\n                }\n                var len = this.rawData.length;\n                for (var c = 0; c < len; c++)\n                    vector[c + index] = this.rawData[c];\n                if (transpose)\n                    this.transpose();\n            }\n            /**\n             * Copies a Vector3D object into specific row of the calling Matrix3D object.\n             */\n            copyRowFrom(row /*uint*/, vector3D) {\n                if (row < 0 || row > 3)\n                    throw new Error(\"row error\");\n                this.rawData[row * 4 + 0] = vector3D.x;\n                this.rawData[row * 4 + 1] = vector3D.y;\n                this.rawData[row * 4 + 2] = vector3D.z;\n                this.rawData[row * 4 + 3] = vector3D.w;\n            }\n            /**\n             * Copies specific row of the calling Matrix3D object into the Vector3D object.\n             */\n            copyRowTo(row /*uint*/, vector3D) {\n                if (row < 0 || row > 3)\n                    throw new Error(\"row error\");\n                vector3D.x = this.rawData[row * 4];\n                vector3D.y = this.rawData[row * 4 + 1];\n                vector3D.z = this.rawData[row * 4 + 2];\n                vector3D.w = this.rawData[row * 4 + 3];\n            }\n            copyToMatrix3D(dest) {\n                dest.rawData.set(this.rawData);\n            }\n            /**\n             * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n             */\n            decompose(orientationStyle = \"eulerAngles\") {\n                // http://www.gamedev.net/topic/467665-decomposing-rotationtranslationscale-from-matrix/\n                var vec = [];\n                var m = this.clone();\n                var mr = m.rawData;\n                var pos = new geom.Vector3D(mr[12], mr[13], mr[14]);\n                mr[12] = 0;\n                mr[13] = 0;\n                mr[14] = 0;\n                var scale = new geom.Vector3D();\n                scale.x = Math.sqrt(mr[0] * mr[0] + mr[1] * mr[1] + mr[2] * mr[2]);\n                scale.y = Math.sqrt(mr[4] * mr[4] + mr[5] * mr[5] + mr[6] * mr[6]);\n                scale.z = Math.sqrt(mr[8] * mr[8] + mr[9] * mr[9] + mr[10] * mr[10]);\n                //determine 3*3\n                if (mr[0] * (mr[5] * mr[10] - mr[6] * mr[9]) - mr[1] * (mr[4] * mr[10] - mr[6] * mr[8]) + mr[2] * (mr[4] * mr[9] - mr[5] * mr[8]) < 0)\n                    scale.z = -scale.z;\n                mr[0] /= scale.x;\n                mr[1] /= scale.x;\n                mr[2] /= scale.x;\n                mr[4] /= scale.y;\n                mr[5] /= scale.y;\n                mr[6] /= scale.y;\n                mr[8] /= scale.z;\n                mr[9] /= scale.z;\n                mr[10] /= scale.z;\n                var rot = new geom.Vector3D();\n                switch (orientationStyle) {\n                    case stageJS.geom.Orientation3D.AXIS_ANGLE:\n                        rot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1) / 2);\n                        var len = Math.sqrt((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));\n                        rot.x = (mr[6] - mr[9]) / len;\n                        rot.y = (mr[8] - mr[2]) / len;\n                        rot.z = (mr[1] - mr[4]) / len;\n                        break;\n                    case stageJS.geom.Orientation3D.QUATERNION:\n                        var tr = mr[0] + mr[5] + mr[10];\n                        if (tr > 0) {\n                            rot.w = Math.sqrt(1 + tr) / 2;\n                            rot.x = (mr[6] - mr[9]) / (4 * rot.w);\n                            rot.y = (mr[8] - mr[2]) / (4 * rot.w);\n                            rot.z = (mr[1] - mr[4]) / (4 * rot.w);\n                        }\n                        else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n                            rot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10]) / 2;\n                            rot.w = (mr[6] - mr[9]) / (4 * rot.x);\n                            rot.y = (mr[1] + mr[4]) / (4 * rot.x);\n                            rot.z = (mr[8] + mr[2]) / (4 * rot.x);\n                        }\n                        else if (mr[5] > mr[10]) {\n                            rot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10]) / 2;\n                            rot.x = (mr[1] + mr[4]) / (4 * rot.y);\n                            rot.w = (mr[8] - mr[2]) / (4 * rot.y);\n                            rot.z = (mr[6] + mr[9]) / (4 * rot.y);\n                        }\n                        else {\n                            rot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5]) / 2;\n                            rot.x = (mr[8] + mr[2]) / (4 * rot.z);\n                            rot.y = (mr[6] + mr[9]) / (4 * rot.z);\n                            rot.w = (mr[1] - mr[4]) / (4 * rot.z);\n                        }\n                        break;\n                    case stageJS.geom.Orientation3D.EULER_ANGLES:\n                        rot.y = Math.asin(-mr[2]);\n                        //var cos:number = Math.cos(rot.y);\n                        if (mr[2] != 1 && mr[2] != -1) {\n                            rot.x = Math.atan2(mr[6], mr[10]);\n                            rot.z = Math.atan2(mr[1], mr[0]);\n                        }\n                        else {\n                            rot.z = 0;\n                            rot.x = Math.atan2(mr[4], mr[5]);\n                        }\n                        break;\n                }\n                vec.push(pos);\n                vec.push(rot);\n                vec.push(scale);\n                return vec;\n            }\n            /**\n             * Converts the current matrix to an identity or unit matrix.\n             */\n            identity() {\n                this.rawData = new Float32Array([\n                    1, 0, 0, 0,\n                    0, 1, 0, 0,\n                    0, 0, 1, 0,\n                    0, 0, 0, 1\n                ]);\n            }\n            /**\n             * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n             */\n            //TODO: only support rotation matrix for now\n            static interpolate(thisMat, toMat, percent) {\n                var a = new geom.Quaternion().fromMatrix3D(thisMat);\n                var b = new geom.Quaternion().fromMatrix3D(toMat);\n                return geom.Quaternion.lerp(a, b, percent).toMatrix3D();\n            }\n            /**\n             * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n             */\n            //TODO: only support rotation matrix for now\n            interpolateTo(toMat, percent) {\n                this.rawData.set(Matrix3D.interpolate(this, toMat, percent).rawData);\n            }\n            /**\n             * Inverts the current matrix.\n             */\n            invert() {\n                var d = this.determinant;\n                var invertable = Math.abs(d) > 0.00000000001;\n                if (invertable) {\n                    d = 1 / d;\n                    var m11 = this.rawData[0];\n                    var m21 = this.rawData[4];\n                    var m31 = this.rawData[8];\n                    var m41 = this.rawData[12];\n                    var m12 = this.rawData[1];\n                    var m22 = this.rawData[5];\n                    var m32 = this.rawData[9];\n                    var m42 = this.rawData[13];\n                    var m13 = this.rawData[2];\n                    var m23 = this.rawData[6];\n                    var m33 = this.rawData[10];\n                    var m43 = this.rawData[14];\n                    var m14 = this.rawData[3];\n                    var m24 = this.rawData[7];\n                    var m34 = this.rawData[11];\n                    var m44 = this.rawData[15];\n                    this.rawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\n                    this.rawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\n                    this.rawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\n                    this.rawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\n                    this.rawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\n                    this.rawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\n                    this.rawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\n                    this.rawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\n                    this.rawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\n                    this.rawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\n                    this.rawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\n                    this.rawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\n                    this.rawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\n                    this.rawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\n                    this.rawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\n                    this.rawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\n                }\n                return invertable;\n            }\n            /**\n             * Rotates the display object so that it faces a specified position.\n             */\n            pointAt(pos, at = null, up = null) {\n                console.log('pointAt not impletement');\n                //            if (at == null)\n                //                at = new Vector3D(0, -1, 0);\n                //            if (up == null)\n                //                up = new Vector3D(0, 0, -1);\n                //\n                //            var zAxis: Vector3D = at.subtract(pos);\n                //            zAxis.normalize();\n                //\n                //            var xAxis: Vector3D = zAxis.crossProduct(up);\n                //            var yAxis: Vector3D = zAxis.crossProduct(xAxis);\n                //\n                //            this.rawData = new Float32Array([\n                //                xAxis.x, xAxis.y, xAxis.z, 0,\n                //                yAxis.x, yAxis.y, yAxis.z, 0,\n                //                zAxis.x, zAxis.y, zAxis.z, 0,\n                //                pos.x, pos.y, pos.z, 1\n                //            ]);\n            }\n            /**\n             * Sets the transformation matrix's translation, rotation, and scale settings.\n             */\n            recompose(components, orientationStyle = \"eulerAngles\") {\n                if (components.length < 3)\n                    return false;\n                //TODO: only support euler angle for now\n                var scale_tmp = components[2];\n                var pos_tmp = components[0];\n                var euler_tmp = components[1];\n                this.identity();\n                this.appendScale(scale_tmp.x, scale_tmp.y, scale_tmp.z);\n                this.append(this.getRotateMatrix(stageJS.geom.Vector3D.X_AXIS, euler_tmp.x));\n                this.append(this.getRotateMatrix(stageJS.geom.Vector3D.Y_AXIS, euler_tmp.y));\n                this.append(this.getRotateMatrix(stageJS.geom.Vector3D.Z_AXIS, euler_tmp.z));\n                this.rawData[12] = pos_tmp.x;\n                this.rawData[13] = pos_tmp.y;\n                this.rawData[14] = pos_tmp.z;\n                this.rawData[15] = 1;\n                return true;\n            }\n            /**\n             * Uses the transformation matrix to transform a Vector3D object from one space coordinate to another.\n             */\n            transformVector(v) {\n                /*\n                          [ x\n                this  *     y\n                            z\n                            1 ]\n                */\n                return new geom.Vector3D(v.x * this.rawData[0] + v.y * this.rawData[1] + v.z * this.rawData[2] + this.rawData[3], v.x * this.rawData[4] + v.y * this.rawData[5] + v.z * this.rawData[6] + this.rawData[7], v.x * this.rawData[8] + v.y * this.rawData[9] + v.z * this.rawData[10] + this.rawData[11], 1 //v.x * this.rawData[12] + v.y * this.rawData[13] + v.z * this.rawData[14] + this.rawData[15]\n                );\n            }\n            /**\n             * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space coordinate to another.\n             */\n            deltaTransformVector(v) {\n                /*\n                           [ x\n                 this  *     y\n                             z\n                             0 ]\n                 */\n                return new geom.Vector3D(v.x * this.rawData[0] + v.y * this.rawData[1] + v.z * this.rawData[2], v.x * this.rawData[4] + v.y * this.rawData[5] + v.z * this.rawData[6], v.x * this.rawData[8] + v.y * this.rawData[9] + v.z * this.rawData[10], 0 //v.x * this.rawData[12] + v.y * this.rawData[13] + v.z * this.rawData[14]\n                );\n            }\n            /**\n             * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n             */\n            transformVectors(vin, vout) {\n                var i = 0;\n                var v = new geom.Vector3D();\n                var v2 = new geom.Vector3D();\n                while (i + 3 <= vin.length) {\n                    v.x = vin[i];\n                    v.y = vin[i + 1];\n                    v.z = vin[i + 2];\n                    v2 = this.transformVector(v); //todo: simplify operation\n                    vout[i] = v2.x;\n                    vout[i + 1] = v2.y;\n                    vout[i + 2] = v2.z;\n                    i += 3;\n                }\n            }\n            /**\n             * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n             */\n            transpose() {\n                var a12 = this.rawData[1];\n                var a13 = this.rawData[2];\n                var a14 = this.rawData[3];\n                var a21 = this.rawData[4];\n                var a23 = this.rawData[6];\n                var a24 = this.rawData[7];\n                var a31 = this.rawData[8];\n                var a32 = this.rawData[9];\n                var a34 = this.rawData[11];\n                var a41 = this.rawData[12];\n                var a42 = this.rawData[13];\n                var a43 = this.rawData[14];\n                this.rawData[1] = a21;\n                this.rawData[2] = a31;\n                this.rawData[3] = a41;\n                this.rawData[4] = a12;\n                this.rawData[6] = a32;\n                this.rawData[7] = a42;\n                this.rawData[8] = a13;\n                this.rawData[9] = a23;\n                this.rawData[11] = a43;\n                this.rawData[12] = a14;\n                this.rawData[13] = a24;\n                this.rawData[14] = a34;\n            }\n            toString() {\n                var str = \"[Matrix3D]\\n\";\n                for (var i = 0; i < this.rawData.length; i++) {\n                    str += this.rawData[i] + \"  , \";\n                    if (((i + 1) % 4) == 0)\n                        str += \"\\n\";\n                }\n                return str;\n            }\n            getRotateMatrix(axis, radians) {\n                var ax = axis.x;\n                var ay = axis.y;\n                var az = axis.z;\n                //var radians: number = Math.PI / 180 * degrees;\n                var c = Math.cos(radians);\n                var s = Math.sin(radians);\n                //get rotation matrix\n                var rMatrix;\n                if (ax != 0 && ay == 0 && az == 0) //rotate about x axis ,from y to z\n                 {\n                    rMatrix = new Matrix3D([\n                        1, 0, 0, 0,\n                        0, c, -s, 0,\n                        0, s, c, 0,\n                        0, 0, 0, 1\n                    ]);\n                }\n                else if (ay != 0 && ax == 0 && az == 0) // rotate about y ,from z to x\n                 {\n                    rMatrix = new Matrix3D([\n                        c, 0, s, 0,\n                        0, 1, 0, 0,\n                        -s, 0, c, 0,\n                        0, 0, 0, 1\n                    ]);\n                }\n                else if (az != 0 && ax == 0 && ay == 0) // rotate about z axis ,from x to y\n                 {\n                    rMatrix = new Matrix3D([\n                        c, -s, 0, 0,\n                        s, c, 0, 0,\n                        0, 0, 1, 0,\n                        0, 0, 0, 1,\n                    ]);\n                }\n                else {\n                    //make sure axis is a unit vector\n                    var lsq = axis.lengthSquared;\n                    if (Math.abs(lsq - 1) > 0.0001) {\n                        var f = 1 / Math.sqrt(lsq);\n                        ax = axis.x * f;\n                        ay = axis.y * f;\n                        az = axis.z * f;\n                    }\n                    var t = 1 - c;\n                    rMatrix = new Matrix3D([\n                        ax * ax * t + c, ax * ay * t - az * s, ax * az * t + ay * s, 0,\n                        ax * ay * t + az * s, ay * ay * t + c, ay * az * t - ax * s, 0,\n                        ax * az * t - ay * s, ay * az * t + ax * s, az * az * t + c, 0,\n                        0, 0, 0, 1\n                    ]);\n                }\n                return rMatrix;\n            }\n        }\n        Matrix3D.DEG_2_RAD = Math.PI / 180;\n        geom.Matrix3D = Matrix3D;\n    })(geom = stageJS.geom || (stageJS.geom = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\n///<reference path=\"Matrix3D.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var geom;\n    (function (geom) {\n        class Quaternion {\n            constructor(x = 0, y = 0, z = 0, w = 1) {\n                this.x = 0;\n                this.y = 0;\n                this.z = 0;\n                this.w = 1;\n                this.x = x;\n                this.y = y;\n                this.z = z;\n                this.w = w;\n            }\n            static lerp(qa, qb, percent) {\n                // shortest direction\n                if (qa.x * qb.x + qa.y * qb.y + qa.z * qb.z + qa.w * qb.w < 0) {\n                    return new Quaternion(qa.x + percent * (-qb.x - qa.x), qa.y + percent * (-qb.y - qa.y), qa.z + percent * (-qb.z - qa.z), qa.w + percent * (-qb.w - qb.w));\n                }\n                return new Quaternion(qa.x + percent * (qb.x - qa.x), qa.y + percent * (qb.y - qa.y), qa.z + percent * (qb.z - qa.z), qa.w + percent * (qb.w - qb.w));\n            }\n            fromMatrix3D(m) {\n                var m11 = m.rawData[0], m12 = m.rawData[1], m13 = m.rawData[2], m21 = m.rawData[4], m22 = m.rawData[5], m23 = m.rawData[6], m31 = m.rawData[8], m32 = m.rawData[9], m33 = m.rawData[10];\n                var tr = m11 + m22 + m33;\n                var tmp;\n                if (tr > 0) {\n                    tmp = 1 / (2 * Math.sqrt(tr + 1));\n                    this.x = (m23 - m32) * tmp;\n                    this.y = (m31 - m13) * tmp;\n                    this.z = (m12 - m21) * tmp;\n                    this.w = 0.25 / tmp;\n                }\n                else {\n                    if ((m11 > m22) && (m11 > m33)) {\n                        tmp = 1 / (2 * Math.sqrt(1 + m11 - m22 + m33));\n                        this.x = (m21 + m12) * tmp;\n                        this.y = (m13 + m31) * tmp;\n                        this.z = (m32 - m23) * tmp;\n                        this.w = 0.25 / tmp;\n                    }\n                    else if ((m22 > m11) && (m22 > m33)) {\n                        tmp = 1 / (Math.sqrt(1 + m22 - m11 - m33));\n                        this.x = 0.25 / tmp;\n                        this.y = (m32 + m23) * tmp;\n                        this.z = (m13 - m31) * tmp;\n                        this.w = (m21 + m12) * tmp;\n                    }\n                    else if ((m33 > m11) && (m33 > m22)) {\n                        tmp = 1 / (Math.sqrt(1 + m33 - m11 - m22));\n                        this.x = (m32 + m23) * tmp;\n                        this.y = 0.25 / tmp;\n                        this.z = (m21 - m12) * tmp;\n                        this.w = (m13 + m31) * tmp;\n                    }\n                }\n                return this;\n            }\n            toMatrix3D(target = null) {\n                var x2 = this.x + this.x, y2 = this.y + this.y, z2 = this.z + this.z, xx = this.x * x2, xy = this.x * y2, xz = this.x * z2, yy = this.y * y2, yz = this.y * z2, zz = this.z * z2, wx = this.w * x2, wy = this.w * y2, wz = this.w * z2;\n                if (!target)\n                    target = new geom.Matrix3D();\n                target.rawData[0] = 1 - (yy + zz);\n                target.rawData[1] = xy + wz;\n                target.rawData[2] = xz - wy;\n                target.rawData[3] = 0;\n                target.rawData[4] = xy - wz;\n                target.rawData[5] = 1 - (xx + zz);\n                target.rawData[6] = yz + wx;\n                target.rawData[7] = 0;\n                target.rawData[8] = xz + wy;\n                target.rawData[9] = yz - wx;\n                target.rawData[10] = 1 - (xx + yy);\n                target.rawData[11] = 0;\n                target.rawData[12] = 0;\n                target.rawData[13] = 0;\n                target.rawData[14] = 0;\n                target.rawData[15] = 1;\n                return target;\n            }\n            /**\n             * @param axis   must be a normalized vector\n             * @param angleInRadians\n             */\n            fromAxisAngle(axis, angleInRadians) {\n                var angle = angleInRadians * 0.5;\n                var sin_a = Math.sin(angle);\n                var cos_a = Math.cos(angle);\n                this.x = axis.x * sin_a;\n                this.y = axis.y * sin_a;\n                this.z = axis.z * sin_a;\n                this.w = cos_a;\n            }\n            conjugate() {\n                this.x = -this.x;\n                this.y = -this.y;\n                this.z = -this.z;\n            }\n            toString() {\n                return \"[Quaternion] (x:\" + this.x + \" ,y:\" + this.y + \", z:\" + this.z + \", w:\" + this.w + \")\";\n            }\n        }\n        geom.Quaternion = Quaternion;\n    })(geom = stageJS.geom || (stageJS.geom = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"../reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    var geom;\n    (function (geom) {\n        class PerspectiveMatrix3D extends geom.Matrix3D {\n            lookAtLH(eye, at, up) {\n                //http://msdn.microsoft.com/en-us/library/windows/desktop/bb281710(v=vs.85).aspx\n                //zaxis = normal(at - eye)\n                var zX = at.x - eye.x;\n                var zY = at.y - eye.y;\n                var zZ = at.z - eye.z;\n                var len = 1 / Math.sqrt(zX * zX + zY * zY + zZ * zZ);\n                zX *= len;\n                zY *= len;\n                zZ *= len;\n                //xaxis = normal(cross(up,zaxis))\n                var xX = up.y * zZ - up.z * zY;\n                var xY = up.z * zX - up.x * zZ;\n                var xZ = up.x * zY - up.y * zX;\n                len = 1 / Math.sqrt(xX * xX + xY * xY + xZ * xZ);\n                xX *= len;\n                xY *= len;\n                xZ *= len;\n                //yaxis = cross(zaxis,xaxis)\n                var yX = zY * xZ - zZ * xY;\n                var yY = zZ * xX - zX * xZ;\n                var yZ = zX * xY - zY * xX;\n                this.copyRawDataFrom([\n                    xX, xY, xZ, -(xX * eye.x + xY * eye.y + xZ * eye.z),\n                    yX, yY, yZ, -(yX * eye.x + yY * eye.y + yZ * eye.z),\n                    zX, zY, zZ, -(zX * eye.x + zY * eye.y + zZ * eye.z),\n                    0.0, 0.0, 0.0, 1.0\n                ]);\n            }\n            lookAtRH(eye, at, up) {\n                //http://msdn.microsoft.com/en-us/library/windows/desktop/bb281711(v=vs.85).aspx\n                //http://blog.csdn.net/popy007/article/details/5120158\n                //zaxis = normal(eye - at)\n                var zX = eye.x - at.x;\n                var zY = eye.y - at.y;\n                var zZ = eye.z - at.z;\n                var len = 1 / Math.sqrt(zX * zX + zY * zY + zZ * zZ);\n                zX *= len;\n                zY *= len;\n                zZ *= len;\n                // xaxis = normal(cross(up,zaxis))\n                var xX = up.y * zZ - up.z * zY;\n                var xY = up.z * zX - up.x * zZ;\n                var xZ = up.x * zY - up.y * zX;\n                len = 1 / Math.sqrt(xX * xX + xY * xY + xZ * xZ);\n                xX *= len;\n                xY *= len;\n                xZ *= len;\n                //yaxis = cross(zaxis,xaxis)\n                var yX = zY * xZ - zZ * xY;\n                var yY = zZ * xX - zX * xZ;\n                var yZ = zX * xY - zY * xX;\n                this.copyRawDataFrom([\n                    xX, xY, xZ, -(xX * eye.x + xY * eye.y + xZ * eye.z),\n                    yX, yY, yZ, -(yX * eye.x + yY * eye.y + yZ * eye.z),\n                    zX, zY, zZ, -(zX * eye.x + zY * eye.y + zZ * eye.z),\n                    0.0, 0.0, 0.0, 1.0\n                ]);\n            }\n            perspectiveOffCenterLH(left, right, bottom, top, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 * zNear / (right - left), 0.0, (left + right) / (left - right), 0.0,\n                    0.0, 2.0 * zNear / (top - bottom), (bottom + top) / (bottom - top), 0.0,\n                    0.0, 0.0, (zFar + zNear) / (zFar - zNear), 2.0 * zFar * zNear / (zNear - zFar),\n                    0.0, 0.0, 1.0, 0.0\n                ]);\n            }\n            perspectiveLH(width, height, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 * zNear / width, 0.0, 0.0, 0.0,\n                    0.0, 2.0 * zNear / height, 0.0, 0.0,\n                    0.0, 0.0, (zFar + zNear) / (zFar - zNear), 2.0 * zFar * zNear / (zNear - zFar),\n                    0.0, 0.0, 1.0, 0.0\n                ]);\n            }\n            perspectiveFieldOfViewLH(fieldOfViewY, aspectRatio, zNear, zFar) {\n                var yScale = 1.0 / Math.tan(fieldOfViewY / 2.0);\n                var xScale = yScale / aspectRatio;\n                this.copyRawDataFrom([\n                    xScale, 0.0, 0.0, 0.0,\n                    0.0, yScale, 0.0, 0.0,\n                    0.0, 0.0, (zFar + zNear) / (zFar - zNear), 2.0 * zFar * zNear / (zNear - zFar),\n                    0.0, 0.0, 1.0, 0.0\n                ]);\n            }\n            orthoOffCenterLH(left, right, bottom, top, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 / (right - left), 0.0, 0.0, (left + right) / (left - right),\n                    0.0, 2.0 / (top - bottom), 0.0, (bottom + top) / (bottom - top),\n                    0.0, 0.0, 2 / (zFar - zNear), (zNear + zFar) / (zNear - zFar),\n                    0.0, 0.0, 0.0, 1.0\n                ]);\n            }\n            orthoLH(width, height, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 / width, 0.0, 0.0, 0.0,\n                    0.0, 2.0 / height, 0.0, 0.0,\n                    0.0, 0.0, 2 / (zFar - zNear), (zNear + zFar) / (zNear - zFar),\n                    0.0, 0.0, 0.0, 1.0\n                ]);\n            }\n            //pass test\n            perspectiveOffCenterRH(left, right, bottom, top, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 * zNear / (right - left), 0.0, (right + left) / (right - left), 0.0,\n                    0.0, 2.0 * zNear / (top - bottom), (top + bottom) / (top - bottom), 0.0,\n                    0.0, 0.0, (zNear + zFar) / (zNear - zFar), 2.0 * zNear * zFar / (zNear - zFar),\n                    0.0, 0.0, -1.0, 0.0\n                ]);\n            }\n            //pass test\n            perspectiveRH(width, height, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 * zNear / width, 0.0, 0.0, 0.0,\n                    0.0, 2.0 * zNear / height, 0.0, 0.0,\n                    0.0, 0.0, (zNear + zFar) / (zNear - zFar), 2.0 * zNear * zFar / (zNear - zFar),\n                    0.0, 0.0, -1.0, 0.0\n                ]);\n            }\n            //pass test\n            perspectiveFieldOfViewRH(fieldOfViewY, aspectRatio, zNear, zFar) {\n                var yScale = 1.0 / Math.tan(fieldOfViewY / 2.0);\n                var xScale = yScale / aspectRatio;\n                this.copyRawDataFrom([\n                    xScale, 0.0, 0.0, 0.0,\n                    0.0, yScale, 0.0, 0.0,\n                    0.0, 0.0, (zFar + zNear) / (zNear - zFar), 2.0 * zNear * zFar / (zNear - zFar),\n                    0.0, 0.0, -1.0, 0.0\n                ]);\n            }\n            orthoOffCenterRH(left, right, bottom, top, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 / (right - left), 0.0, 0.0, (left + right) / (left - right),\n                    0.0, 2.0 / (top - bottom), 0.0, (bottom + top) / (bottom - top),\n                    0.0, 0.0, -2.0 / (zFar - zNear), (zNear + zFar) / (zNear - zFar),\n                    0.0, 0.0, 0.0, 1.0\n                ]);\n            }\n            orthoRH(width, height, zNear, zFar) {\n                this.copyRawDataFrom([\n                    2.0 / width, 0.0, 0.0, 0.0,\n                    0.0, 2.0 / height, 0.0, 0.0,\n                    0.0, 0.0, -2.0 / (zFar - zNear), (zNear + zFar) / (zNear - zFar),\n                    0.0, 0.0, 0.0, 1.0\n                ]);\n            }\n        }\n        geom.PerspectiveMatrix3D = PerspectiveMatrix3D;\n    })(geom = stageJS.geom || (stageJS.geom = {}));\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    class Context3DVertexBufferFormat {\n    }\n    Context3DVertexBufferFormat.BYTES_4 = \"bytes4\";\n    Context3DVertexBufferFormat.FLOAT_1 = \"float1\";\n    Context3DVertexBufferFormat.FLOAT_2 = \"float2\";\n    Context3DVertexBufferFormat.FLOAT_3 = \"float3\";\n    Context3DVertexBufferFormat.FLOAT_4 = \"float4\";\n    stageJS.Context3DVertexBufferFormat = Context3DVertexBufferFormat;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\" />\nvar stageJS;\n(function (stageJS) {\n    class Context3DTextureFormat {\n    }\n    Context3DTextureFormat.BGRA = \"bgra\";\n    stageJS.Context3DTextureFormat = Context3DTextureFormat;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\" />\nvar stageJS;\n(function (stageJS) {\n    class Context3DCompareMode {\n    }\n    Context3DCompareMode.ALWAYS = \"always\";\n    Context3DCompareMode.EQUAL = \"equal\";\n    Context3DCompareMode.GREATER = \"greater\";\n    Context3DCompareMode.GREATER_EQUAL = \"greaterEqual\";\n    Context3DCompareMode.LESS = \"less\";\n    Context3DCompareMode.LESS_EQUAL = \"lessEqual\";\n    Context3DCompareMode.NEVER = \"never\";\n    Context3DCompareMode.NOT_EQUAL = \"notEqual\";\n    stageJS.Context3DCompareMode = Context3DCompareMode;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    class Context3DBlendFactor {\n        static init() {\n            Context3DBlendFactor.ONE = stageJS.Context3D.GL.ONE;\n            Context3DBlendFactor.ZERO = stageJS.Context3D.GL.ZERO;\n            Context3DBlendFactor.SOURCE_COLOR = stageJS.Context3D.GL.SRC_COLOR;\n            Context3DBlendFactor.DESTINATION_COLOR = stageJS.Context3D.GL.DST_COLOR;\n            Context3DBlendFactor.SOURCE_ALPHA = stageJS.Context3D.GL.SRC_ALPHA;\n            Context3DBlendFactor.DESTINATION_ALPHA = stageJS.Context3D.GL.DST_ALPHA;\n            Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR = stageJS.Context3D.GL.ONE_MINUS_SRC_COLOR;\n            Context3DBlendFactor.ONE_MINUS_DESTINATION_COLOR = stageJS.Context3D.GL.ONE_MINUS_DST_COLOR;\n            Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA = stageJS.Context3D.GL.ONE_MINUS_SRC_ALPHA;\n            Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA = stageJS.Context3D.GL.ONE_MINUS_DST_ALPHA;\n            //CONSTANT_COLOR\n            //ONE_MINUS_CONSTANT_COLOR\n            //ONE_MINUS_CONSTANT_ALPHA\n        }\n    }\n    stageJS.Context3DBlendFactor = Context3DBlendFactor;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\" />\nvar stageJS;\n(function (stageJS) {\n    class Context3DTriangleFace {\n    }\n    Context3DTriangleFace.BACK = \"back\"; //CCW\n    Context3DTriangleFace.FRONT = \"front\"; //CW\n    Context3DTriangleFace.FRONT_AND_BACK = \"frontAndBack\";\n    Context3DTriangleFace.NONE = \"none\";\n    stageJS.Context3DTriangleFace = Context3DTriangleFace;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    class VertexBuffer3D {\n        constructor(numVertices, data32PerVertex) {\n            this._numVertices = numVertices;\n            this._data32PerVertex = data32PerVertex;\n            this._glBuffer = stageJS.Context3D.GL.createBuffer();\n            if (!this._glBuffer)\n                throw new Error(\"Failed to create buffer\");\n            // Context3D.GL.bindBuffer(Context3D.GL.ARRAY_BUFFER, this._glBuffer);\n        }\n        get rawdata() { return this._data; }\n        get glBuffer() {\n            return this._glBuffer;\n        }\n        get data32PerVertex() {\n            return this._data32PerVertex;\n        }\n        uploadFromVector(data, startVertex /* int */, numVertices /* int */) {\n            this._data = data;\n            if (startVertex != 0 || numVertices != this._numVertices) {\n                data = data.slice(startVertex * this._data32PerVertex, (numVertices * this._data32PerVertex));\n            }\n            stageJS.Context3D.GL.bindBuffer(stageJS.Context3D.GL.ARRAY_BUFFER, this._glBuffer);\n            stageJS.Context3D.GL.bufferData(stageJS.Context3D.GL.ARRAY_BUFFER, new Float32Array(data), stageJS.Context3D.GL.STATIC_DRAW);\n            stageJS.Context3D.GL.bindBuffer(stageJS.Context3D.GL.ARRAY_BUFFER, null);\n        }\n        dispose() {\n            stageJS.Context3D.GL.deleteBuffer(this._glBuffer);\n            this._glBuffer = null;\n            this._data.length = 0;\n            this._numVertices = 0;\n            this._data32PerVertex = 0;\n        }\n    }\n    stageJS.VertexBuffer3D = VertexBuffer3D;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\" />\nvar stageJS;\n(function (stageJS) {\n    class IndexBuffer3D {\n        constructor(numIndices /* int */) {\n            this.numIndices = numIndices;\n            this._glBuffer = stageJS.Context3D.GL.createBuffer();\n            //Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, this._glBuffer);\n        }\n        get glBuffer() {\n            return this._glBuffer;\n        }\n        uploadFromVector(data /* Vector.<uint> */, startOffset /* int */, count /* int */) {\n            this._data = data;\n            if (startOffset != 0 || count != this.numIndices) {\n                data = data.slice(startOffset, startOffset + count);\n            }\n            stageJS.Context3D.GL.bindBuffer(stageJS.Context3D.GL.ELEMENT_ARRAY_BUFFER, this._glBuffer);\n            stageJS.Context3D.GL.bufferData(stageJS.Context3D.GL.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), stageJS.Context3D.GL.STATIC_DRAW);\n            stageJS.Context3D.GL.bindBuffer(stageJS.Context3D.GL.ELEMENT_ARRAY_BUFFER, null);\n        }\n        dispose() {\n            stageJS.Context3D.GL.deleteBuffer(this._glBuffer);\n            this._glBuffer = null;\n            this.numIndices = 0;\n            this._data.length = 0;\n        }\n    }\n    stageJS.IndexBuffer3D = IndexBuffer3D;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\" />\nvar stageJS;\n(function (stageJS) {\n    class Texture {\n        constructor(width, height, format, optimizeForRenderToTexture, streamingLevels, reverse = false) {\n            this.reverse = false;\n            this._glTexture = stageJS.Context3D.GL.createTexture();\n            this._streamingLevels = streamingLevels;\n            this._textureUnit = Texture.__texUnit++;\n            //rtt needs these properties\n            this.width = width;\n            this.height = height;\n            this._format = format;\n            this._forRTT = optimizeForRenderToTexture;\n            this.reverse = reverse;\n            if (this._forRTT) {\n                this.imageData = new ImageData(this.width, this.height);\n                this.uploadFromImage(this.imageData, 0);\n                //     Context3D.GL.activeTexture(Context3D.GL[\"TEXTURE\"+this.textureUnit]);\n                //     Context3D.GL.bindTexture(Context3D.GL.TEXTURE_2D, this._glTexture);\n                //     Context3D.GL.texParameteri(Context3D.GL.TEXTURE_2D, Context3D.GL.TEXTURE_MAG_FILTER, Context3D.GL.LINEAR);\n                //     Context3D.GL.texParameteri(Context3D.GL.TEXTURE_2D, Context3D.GL.TEXTURE_MIN_FILTER, Context3D.GL.LINEAR_MIPMAP_NEAREST);\n                //    // Context3D.GL.generateMipmap(Context3D.GL.TEXTURE_2D);\n                //     Context3D.GL.texParameteri(Context3D.GL.TEXTURE_2D, Context3D.GL.TEXTURE_WRAP_S, Context3D.GL.CLAMP_TO_EDGE);\n                //     Context3D.GL.texParameteri(Context3D.GL.TEXTURE_2D, Context3D.GL.TEXTURE_WRAP_T, Context3D.GL.CLAMP_TO_EDGE);\n                //     Context3D.GL.texParameteri(Context3D.GL.TEXTURE_2D, Context3D.GL.TEXTURE_MIN_FILTER, Context3D.GL.LINEAR_MIPMAP_LINEAR); //linnear生成mipmap,缩放也linear\n                //     Context3D.GL.texImage2D(Context3D.GL.TEXTURE_2D,\n                //         0,\n                //         Context3D.GL.RGBA,\n                //         this.width,\n                //         this.height,\n                //         0,\n                //         Context3D.GL.RGBA,\n                //         Context3D.GL.UNSIGNED_BYTE,\n                //         null);\n                // Context3D.GL.texImage2D(Context3D.GL.TEXTURE_2D, 0, Context3D.GL.RGBA, Context3D.GL.RGBA, Context3D.GL.UNSIGNED_BYTE, image);\n                // if(Texture._bindingTexture)\n                //     Context3D.GL.bindTexture(Context3D.GL.TEXTURE_2D , Texture._bindingTexture);\n                // else\n                //     Context3D.GL.bindTexture(Context3D.GL.TEXTURE_2D, null);\n                // Context3D.GL.bindRenderbuffer(Context3D.GL.RENDERBUFFER, null);\n                // Context3D.GL.bindFramebuffer(Context3D.GL.FRAMEBUFFER, null);\n            }\n        }\n        get name() {\n            return this._name ? this._name : 'TEXTURE' + this.textureUnit.toString();\n        }\n        set name(v) {\n            this._name = v;\n        }\n        __getGLTexture() {\n            return this._glTexture;\n        }\n        get textureUnit() {\n            return this._textureUnit;\n        }\n        uploadFromBitmapData(source, miplevel = 0) {\n            if (this._forRTT)\n                console.error(\"rtt texture\");\n            if (source instanceof stageJS.BitmapData) {\n                this.imageData = source.imageData;\n                this.uploadFromImage(source.imageData, miplevel);\n            }\n            else {\n                this.uploadFromImage(source, miplevel);\n            }\n        }\n        uploadFromImage(source, miplevel = 0) {\n            this.source = source;\n            this.miplevel = miplevel;\n            if (this.textureUnit <= stageJS.Context3D.MAX_TEXTURE) {\n                this.activate();\n            }\n        }\n        activate() {\n            var source = this.source;\n            var miplevel = this.miplevel;\n            if (this.textureUnit > stageJS.Context3D.MAX_TEXTURE) {\n                stageJS.Context3D.GL.activeTexture(stageJS.Context3D.GL[\"TEXTURE\" + (stageJS.Context3D.MAX_TEXTURE + 1)]);\n            }\n            else {\n                stageJS.Context3D.GL.activeTexture(stageJS.Context3D.GL[\"TEXTURE\" + this.textureUnit]);\n            }\n            stageJS.Context3D.GL.bindTexture(stageJS.Context3D.GL.TEXTURE_2D, this._glTexture);\n            stageJS.Context3D.GL.pixelStorei(stageJS.Context3D.GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n            stageJS.Context3D.GL.texParameteri(stageJS.Context3D.GL.TEXTURE_2D, stageJS.Context3D.GL.TEXTURE_WRAP_S, stageJS.Context3D.GL.CLAMP_TO_EDGE);\n            stageJS.Context3D.GL.texParameteri(stageJS.Context3D.GL.TEXTURE_2D, stageJS.Context3D.GL.TEXTURE_WRAP_T, stageJS.Context3D.GL.CLAMP_TO_EDGE);\n            // Texture._bindingTexture = this._glTexture;\n            if (this.reverse) {\n                // Context3D.GL.pixelStorei(Context3D.GL.UNPACK_FLIP_Y_WEBGL, 1);\n                // console.log(this.name, 'reversed');\n            }\n            //TODO: set filter mode API\n            stageJS.Context3D.GL.texParameteri(stageJS.Context3D.GL.TEXTURE_2D, stageJS.Context3D.GL.TEXTURE_MAG_FILTER, stageJS.Context3D.GL.LINEAR); //Context3D.GL.NEAREST\n            if (this._streamingLevels == 0) {\n                stageJS.Context3D.GL.texParameteri(stageJS.Context3D.GL.TEXTURE_2D, stageJS.Context3D.GL.TEXTURE_MIN_FILTER, stageJS.Context3D.GL.LINEAR); // Context3D.GL.NEAREST\n            }\n            else {\n                stageJS.Context3D.GL.texParameteri(stageJS.Context3D.GL.TEXTURE_2D, stageJS.Context3D.GL.TEXTURE_MIN_FILTER, stageJS.Context3D.GL.LINEAR_MIPMAP_LINEAR); //linnear生成mipmap,缩放也linear\n                stageJS.Context3D.GL.generateMipmap(stageJS.Context3D.GL.TEXTURE_2D);\n            }\n            stageJS.Context3D.GL.texImage2D(stageJS.Context3D.GL.TEXTURE_2D, miplevel, stageJS.Context3D.GL.RGBA, stageJS.Context3D.GL.RGBA, stageJS.Context3D.GL.UNSIGNED_BYTE, source);\n            if (!stageJS.Context3D.GL.isTexture(this._glTexture)) {\n                throw new Error(\"Error:Texture is invalid\");\n            }\n            //bind null 会不显示贴图 why? 因为gl.ativeTexture没变啊!\n            //Context3D.GL.bindTexture(Context3D.GL.TEXTURE_2D, null);\n        }\n        dispose() {\n            // Context3D.GL.bindTexture(Context3D.GL.TEXTURE_2D, null);\n            Texture._bindingTexture = null;\n            stageJS.Context3D.GL.deleteTexture(this._glTexture);\n            this._glTexture = null;\n            this._streamingLevels = 0;\n        }\n    }\n    Texture.__texUnit = 0;\n    stageJS.Texture = Texture;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    class Program3D {\n        constructor() {\n            this._glProgram = stageJS.Context3D.GL.createProgram();\n        }\n        get glProgram() {\n            return this._glProgram;\n        }\n        dispose() {\n            if (this._vShader) {\n                stageJS.Context3D.GL.detachShader(this._glProgram, this._vShader);\n                stageJS.Context3D.GL.deleteShader(this._vShader);\n                this._vShader = null;\n            }\n            if (this._fShader) {\n                stageJS.Context3D.GL.detachShader(this._glProgram, this._fShader);\n                stageJS.Context3D.GL.deleteShader(this._fShader);\n                this._fShader = null;\n            }\n            stageJS.Context3D.GL.deleteProgram(this._glProgram);\n            this._glProgram = null;\n        }\n        upload(vertexProgramCode, fragmentProgramCode) {\n            this._vShader = this.loadShader(vertexProgramCode, stageJS.Context3D.GL.VERTEX_SHADER);\n            this._fShader = this.loadShader(fragmentProgramCode, stageJS.Context3D.GL.FRAGMENT_SHADER);\n            if (!this._fShader || !this._vShader)\n                throw new Error(\"loadShader error\");\n            stageJS.Context3D.GL.attachShader(this._glProgram, this._vShader);\n            stageJS.Context3D.GL.attachShader(this._glProgram, this._fShader);\n            stageJS.Context3D.GL.linkProgram(this._glProgram);\n            if (!stageJS.Context3D.GL.getProgramParameter(this._glProgram, stageJS.Context3D.GL.LINK_STATUS)) {\n                throw new Error(stageJS.Context3D.GL.getProgramInfoLog(this._glProgram));\n                // this.dispose();\n            }\n        }\n        /*\n         * load shader from html file by document.getElementById\n         */\n        loadShader(elementCode, type) {\n            var shader = stageJS.Context3D.GL.createShader(type);\n            stageJS.Context3D.GL.shaderSource(shader, elementCode);\n            stageJS.Context3D.GL.compileShader(shader);\n            // Check the result of compilation\n            if (!stageJS.Context3D.GL.getShaderParameter(shader, stageJS.Context3D.GL.COMPILE_STATUS)) {\n                throw new Error(stageJS.Context3D.GL.getShaderInfoLog(shader));\n                // Context3D.GL.deleteShader(shader);\n            }\n            return shader;\n        }\n    }\n    stageJS.Program3D = Program3D;\n})(stageJS || (stageJS = {}));\n///<reference path=\"reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    stageJS.VERSION = \"0.3.0\";\n    class Stage3D extends stageJS.events.EventDispatcher {\n        constructor(canvas) {\n            super();\n            this._context3D = null;\n            this._canvas = canvas;\n        }\n        /**\n         * [read-only] The Context3D object associated with this Stage3D instance.\n         */\n        get context3D() {\n            return this._context3D;\n        }\n        get stageWidth() {\n            return this._canvas.width;\n        }\n        get stageHeight() {\n            return this._canvas.height;\n        }\n        requestContext3D() {\n            if (!this._canvas)\n                return;\n            if (this._context3D != null)\n                return this.onCreateSuccess();\n            if (this._canvas.addEventListener)\n                this._canvas.addEventListener(\"webglcontextcreationerror\", this.onCreationError, false);\n            stageJS.Context3D.GL = this.create3DContext();\n            stageJS.Texture.__texUnit = 0;\n            if (stageJS.Context3D.GL == null)\n                return this.onCreationError(null);\n            this._context3D = new stageJS.Context3D();\n            return this.onCreateSuccess();\n        }\n        create3DContext() {\n            var names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n            var context = null;\n            for (var i = 0; i < names.length; i++) {\n                try {\n                    context = this._canvas.getContext(names[i], { preserveDrawingBuffer: true });\n                }\n                catch (e) { }\n                if (context)\n                    break;\n            }\n            return context;\n        }\n        onCreationError(e = null) {\n            if (e != null) {\n                if (this._canvas.removeEventListener)\n                    this._canvas.removeEventListener(\"webglcontextcreationerror\", this.onCreationError, false);\n            }\n            this.dispatchEvent(new stageJS.events.ErrorEvent()); //TODO: error message\n        }\n        onCreateSuccess() {\n            var e = new stageJS.events.Event(stageJS.events.Event.CONTEXT3D_CREATE);\n            e.target = this;\n            this.dispatchEvent(e);\n        }\n    }\n    stageJS.Stage3D = Stage3D;\n})(stageJS || (stageJS = {}));\n///<reference path=\"events/Event.ts\"/>\n///<reference path=\"events/ErrorEvent.ts\"/>\n///<reference path=\"events/EventDispatcher.ts\"/>\n///<reference path=\"geom/Orientation3D.ts\"/>\n///<reference path=\"geom/Vector3D.ts\"/>\n///<reference path=\"geom/Quaternion.ts\"/>\n///<reference path=\"geom/Matrix3D.ts\"/>\n///<reference path=\"geom/PerspectiveMatrix3D.ts\"/>\n///<reference path=\"Context3DVertexBufferFormat.ts\"/>\n///<reference path=\"Context3DTextureFormat.ts\"/>\n///<reference path=\"Context3DCompareMode.ts\"/>\n///<reference path=\"Context3DBlendFactor.ts\"/>\n///<reference path=\"Context3DTriangleFace.ts\"/>\n///<reference path=\"VertexBuffer3D.ts\"/>\n///<reference path=\"IndexBuffer3D.ts\"/>\n///<reference path=\"Texture.ts\"/>\n///<reference path=\"Program3D.ts\"/>\n///<reference path=\"Stage3D.ts\"/>\n/// <reference path=\"Context3D.ts\" />\n///<reference path=\"reference.ts\"/>\nvar stageJS;\n(function (stageJS) {\n    class Context3D {\n        constructor() {\n            this._bendDisabled = true;\n            this._depthDisabled = true;\n            this._linkedProgram = null;\n            this._vaCache = {};\n            this._vcCache = {}; // {variable:array}\n            this._vcMCache = {};\n            this._texCache = {}; //{sampler:Texture}\n            stageJS.Context3DBlendFactor.init();\n        }\n        configureBackBuffer(width /* int */, height /* int */, antiAlias /* int */, enableDepthAndStencil = true) {\n            this.width = width;\n            this.height = height;\n            Context3D.GL.viewport(0, 0, width, height);\n            this._depthDisabled = enableDepthAndStencil;\n            //TODO: antiAlias , Stencil\n            if (enableDepthAndStencil) {\n                this._clearBit = Context3D.GL.COLOR_BUFFER_BIT | Context3D.GL.DEPTH_BUFFER_BIT | Context3D.GL.STENCIL_BUFFER_BIT;\n                Context3D.GL.enable(Context3D.GL.DEPTH_TEST);\n                Context3D.GL.enable(Context3D.GL.STENCIL_TEST);\n            }\n            else {\n                this._clearBit = Context3D.GL.COLOR_BUFFER_BIT;\n                Context3D.GL.disable(Context3D.GL.DEPTH_TEST);\n                Context3D.GL.disable(Context3D.GL.STENCIL_TEST);\n            }\n        }\n        createVertexBuffer(numVertices /* int */, data32PerVertex /* int */) {\n            return new stageJS.VertexBuffer3D(numVertices, data32PerVertex);\n        }\n        createIndexBuffer(numIndices /* int */) {\n            return new stageJS.IndexBuffer3D(numIndices);\n        }\n        /**\n        * @format only support Context3DTextureFormat.BGRA\n        * @optimizeForRenderToTexture not implement\n        */\n        createTexture(width /* int */, height /* int */, format, optimizeForRenderToTexture, streamingLevels = 0, name, reverse = false) {\n            let tex = new stageJS.Texture(width, height, format, optimizeForRenderToTexture, streamingLevels, reverse);\n            tex.name = name;\n            return tex;\n        }\n        setRenderToTexture(texture, enableDepthAndStencil = false, antiAlias = 0, surfaceSelector = 0, colorOutputIndex = 0) {\n            if (enableDepthAndStencil) {\n                this._clearBit = Context3D.GL.COLOR_BUFFER_BIT | Context3D.GL.DEPTH_BUFFER_BIT | Context3D.GL.STENCIL_BUFFER_BIT;\n                Context3D.GL.enable(Context3D.GL.DEPTH_TEST);\n                Context3D.GL.enable(Context3D.GL.STENCIL_TEST);\n            }\n            else {\n                this._clearBit = Context3D.GL.COLOR_BUFFER_BIT;\n                Context3D.GL.disable(Context3D.GL.DEPTH_TEST);\n                Context3D.GL.disable(Context3D.GL.STENCIL_TEST);\n            }\n            //TODO: antiAlias surfaceSelector colorOutputIndex\n            // if(!this._rttFramebuffer)\n            // {\n            if (!this._rttFramebuffer) {\n                this._rttFramebuffer = Context3D.GL.createFramebuffer();\n            }\n            Context3D.GL.bindFramebuffer(Context3D.GL.FRAMEBUFFER, this._rttFramebuffer);\n            // var renderbuffer:WebGLRenderbuffer = Context3D.GL.createRenderbuffer();\n            // Context3D.GL.bindRenderbuffer(Context3D.GL.RENDERBUFFER , renderbuffer);\n            // Context3D.GL.renderbufferStorage(Context3D.GL.RENDERBUFFER , Context3D.GL.DEPTH_COMPONENT16 , texture.width, texture.height); //force 512\n            // Context3D.GL.framebufferRenderbuffer(Context3D.GL.FRAMEBUFFER, Context3D.GL.DEPTH_ATTACHMENT, Context3D.GL.RENDERBUFFER, renderbuffer);\n            Context3D.GL.framebufferTexture2D(Context3D.GL.FRAMEBUFFER, Context3D.GL.COLOR_ATTACHMENT0, Context3D.GL.TEXTURE_2D, texture.__getGLTexture(), 0);\n            // }\n            // Context3D.GL.bindFramebuffer(Context3D.GL.FRAMEBUFFER , this._rttFramebuffer);\n        }\n        setRenderToBackBuffer() {\n            Context3D.GL.bindFramebuffer(Context3D.GL.FRAMEBUFFER, null);\n        }\n        createProgram() {\n            return new stageJS.Program3D();\n        }\n        /**\n        *  @variable must predefined in glsl\n        */\n        setVertexBufferAt(variable, buffer, bufferOffset = 0, format = \"float4\") {\n            var size = 0;\n            switch (format) {\n                case stageJS.Context3DVertexBufferFormat.FLOAT_4:\n                    size = 4;\n                    break;\n                case stageJS.Context3DVertexBufferFormat.FLOAT_3:\n                    size = 3;\n                    break;\n                case stageJS.Context3DVertexBufferFormat.FLOAT_2:\n                    size = 2;\n                    break;\n                case stageJS.Context3DVertexBufferFormat.FLOAT_1:\n                    size = 1;\n                    break;\n                case stageJS.Context3DVertexBufferFormat.BYTES_4:\n                    size = 4;\n                    break;\n            }\n            if (size <= 0)\n                throw new Error(\"vertexBuffer format error\");\n            let v = 'va' + variable.toString();\n            // console.log(v, buffer.rawdata);\n            //We need glProgram to enable vertex attribute , so we cache it , when setProgram() be callled  we enable them all.\n            this._vaCache[v] = { size: size,\n                buffer: buffer.glBuffer,\n                stride: buffer.data32PerVertex * 4,\n                offset: bufferOffset * 4 }; //* 4 bytes per value(Float32Array.BYTES_PER_ELEMENT)\n            //http://blog.tojicode.com/2011/05/interleaved-array-basics.html\n            if (this._linkedProgram)\n                this.enableVA(v);\n        }\n        /**\n        *  @variable must predefined in glsl\n        */\n        setProgramConstantsFromVector(programType, variable, data /* Vector.<Number> */) {\n            if (data.length > 4)\n                throw new Error(\"data length > 4\");\n            let v = (programType == stageJS.Context3DProgramType.VERTEX ? 'v' : 'f') + 'c' + variable.toString();\n            this._vcCache[v] = data;\n            if (this._linkedProgram)\n                this.enableVC(v);\n        }\n        /**\n        *  @variable must predefined in glsl\n        */\n        setProgramConstantsFromMatrix(programType, variable, matrix, transposedMatrix = false) {\n            if (transposedMatrix)\n                matrix.transpose();\n            let v = (programType == stageJS.Context3DProgramType.VERTEX ? 'v' : 'f') + 'c' + variable.toString();\n            // console.log(v, matrix.rawData);\n            this._vcMCache[v] = matrix.rawData;\n            if (this._linkedProgram)\n                this.enableVCM(v);\n        }\n        setTextureAt(sampler, texture) {\n            let s = 'fs' + sampler.toString();\n            // console.log(s, texture.name);\n            this._texCache[s] = texture;\n            if (this._linkedProgram)\n                this.enableTex(s);\n        }\n        setProgram(program) {\n            if (program == null || program == this._linkedProgram)\n                return;\n            this._linkedProgram = program;\n            Context3D.GL.useProgram(program.glProgram);\n            var k;\n            for (k in this._vaCache)\n                this.enableVA(k);\n            for (k in this._vcCache)\n                this.enableVC(k);\n            for (k in this._vcMCache)\n                this.enableVCM(k);\n            for (k in this._texCache)\n                this.enableTex(k);\n        }\n        clear(red = 0.0, green = 0.0, blue = 0.0, alpha = 1.0, depth = 1.0, stencil = 0, mask = 0xffffffff) {\n            Context3D.GL.clearColor(red, green, blue, alpha);\n            Context3D.GL.clearDepth(depth); // TODO:dont need to call this every time\n            Context3D.GL.clearStencil(stencil); //stencil buffer\n            Context3D.GL.clear(this._clearBit);\n        }\n        setCulling(triangleFaceToCull) {\n            Context3D.GL.frontFace(Context3D.GL.CW);\n            switch (triangleFaceToCull) {\n                case stageJS.Context3DTriangleFace.NONE:\n                    Context3D.GL.disable(Context3D.GL.CULL_FACE);\n                    break;\n                case stageJS.Context3DTriangleFace.BACK:\n                    Context3D.GL.enable(Context3D.GL.CULL_FACE);\n                    Context3D.GL.cullFace(Context3D.GL.BACK);\n                    break;\n                case stageJS.Context3DTriangleFace.FRONT:\n                    Context3D.GL.enable(Context3D.GL.CULL_FACE);\n                    Context3D.GL.cullFace(Context3D.GL.FRONT);\n                    break;\n                case stageJS.Context3DTriangleFace.FRONT_AND_BACK:\n                    Context3D.GL.enable(Context3D.GL.CULL_FACE);\n                    Context3D.GL.cullFace(Context3D.GL.FRONT_AND_BACK);\n                    break;\n            }\n        }\n        setDepthTest(depthMask, passCompareMode) {\n            if (this._depthDisabled) {\n                Context3D.GL.enable(Context3D.GL.DEPTH_TEST);\n                this._depthDisabled = false;\n            }\n            Context3D.GL.depthMask(depthMask);\n            switch (passCompareMode) {\n                case stageJS.Context3DCompareMode.LESS:\n                    Context3D.GL.depthFunc(Context3D.GL.LESS); //default\n                    break;\n                case stageJS.Context3DCompareMode.NEVER:\n                    Context3D.GL.depthFunc(Context3D.GL.NEVER);\n                    break;\n                case stageJS.Context3DCompareMode.EQUAL:\n                    Context3D.GL.depthFunc(Context3D.GL.EQUAL);\n                    break;\n                case stageJS.Context3DCompareMode.GREATER:\n                    Context3D.GL.depthFunc(Context3D.GL.GREATER);\n                    break;\n                case stageJS.Context3DCompareMode.NOT_EQUAL:\n                    Context3D.GL.depthFunc(Context3D.GL.NOTEQUAL);\n                    break;\n                case stageJS.Context3DCompareMode.ALWAYS:\n                    Context3D.GL.depthFunc(Context3D.GL.ALWAYS);\n                    break;\n                case stageJS.Context3DCompareMode.LESS_EQUAL:\n                    Context3D.GL.depthFunc(Context3D.GL.LEQUAL);\n                    break;\n                case stageJS.Context3DCompareMode.GREATER_EQUAL:\n                    Context3D.GL.depthFunc(Context3D.GL.GEQUAL);\n                    break;\n            }\n        }\n        setBlendFactors(sourceFactor, destinationFactor) {\n            if (this._bendDisabled) {\n                Context3D.GL.enable(Context3D.GL.BLEND); //stage3d cant disable blend?\n                this._bendDisabled = false;\n            }\n            Context3D.GL.blendFunc(sourceFactor, destinationFactor);\n        }\n        drawTriangles(indexBuffer, firstIndex = 0, numTriangles = -1) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.TRIANGLES, numTriangles < 0 ? indexBuffer.numIndices : numTriangles * 3, Context3D.GL.UNSIGNED_SHORT, firstIndex * 2);\n        }\n        /*\n         *  [Webgl only]\n         *   For instance indices = [1,3,0,4,1,2]; will draw 3 lines :\n         *   from vertex number 1 to vertex number 3, from vertex number 0 to vertex number 4, from vertex number 1 to vertex number 2\n         */\n        drawLines(indexBuffer, firstIndex = 0, numLines = -1) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.LINES, numLines < 0 ? indexBuffer.numIndices : numLines * 2, Context3D.GL.UNSIGNED_SHORT, firstIndex * 2);\n        }\n        /*\n         * [Webgl only]\n         *  For instance indices = [1,2,3] ; will only render vertices number 1, number 2, and number 3\n         */\n        drawPoints(indexBuffer, firstIndex = 0, numPoints = -1) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.POINTS, numPoints < 0 ? indexBuffer.numIndices : numPoints, Context3D.GL.UNSIGNED_SHORT, firstIndex * 2);\n        }\n        /**\n         * [Webgl only]\n         * draws a closed loop connecting the vertices defined in the indexBuffer to the next one\n         */\n        drawLineLoop(indexBuffer, firstIndex = 0, numPoints = -1) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.LINE_LOOP, numPoints < 0 ? indexBuffer.numIndices : numPoints, Context3D.GL.UNSIGNED_SHORT, firstIndex * 2);\n        }\n        /**\n         * [Webgl only]\n         * It is similar to drawLineLoop(). The difference here is that WebGL does not connect the last vertex to the first one (not a closed loop).\n         */\n        drawLineStrip(indexBuffer, firstIndex = 0, numPoints = -1) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.LINE_STRIP, numPoints < 0 ? indexBuffer.numIndices : numPoints, Context3D.GL.UNSIGNED_SHORT, firstIndex * 2);\n        }\n        /**\n        * [Webgl only]\n        *  indices = [0, 1, 2, 3, 4];, then we will generate the triangles:(0, 1, 2), (1, 2, 3), and(2, 3, 4).\n        */\n        drawTriangleStrip(indexBuffer) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.TRIANGLE_STRIP, indexBuffer.numIndices, Context3D.GL.UNSIGNED_SHORT, 0);\n        }\n        /**\n         * [Webgl only]\n         * creates triangles in a similar way to drawTriangleStrip().\n         * However, the first vertex defined in the indexBuffer is taken as the origin of the fan(the only shared vertex among consecutive triangles).\n         * In our example, indices = [0, 1, 2, 3, 4]; will create the triangles: (0, 1, 2) and(0, 3, 4).\n         */\n        drawTriangleFan(indexBuffer) {\n            Context3D.GL.bindBuffer(Context3D.GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n            Context3D.GL.drawElements(Context3D.GL.TRIANGLE_FAN, indexBuffer.numIndices, Context3D.GL.UNSIGNED_SHORT, 0);\n        }\n        drawToBitmapData(bitmap) {\n            // TODO: used in capture\n        }\n        /**\n        *   In webgl we dont need to call present , browser will do this for us.\n        */\n        present() {\n        }\n        enableVA(keyInCache) {\n            var location = Context3D.GL.getAttribLocation(this._linkedProgram.glProgram, keyInCache);\n            if (location < 0) {\n                throw new Error(\"Fail to get the storage location of \" + keyInCache);\n            }\n            var va = this._vaCache[keyInCache];\n            Context3D.GL.bindBuffer(Context3D.GL.ARRAY_BUFFER, va.buffer); // Bind the buffer object to a target\n            Context3D.GL.vertexAttribPointer(location, va.size, Context3D.GL.FLOAT, false, va.stride, va.offset);\n            Context3D.GL.enableVertexAttribArray(location);\n            // Context3D.GL.bindBuffer(Context3D.GL.ARRAY_BUFFER, null);\n        }\n        enableVC(keyInCache) {\n            var index = Context3D.GL.getUniformLocation(this._linkedProgram.glProgram, keyInCache);\n            if (!index)\n                throw new Error(\"Fail to get uniform \" + keyInCache);\n            var vc = this._vcCache[keyInCache];\n            Context3D.GL[\"uniform\" + vc.length + \"fv\"](index, vc);\n        }\n        enableVCM(keyInCache) {\n            var index = Context3D.GL.getUniformLocation(this._linkedProgram.glProgram, keyInCache);\n            if (!index)\n                throw new Error(\"Fail to get uniform \" + keyInCache);\n            Context3D.GL.uniformMatrix4fv(index, false, this._vcMCache[keyInCache]); // bug:the second parameter must be false\n        }\n        enableTex(keyInCache) {\n            var tex = this._texCache[keyInCache];\n            if (tex.textureUnit > Context3D.MAX_TEXTURE) {\n                tex.activate();\n            }\n            else {\n                Context3D.GL.activeTexture(Context3D.GL[\"TEXTURE\" + tex.textureUnit]);\n            }\n            var l = Context3D.GL.getUniformLocation(this._linkedProgram.glProgram, keyInCache);\n            if (!l) {\n                throw new Error(\"Fail to get tex \" + keyInCache);\n            }\n            if (tex.textureUnit > Context3D.MAX_TEXTURE) {\n                Context3D.GL.uniform1i(l, Context3D.MAX_TEXTURE + 1);\n            }\n            else {\n                Context3D.GL.uniform1i(l, tex.textureUnit); // TODO:multiple textures\n            }\n        }\n        dispose() {\n            if (this._rttFramebuffer) {\n                Context3D.GL.deleteFramebuffer(this._rttFramebuffer);\n            }\n        }\n    }\n    Context3D.MAX_TEXTURE = 12;\n    stageJS.Context3D = Context3D;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    class Context3DProgramType {\n    }\n    Context3DProgramType.VERTEX = 'vertex';\n    Context3DProgramType.FRAGMENT = 'fragment';\n    stageJS.Context3DProgramType = Context3DProgramType;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    // TODO: uded in MOMA2\n    class StageQuality {\n        constructor() {\n        }\n    }\n    stageJS.StageQuality = StageQuality;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    // TODO: uded in MOMA2\n    class AdjustColor {\n        constructor() {\n        }\n        CalculateFinalFlatArray() {\n            // TODO: uded in MOMA2\n        }\n    }\n    stageJS.AdjustColor = AdjustColor;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    /*\n    * BitmapData.js by Peter Nitsch - https://github.com/pnitsch/BitmapData.js\n    * HTML5 Canvas API implementation of the AS3 BitmapData class.\n    */\n    const halfColorMax = 0.00784313725;\n    class BlendMode {\n    }\n    BlendMode.ADD = \"add\";\n    BlendMode.ALPHA = \"alpha\";\n    BlendMode.DARKEN = \"darken\";\n    BlendMode.DIFFERENCE = \"difference\";\n    BlendMode.ERASE = \"erase\";\n    BlendMode.HARDLIGHT = \"hardlight\";\n    BlendMode.INVERT = \"invert\";\n    BlendMode.LAYER = \"layer\";\n    BlendMode.LIGHTEN = \"lighten\";\n    BlendMode.MULTIPLY = \"multiply\";\n    BlendMode.NORMAL = \"normal\";\n    BlendMode.OVERLAY = \"overlay\";\n    BlendMode.SCREEN = \"screen\";\n    BlendMode.SHADER = \"shader\";\n    BlendMode.SUBTRACT = \"subtract\";\n    ;\n    var BitmapDataChannel = new function () {\n        this.ALPHA = 8;\n        this.BLUE = 4;\n        this.GREEN = 2;\n        this.RED = 1;\n    };\n    // RGB <-> Hex conversion\n    function hexToRGB(hex) { return { r: ((hex & 0xff0000) >> 16), g: ((hex & 0x00ff00) >> 8), b: ((hex & 0x0000ff)) }; }\n    ;\n    function RGBToHex(rgb) { return rgb.r << 16 | rgb.g << 8 | rgb.b; }\n    ;\n    // 256-value binary Vector struct\n    function histogramVector(n) {\n        var v = [];\n        for (var i = 0; i < 256; i++) {\n            v[i] = n;\n        }\n        return v;\n    }\n    // Park-Miller-Carta Pseudo-Random Number Generator\n    class PRNG {\n        constructor() {\n            this.seed = 1;\n        }\n        next() { return (this.gen() / 2147483647); }\n        ;\n        nextRange(min, max) { return min + ((max - min) * this.next()); }\n        ;\n        gen() { return this.seed = (this.seed * 16807) % 2147483647; }\n        ;\n    }\n    ;\n    class SimplexNoise {\n        constructor(gen) {\n            this.rand = gen;\n            this.grad3 = [\n                [1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n                [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n                [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]\n            ];\n            this.simplex = [\n                [0, 1, 2, 3], [0, 1, 3, 2], [0, 0, 0, 0], [0, 2, 3, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 2, 3, 0],\n                [0, 2, 1, 3], [0, 0, 0, 0], [0, 3, 1, 2], [0, 3, 2, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 3, 2, 0],\n                [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n                [1, 2, 0, 3], [0, 0, 0, 0], [1, 3, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n                [1, 0, 2, 3], [1, 0, 3, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 3, 1], [0, 0, 0, 0], [2, 1, 3, 0],\n                [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n                [2, 0, 1, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 1, 2], [3, 0, 2, 1], [0, 0, 0, 0], [3, 1, 2, 0],\n                [2, 1, 0, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 1, 0, 2], [0, 0, 0, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n            ];\n        }\n        setSeed(seed) {\n            this.p = [];\n            this.rand.seed = seed;\n            for (var i = 0; i < 256; i++) {\n                this.p[i] = Math.floor(this.rand.nextRange(0, 255));\n            }\n            this.perm = [];\n            for (var i = 0; i < 512; i++) {\n                this.perm[i] = this.p[i & 255];\n            }\n        }\n        dot(g, x, y) {\n            return g[0] * x + g[1] * y;\n        }\n        noise(xin, yin) {\n            var n0, n1, n2;\n            var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n            var s = (xin + yin) * F2;\n            var i = Math.floor(xin + s);\n            var j = Math.floor(yin + s);\n            var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n            var t = (i + j) * G2;\n            var X0 = i - t;\n            var Y0 = j - t;\n            var x0 = xin - X0;\n            var y0 = yin - Y0;\n            var i1, j1;\n            if (x0 > y0) {\n                i1 = 1;\n                j1 = 0;\n            }\n            else {\n                i1 = 0;\n                j1 = 1;\n            }\n            var x1 = x0 - i1 + G2;\n            var y1 = y0 - j1 + G2;\n            var x2 = x0 - 1.0 + 2.0 * G2;\n            var y2 = y0 - 1.0 + 2.0 * G2;\n            var ii = i & 255;\n            var jj = j & 255;\n            var gi0 = this.perm[ii + this.perm[jj]] % 12;\n            var gi1 = this.perm[ii + i1 + this.perm[jj + j1]] % 12;\n            var gi2 = this.perm[ii + 1 + this.perm[jj + 1]] % 12;\n            var t0 = 0.5 - x0 * x0 - y0 * y0;\n            if (t0 < 0)\n                n0 = 0.0;\n            else {\n                t0 *= t0;\n                n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);\n            }\n            var t1 = 0.5 - x1 * x1 - y1 * y1;\n            if (t1 < 0)\n                n1 = 0.0;\n            else {\n                t1 *= t1;\n                n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1);\n            }\n            var t2 = 0.5 - x2 * x2 - y2 * y2;\n            if (t2 < 0)\n                n2 = 0.0;\n            else {\n                t2 *= t2;\n                n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2);\n            }\n            return 70.0 * (n0 + n1 + n2);\n        }\n    }\n    class Matrix {\n        constructor() {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.tx = 0;\n            this.ty = 0;\n        }\n        identity() {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.tx = 0;\n            this.ty = 0;\n        }\n        scale(x, y) {\n            if (x !== 1) {\n                this.a *= x;\n                this.c *= x;\n                this.tx *= x;\n            }\n            if (y !== 1) {\n                this.b *= y;\n                this.d *= y;\n                this.ty *= y;\n            }\n        }\n        translate(x, y) {\n            this.tx += x;\n            this.ty += y;\n        }\n    }\n    stageJS.Matrix = Matrix;\n    class BitmapData {\n        constructor(width, height, transparent = false, fillColor = 0xFFFFFF, canvas = null) {\n            this.width = Math.floor(width);\n            this.height = Math.floor(height);\n            this.rect = new Rectangle(0, 0, this.width, this.height);\n            this.transparent = transparent || false;\n            this.canvas = canvas || document.createElement(\"canvas\");\n            this.context = this.canvas.getContext(\"2d\", { willReadFrequently: true });\n            this.canvas.setAttribute('width', this.width.toString());\n            this.canvas.setAttribute('height', this.height.toString());\n            this.drawingCanvas = document.createElement(\"canvas\");\n            this.drawingContext = this.drawingCanvas.getContext(\"2d\", { willReadFrequently: true });\n            if (transparent) {\n                this.context.fillStyle = 'rgba(0,0,0,0)';\n                this.context.fillRect(0, 0, this.width, this.height);\n                this.drawingContext.fillStyle = 'rgba(0,0,0,0)';\n                this.drawingContext.fillRect(0, 0, this.width, this.height);\n            }\n            this.imageData = this.context.getImageData(0, 0, this.width, this.height);\n        }\n        static fromImageElement(element) {\n            let bmd = new BitmapData(element.width, element.height);\n            bmd.draw(element);\n            return bmd;\n        }\n        /*** Canvas2D functions ***/\n        setPixel32(x, y, color) {\n            var pos = (Math.floor(x) + Math.floor(y) * Math.floor(this.width)) * 4;\n            var data = this.imageData.data;\n            data[pos + 0] = (color >> 16) & 0xFF;\n            data[pos + 1] = (color >> 8) & 0xFF;\n            data[pos + 2] = (color >> 0) & 0xFF;\n            data[pos + 3] = (color >> 24) & 0xFF;\n        }\n        ;\n        getPixel(x, y) {\n            var pos = (Math.floor(x) + Math.floor(y) * Math.floor(this.width)) * 4;\n            var data = this.imageData.data;\n            var rgb = {\n                r: data[pos + 0],\n                g: data[pos + 1],\n                b: data[pos + 2],\n                a: data[pos + 3]\n            };\n            return rgb;\n        }\n        getPixel32(x, y) {\n            var pos = (Math.floor(x) + Math.floor(y) * Math.floor(this.width)) * 4;\n            var data = this.imageData.data;\n            var rgba = {\n                r: data[pos + 0],\n                g: data[pos + 1],\n                b: data[pos + 2],\n                a: data[pos + 3]\n            };\n            return rgba.a << 24 | rgba.r << 16 | rgba.g << 8 | rgba.b;\n        }\n        clear(rect) {\n            rect = rect || this.rect;\n            this.context.clearRect(rect.x, rect.y, rect.width, rect.height);\n            this.imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        }\n        clone() {\n            this.context.putImageData(this.imageData, 0, 0);\n            var result = new BitmapData(this.width, this.height, this.transparent);\n            result.imageData = this.context.getImageData(0, 0, this.width, this.height);\n            return result;\n        }\n        //     this.colorTransform=function(rect, colorTransform)\n        //     {\n        //         rect=rect || this.rect;\n        //         colorTransform=colorTransform || new ColorTransform();\n        //         var data=this.imagedata.data;\n        //         var xMax=rect.x+rect.height;\n        //         var yMax=rect.y+rect.height;\n        //         for(var y=rect.y;y<yMax;y++)\n        //         {\n        //             for(var x=rect.x;x<xMax;x++)\n        //             {\n        //                 var r=(y*this.width+x)*4;\n        //                 var g=r+1;\n        //                 var b=r+2\n        //                 var a=r+3;\n        //                 data[r]=data[r]*colorTransform.redMultiplier+colorTransform.redOffset;\n        //                 data[g]=data[g]*colorTransform.greenMultiplier+colorTransform.greenOffset;\n        //                 data[b]=data[b]*colorTransform.blueMultiplier+colorTransform.blueOffset;\n        //                 data[a]=data[a]*colorTransform.alphaMultiplier+colorTransform.alphaOffset;\n        //             }\n        //         }\n        //         this.context.putImageData(this.imagedata, 0, 0);\n        //     }\n        //     this.applyFilter = function(sourceBitmapData, sourceRect, destPoint, filter) {\n        //         var copy = this.clone();\n        //         filter.run(sourceRect, this.imagedata.data, copy.imagedata.data);\n        //         this.context.putImageData(this.imagedata, 0, 0);\n        //     };\n        //     this.compare = function(otherBitmapData) {\n        //         if(this.width != otherBitmapData.width) return -3;\n        //         if(this.height != otherBitmapData.height) return -4;\n        //         if(this.imagedata === otherBitmapData.data) return 0;\n        //         var otherRGB, thisRGB, dif;\n        //         var result = new BitmapData(this.width, this.height);\n        //         for (var y = 0; y < this.height; y++) {\n        //             for (var x = 0; x < this.width; x++) {\n        //                 otherRGB = hexToRGB( otherBitmapData.getPixel(x, y) );\n        //                 thisRGB = hexToRGB( this.getPixel(x, y) );\n        //                 dif = {\n        //                     r: Math.abs(otherRGB.r - thisRGB.r),\n        //                     g: Math.abs(otherRGB.g - thisRGB.g),\n        //                     b: Math.abs(otherRGB.b - thisRGB.b)\n        //                 };\n        //                 result.setPixel(x, y, RGBToHex(dif));\n        //             }\n        //         }\n        //         return result;\n        //     };\n        copyCanvas(sourceCanvas, sourceRect, destPoint, blendMode) {\n            this.context.putImageData(this.imageData, 0, 0);\n            var bw = this.canvas.width - sourceRect.width - destPoint.x;\n            var bh = this.canvas.height - sourceRect.height - destPoint.y;\n            var dw = (bw < 0) ? sourceRect.width + (this.canvas.width - sourceRect.width - destPoint.x) : sourceRect.width;\n            var dh = (bh < 0) ? sourceRect.height + (this.canvas.height - sourceRect.height - destPoint.y) : sourceRect.height;\n            if (blendMode && blendMode != BlendMode.NORMAL) {\n                var sourceData = sourceCanvas.getContext(\"2d\").getImageData(sourceRect.x, sourceRect.y, dw, dh).data;\n                var sourcePos, destPos;\n                var data = this.imageData.data;\n                for (var y = 0; y < dh; y++) {\n                    for (var x = 0; x < dw; x++) {\n                        sourcePos = (x + y * dw) * 4;\n                        destPos = ((x + destPoint.x) + (y + destPoint.y) * this.width) * 4;\n                        switch (blendMode) {\n                            case BlendMode.ADD:\n                                data[destPos] = Math.min(data[destPos] + sourceData[sourcePos], 255);\n                                data[destPos + 1] = Math.min(data[destPos + 1] + sourceData[sourcePos + 1], 255);\n                                data[destPos + 2] = Math.min(data[destPos + 2] + sourceData[sourcePos + 2], 255);\n                                break;\n                            case BlendMode.SUBTRACT:\n                                data[destPos] = Math.max(sourceData[sourcePos] - data[destPos], 0);\n                                data[destPos + 1] = Math.max(sourceData[sourcePos + 1] - data[destPos + 1], 0);\n                                data[destPos + 2] = Math.max(sourceData[sourcePos + 2] - data[destPos + 2], 0);\n                                break;\n                            case BlendMode.INVERT:\n                                data[destPos] = 255 - sourceData[sourcePos];\n                                data[destPos + 1] = 255 - sourceData[sourcePos + 1];\n                                data[destPos + 2] = 255 - sourceData[sourcePos + 1];\n                                break;\n                            case BlendMode.MULTIPLY:\n                                data[destPos] = Math.floor(sourceData[sourcePos] * data[destPos] / 255);\n                                data[destPos + 1] = Math.floor(sourceData[sourcePos + 1] * data[destPos + 1] / 255);\n                                data[destPos + 2] = Math.floor(sourceData[sourcePos + 2] * data[destPos + 2] / 255);\n                                break;\n                            case BlendMode.LIGHTEN:\n                                if (sourceData[sourcePos] > data[destPos])\n                                    data[destPos] = sourceData[sourcePos];\n                                if (sourceData[sourcePos + 1] > data[destPos + 1])\n                                    data[destPos + 1] = sourceData[sourcePos + 1];\n                                if (sourceData[sourcePos + 2] > data[destPos + 2])\n                                    data[destPos + 2] = sourceData[sourcePos + 2];\n                                break;\n                            case BlendMode.DARKEN:\n                                if (sourceData[sourcePos] < data[destPos])\n                                    data[destPos] = sourceData[sourcePos];\n                                if (sourceData[sourcePos + 1] < data[destPos + 1])\n                                    data[destPos + 1] = sourceData[sourcePos + 1];\n                                if (sourceData[sourcePos + 2] < data[destPos + 2])\n                                    data[destPos + 2] = sourceData[sourcePos + 2];\n                                break;\n                            case BlendMode.DIFFERENCE:\n                                data[destPos] = Math.abs(sourceData[sourcePos] - data[destPos]);\n                                data[destPos + 1] = Math.abs(sourceData[sourcePos + 1] - data[destPos + 1]);\n                                data[destPos + 2] = Math.abs(sourceData[sourcePos + 2] - data[destPos + 2]);\n                                break;\n                            case BlendMode.SCREEN:\n                                data[destPos] = (255 - (((255 - data[destPos]) * (255 - sourceData[sourcePos])) >> 8));\n                                data[destPos + 1] = (255 - (((255 - data[destPos + 1]) * (255 - sourceData[sourcePos + 1])) >> 8));\n                                data[destPos + 2] = (255 - (((255 - data[destPos + 2]) * (255 - sourceData[sourcePos + 2])) >> 8));\n                                break;\n                            case BlendMode.OVERLAY:\n                                if (sourceData[sourcePos] < 128)\n                                    data[destPos] = data[destPos] * sourceData[sourcePos] * halfColorMax;\n                                else\n                                    data[destPos] = 255 - (255 - data[destPos]) * (255 - sourceData[sourcePos]) * halfColorMax;\n                                if (sourceData[sourcePos + 1] < 128)\n                                    data[destPos + 1] = data[destPos + 1] * sourceData[sourcePos + 1] * halfColorMax;\n                                else\n                                    data[destPos + 1] = 255 - (255 - data[destPos + 1]) * (255 - sourceData[sourcePos + 1]) * halfColorMax;\n                                if (sourceData[sourcePos + 2] < 128)\n                                    data[destPos + 2] = data[destPos + 2] * sourceData[sourcePos + 2] * halfColorMax;\n                                else\n                                    data[destPos + 2] = 255 - (255 - data[destPos + 2]) * (255 - sourceData[sourcePos + 2]) * halfColorMax;\n                                break;\n                            case BlendMode.HARDLIGHT:\n                                if (data[destPos] < 128)\n                                    data[destPos] = data[destPos] * sourceData[sourcePos] * halfColorMax;\n                                else\n                                    data[destPos] = 255 - (255 - data[destPos]) * (255 - sourceData[sourcePos]) * halfColorMax;\n                                if (data[destPos + 1] < 128)\n                                    data[destPos + 1] = data[destPos + 1] * sourceData[sourcePos + 1] * halfColorMax;\n                                else\n                                    data[destPos + 1] = 255 - (255 - data[destPos + 1]) * (255 - sourceData[sourcePos + 1]) * halfColorMax;\n                                if (data[destPos + 2] < 128)\n                                    data[destPos + 2] = data[destPos + 2] * sourceData[sourcePos + 2] * halfColorMax;\n                                else\n                                    data[destPos + 2] = 255 - (255 - data[destPos + 2]) * (255 - sourceData[sourcePos + 2]) * halfColorMax;\n                                break;\n                        }\n                    }\n                }\n            }\n            else {\n                this.context.drawImage(sourceCanvas, sourceRect.x, sourceRect.y, dw, dh, destPoint.x, destPoint.y, dw, dh);\n                this.imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n            }\n            this.context.putImageData(this.imageData, 0, 0);\n        }\n        ;\n        //     this.copyChannel = function(sourceBitmapData, sourceRect, destPoint, sourceChannel, destChannel) {\n        //         var sourceColor, sourceRGB, rgb;\n        //         var redChannel = BitmapDataChannel.RED;\n        //         var greenChannel = BitmapDataChannel.GREEN;\n        //         var blueChannel = BitmapDataChannel.BLUE;\n        //         for (var y=0; y<sourceRect.height; y++) {\n        //             for (var x=0; x<sourceRect.width; x++) {\n        //                 sourceColor = sourceBitmapData.getPixel(sourceRect.x+x, sourceRect.y+y);\n        //                 sourceRGB = hexToRGB(sourceColor);\n        //                 switch(sourceChannel) {\n        //                     case redChannel: channelValue = sourceRGB.r; break;\n        //                     case greenChannel: channelValue = sourceRGB.g; break;\n        //                     case blueChannel: channelValue = sourceRGB.b; break;\n        //                 }\n        //                 rgb = hexToRGB( this.getPixel(destPoint.x+x, destPoint.y+y) ); // redundancy\n        //                 switch(destChannel){\n        //                     case redChannel: rgb.r = channelValue; break;\n        //                     case greenChannel: rgb.g = channelValue; break;\n        //                     case blueChannel: rgb.b = channelValue; break;\n        //                 }\n        //                 this.setPixel(destPoint.x+x, destPoint.y+y, RGBToHex(rgb));\n        //             }\n        //         }\n        //         this.context.putImageData(this.imagedata, 0, 0);\n        //     };\n        copyPixels(sourceBitmapData, sourceRect, destPoint, blendMode = BlendMode.NORMAL) {\n            this.copyCanvas(sourceBitmapData.canvas, sourceRect, destPoint, blendMode);\n        }\n        draw(source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n            let element = source instanceof BitmapData ? source.canvas : source;\n            let sourceMatrix = matrix || new Matrix();\n            let sourceRect = clipRect || new Rectangle(0, 0, source.width, source.height);\n            this.context.transform(sourceMatrix.a, sourceMatrix.b, sourceMatrix.c, sourceMatrix.d, sourceMatrix.tx, sourceMatrix.ty);\n            // this.context.drawImage(element, 0, 0, source.width, source.height);\n            this.context.drawImage(element, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, 0, 0, sourceRect.width, sourceRect.height);\n            this.imageData = this.context.getImageData(0, 0, this.width, this.height);\n            // this.copyCanvas(this.drawingCanvas, sourceRect, { x: sourceRect.x, y: sourceRect.y }, blendMode);\n        }\n        fillRect(rect, color) {\n            this.context.putImageData(this.imageData, 0, 0);\n            var rgb = hexToRGB(color);\n            this.context.fillStyle = \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\n            this.context.fillRect(rect.x, rect.y, rect.width, rect.height);\n            this.imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        }\n        ;\n        perlinNoise(baseX, baseY, randomSeed, channelOptions, grayScale) {\n            this.rand = this.rand || new PRNG();\n            this.rand.seed = randomSeed;\n            var redChannel = BitmapDataChannel.RED;\n            var greenChannel = BitmapDataChannel.GREEN;\n            var blueChannel = BitmapDataChannel.BLUE;\n            channelOptions = channelOptions || 7;\n            grayScale = grayScale || false;\n            var data = this.imageData.data;\n            var numChannels = 0;\n            if (channelOptions & redChannel) {\n                this.simplexR = this.simplexR || new SimplexNoise(this.rand);\n                this.simplexR.setSeed(randomSeed);\n                numChannels++;\n            }\n            if (channelOptions & greenChannel) {\n                this.simplexG = this.simplexG || new SimplexNoise(this.rand);\n                this.simplexG.setSeed(randomSeed + 1);\n                numChannels++;\n            }\n            if (channelOptions & blueChannel) {\n                this.simplexB = this.simplexB || new SimplexNoise(this.rand);\n                this.simplexB.setSeed(randomSeed + 2);\n                numChannels++;\n            }\n            var pos, cr, cg, cb;\n            for (var y = 0; y < this.height; y++) {\n                for (var x = 0; x < this.width; x++) {\n                    pos = (x + y * this.width) * 4;\n                    cr = (channelOptions & redChannel) ? Math.floor(((this.simplexR.noise(x / baseX, y / baseY) + 1) * 0.5) * 255) : 0x00;\n                    cg = (channelOptions & greenChannel) ? Math.floor(((this.simplexG.noise(x / baseX, y / baseY) + 1) * 0.5) * 255) : 0x00;\n                    cb = (channelOptions & blueChannel) ? Math.floor(((this.simplexB.noise(x / baseX, y / baseY) + 1) * 0.5) * 255) : 0x00;\n                    if (grayScale) {\n                        let gray = (cr + cg + cb) / numChannels;\n                        cr = cg = cb = gray;\n                    }\n                    data[pos + 0] = cr;\n                    data[pos + 1] = cg;\n                    data[pos + 2] = cb;\n                }\n            }\n            this.context.putImageData(this.imageData, 0, 0);\n        }\n        ;\n        //     this.threshold = function(sourceBitmapData, sourceRect, destPoint, operation, threshold, color, mask, copySource) {\n        //         color = color || 0;\n        //         mask = mask || 0xffffff;\n        //         copySource = copySource || false;\n        //         var bw = this.canvas.width - sourceRect.width - destPoint.x;\n        //         var bh = this.canvas.height - sourceRect.height - destPoint.y\n        //         var dw = (bw < 0) ? sourceRect.width + (this.canvas.width - sourceRect.width - destPoint.x) : sourceRect.width;\n        //         var dh = (bh < 0) ? sourceRect.height + (this.canvas.height - sourceRect.height - destPoint.y) : sourceRect.height;\n        //         var sourceData = sourceBitmapData.imagedata.data;\n        //         var sourcePos, destPos, sourceHex;\n        //         var sx = sourceRect.x;\n        //         var sy = sourceRect.y;\n        //         var sw = sourceBitmapData.width;\n        //         for (var y=0; y<dh; y++) {\n        //             for (var x=0; x<dw; x++) {\n        //                 sourcePos = ((x+sx) + (y+sy) * sw) * 4;\n        //                 sourceHex = RGBToHex({r:sourceData[sourcePos], g:sourceData[sourcePos+1], b:sourceData[sourcePos+2]});\n        //                 switch(operation) {\n        //                     case \"<\":\n        //                         if((sourceHex & mask) < (threshold & mask)) {\n        //                             if(copySource) this.setPixel(x+destPoint.x, y+destPoint.y, sourceHex); else this.setPixel(x+destPoint.x, y+destPoint.y, color);\n        //                         }\n        //                     break;\n        //                     case \"<=\":\n        //                         if((sourceHex & mask) <= (threshold & mask)) {\n        //                             if(copySource) this.setPixel(x+destPoint.x, y+destPoint.y, sourceHex); else this.setPixel(x+destPoint.x, y+destPoint.y, color);\n        //                         }\n        //                     break;\n        //                     case \">\":\n        //                         if((sourceHex & mask) > (threshold & mask)) {\n        //                             if(copySource) this.setPixel(x+destPoint.x, y+destPoint.y, sourceHex); else this.setPixel(x+destPoint.x, y+destPoint.y, color);\n        //                         }\n        //                     break;\n        //                     case \">=\":\n        //                         if((sourceHex & mask) <= (threshold & mask)) {\n        //                             if(copySource) this.setPixel(x+destPoint.x, y+destPoint.y, sourceHex); else this.setPixel(x+destPoint.x, y+destPoint.y, color);\n        //                         }\n        //                     break;\n        //                     case \"==\":\n        //                         if((sourceHex & mask) == (threshold & mask)) {\n        //                             if(copySource) this.setPixel(x+destPoint.x, y+destPoint.y, sourceHex); else this.setPixel(x+destPoint.x, y+destPoint.y, color);\n        //                         }\n        //                     break;\n        //                     case \"!=\":\n        //                         if((sourceHex & mask) != (threshold & mask)) {\n        //                             if(copySource) this.setPixel(x+destPoint.x, y+destPoint.y, sourceHex); else this.setPixel(x+destPoint.x, y+destPoint.y, color);\n        //                         }\n        //                     break;\n        //                 }\n        //             }\n        //         }\n        //         this.context.putImageData(this.imagedata, 0, 0);\n        //     };\n        //     if(fillColor) this.fillRect(this.rect, fillColor);\n        //     else this.fillRect(this.rect, 0);\n        //     return this;\n        // };\n        getColorBoundsRect(color, num, flag) {\n            // TODO: uded in MOMA02CPerticles\n            let r = new Rectangle(0, 0, this.width, this.height);\n            return r;\n        }\n        drawWithQuality(source, matrix, colorTransform, blendMode, clipRect, smoothing, quality) {\n            this.draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\n        }\n        lock() {\n        }\n        unlock() {\n        }\n        dispose() {\n            console.log('dispose');\n            //document.\n        }\n        gotoAndStop(number) {\n        }\n        getPixels(rect) {\n            let v = new stageJS.ByteArray();\n            v.length = Math.floor(rect.width) * Math.floor(rect.height) * 4;\n            for (var j = 0; j < rect.height; ++j) {\n                for (var i = 0; i < rect.width; ++i) {\n                    var p = this.getPixel(rect.x + i, rect.y + j); // hexToRGB(this.getPixel32(rect.x+i, rect.y+j));\n                    v.writeByte(p.a);\n                    v.writeByte(p.r);\n                    v.writeByte(p.g);\n                    v.writeByte(p.b);\n                }\n            }\n            v.position = 0;\n            return v;\n        }\n        setPixels(rect, color) {\n            color.position = 0;\n            for (var j = 0; j < rect.height; ++j) {\n                for (var i = 0; i < rect.width; ++i) {\n                    let a = color.readUnsignedByte();\n                    let r = color.readUnsignedByte();\n                    let g = color.readUnsignedByte();\n                    let b = color.readUnsignedByte();\n                    this.setPixel32(rect.x + i, rect.y + j, RGBToHex({ r: r, g: g, b: b }));\n                }\n            }\n        }\n    }\n    stageJS.BitmapData = BitmapData;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    class ByteArray extends Array {\n        constructor() {\n            super(...arguments);\n            this.position = 0;\n        }\n        get length() {\n            return super.length;\n        }\n        set length(v) {\n            if (v < this.length) {\n                super.splice(v);\n            }\n            else {\n                for (var i = super.length; i < v; ++i) {\n                    super.push(0);\n                }\n            }\n        }\n        readUnsignedByte() {\n            return this[this.position++];\n        }\n        writeByte(v) {\n            if (this.position >= this.length) {\n                return;\n            }\n            super[this.position++] = v;\n        }\n    }\n    stageJS.ByteArray = ByteArray;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    // TODO: uded in MOMA2\n    class ColorMatrixFilter {\n        constructor() {\n        }\n    }\n    stageJS.ColorMatrixFilter = ColorMatrixFilter;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    //TODO: MOMA2\n    class DropShadowFilter {\n        constructor(x, y, offset1, offset2, shadow_width1, shadow_width2, num1, num2) {\n        }\n    }\n    stageJS.DropShadowFilter = DropShadowFilter;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    class GlowFilter {\n        constructor(color = 0xFF0000, alpha = 1.0, blurX = 6.0, blurY = 6.0, strength = 2, quality = 1, inner = false, knockout = false) {\n        }\n    }\n    stageJS.GlowFilter = GlowFilter;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    class LayoutObject {\n        constructor() {\n            this.texture = null;\n            this.transformMatrix = new Array();\n            this.colorMatrix = new Array();\n            this.vartex = new Array();\n            this.coords = new Array();\n            this.orgScale = 1;\n            this.orgX = 0;\n            this.orgY = 0;\n            this.transformMatrix.push(0, 0, 0, 1);\n            this.colorMatrix.push(1, 1, 1, 1);\n            this.vartex.push(0, 0, uniqlo.UTItemManager.IMAGE_WIDTH, 0, 0, uniqlo.UTItemManager.IMAGE_HEIGHT, uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT);\n            this.coords.push(0, 1, 1, 1, 0, 0, 1, 0);\n        }\n        setRectangle(rect, gScale) {\n            this.orgScale = gScale;\n            this.vartex[0] = this.vartex[4] = rect.width * .5 * this.orgScale;\n            this.vartex[1] = this.vartex[3] = -rect.height * .5 * this.orgScale;\n            this.vartex[2] = this.vartex[6] = -rect.width * .5 * this.orgScale;\n            this.vartex[5] = this.vartex[7] = rect.height * .5 * this.orgScale;\n            this.coords[0] = this.coords[4] = (rect.x + rect.width) / uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.coords[1] = this.coords[3] = rect.y / uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.coords[2] = this.coords[6] = rect.x / uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.coords[5] = this.coords[7] = (rect.y + rect.height) / uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.bVartex.uploadFromVector(this.vartex, 0, 4);\n            this.bCoords.uploadFromVector(this.coords, 0, 4);\n            this.x = (rect.x + rect.width * .5) * this.orgScale;\n            this.y = (rect.y + rect.height * .5) * this.orgScale;\n            this.scale = 1;\n            this.angle = 0;\n            this.width = rect.width * this.orgScale;\n            this.height = rect.height * this.orgScale;\n        }\n        setRectangleType(rect, coordx, coordy, gScale) {\n            this.orgScale = gScale;\n            this.vartex[0] = this.vartex[4] = rect.width * .5 * this.orgScale;\n            this.vartex[1] = this.vartex[3] = -rect.height * .5 * this.orgScale;\n            this.vartex[2] = this.vartex[6] = -rect.width * .5 * this.orgScale;\n            this.vartex[5] = this.vartex[7] = rect.height * .5 * this.orgScale;\n            this.coords[0] = this.coords[4] = (coordx + rect.width) / uniqlo.AppVals.TEXTURE_WIDTH;\n            this.coords[1] = this.coords[3] = coordy / uniqlo.AppVals.TEXTURE_WIDTH;\n            this.coords[2] = this.coords[6] = coordx / uniqlo.AppVals.TEXTURE_WIDTH;\n            this.coords[5] = this.coords[7] = (coordy + rect.height) / uniqlo.AppVals.TEXTURE_WIDTH;\n            this.x = (rect.x + rect.width * .5) * this.orgScale;\n            this.y = (rect.y + rect.height * .5) * this.orgScale;\n            this.bVartex.uploadFromVector(this.vartex, 0, 4);\n            this.bCoords.uploadFromVector(this.coords, 0, 4);\n            this.scale = 1;\n            this.angle = 0;\n            this.width = rect.width * this.orgScale;\n            this.height = rect.height * this.orgScale;\n        }\n        setup(_ctx, _indicies, _projectionMatrix) {\n            this.ctx = _ctx;\n            this.indicies = _indicies;\n            this.projectionMatrix = _projectionMatrix;\n            // this.bVartex=this.ctx.createVertexBuffer(4, 2,stageJS.Context3DBufferUsage.STATIC_DRAW);\n            // this.bCoords=this.ctx.createVertexBuffer(4, 2,Context3DBufferUsage.STATIC_DRAW);\n            this.bVartex = this.ctx.createVertexBuffer(4, 2);\n            this.bCoords = this.ctx.createVertexBuffer(4, 2);\n            this.bVartex.uploadFromVector(this.vartex, 0, 4);\n            this.bCoords.uploadFromVector(this.coords, 0, 4);\n        }\n        setTexture(_texture) {\n            this.texture = _texture;\n        }\n        dispose() {\n        }\n        draw() {\n            this.transformMatrix[0] = this.x;\n            this.transformMatrix[1] = this.y;\n            this.transformMatrix[2] = this.angle;\n            this.transformMatrix[3] = this.scale;\n            uniqlo.Stage3DHelper.drawTriangles(this.ctx, this.indicies, this.projectionMatrix, this.texture, this.bVartex, this.bCoords, this.transformMatrix, this.colorMatrix);\n        }\n    }\n    stageJS.LayoutObject = LayoutObject;\n})(stageJS || (stageJS = {}));\n/// <reference path=\"DisplayObject.ts\" />\nvar stageJS;\n(function (stageJS) {\n    // TODO: uded in MOMA2\n    class MovieClip extends stageJS.DisplayObject {\n        constructor() {\n            super();\n            this.filters = [];\n        }\n    }\n    stageJS.MovieClip = MovieClip;\n})(stageJS || (stageJS = {}));\n/// <reference path=\"DisplayObject.ts\" />\nvar stageJS;\n(function (stageJS) {\n    // TODO: uded in MOMA2\n    class Graphics {\n        constructor(canvas) {\n            this.width = canvas.width;\n            this.height = canvas.height;\n            this.context = canvas.getContext('2d');\n            this.context.fillStyle = 'rgba(255, 255, 255, 0)';\n        }\n        beginFill(color, p) {\n            // this.context.fillStyle =\n        }\n        endFill() {\n            this.context.closePath();\n        }\n        drawRoundRect(p1, p2, p3, p4, p5, p6) {\n        }\n        drawTriangles(p1) {\n        }\n        drawRect(x, y, width, height) {\n        }\n        clear() {\n            this.context.fillRect(0, 0, this.width, this.height);\n        }\n    }\n    stageJS.Graphics = Graphics;\n    class Shape extends stageJS.DisplayObject {\n        constructor() {\n            super();\n            this.graphics = new Graphics(this.canvas);\n        }\n    }\n    stageJS.Shape = Shape;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    class TextField {\n        constructor() {\n        }\n    }\n    stageJS.TextField = TextField;\n})(stageJS || (stageJS = {}));\nvar stageJS;\n(function (stageJS) {\n    class TextFieldAutoSize {\n        constructor() {\n        }\n    }\n    TextFieldAutoSize.CENTER = \"center\";\n    TextFieldAutoSize.LEFT = \"left\";\n    TextFieldAutoSize.NONE = \"none\";\n    TextFieldAutoSize.RIGHT = \"right\";\n    stageJS.TextFieldAutoSize = TextFieldAutoSize;\n})(stageJS || (stageJS = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class AppStoryDefs {\n        static getClassName(index, Remix) {\n            return \"jp.uniqlo.utlab.app.views.Ico\" + (Remix ? \"Remix\" : \"SRC\") + \"_\" + (index < 10 ? \"0\" + String(index) : String(index));\n        }\n        static getViewID(mc) {\n            // if(mc is NV02_GraphicPaintView){\n            // \treturn VIEW_SRC_PAINT;\n            // }\n            // if(mc is NV03_GraphicTypographyView){\n            // \treturn VIEW_SRC_TYPO;\n            // }\n            // if(mc is NV04_GraphicPhotoView){\n            // \treturn VIEW_SRC_PHOTO;\n            // }\n            // if(mc is NV05_GraphicStampView){\n            // \treturn VIEW_SRC_STAMP;\n            // }\n            // if(mc is NV11_RemixSplashView){\n            // \treturn VIEW_REMIX_INK;\n            // }\n            // if(mc is NV12_RemixGlitchView){\n            // \treturn VIEW_REMIX_GLITCH;\n            // }\n            // if(mc is NV13_RemixMosaicView){\n            // \treturn VIEW_REMIX_MOSIC;\n            // }\n            // if(mc is NV14_RemixAutoLayoutView){\n            // \treturn VIEW_REMIX_LAYOUT;\n            // }\n            // if(mc is NV15_RemixMOMA01View){\n            // \treturn VIEW_REMIX_MOMA01;\n            // }\n            // if(mc is NV16_RemixMOMA02View){\n            // \treturn VIEW_REMIX_MOMA02;\n            // }\n            return 0;\n        }\n    }\n    AppStoryDefs.VIEW_SRC_PAINT = 1;\n    AppStoryDefs.VIEW_SRC_TYPO = 2;\n    AppStoryDefs.VIEW_SRC_PHOTO = 3;\n    AppStoryDefs.VIEW_SRC_STAMP = 4;\n    AppStoryDefs.VIEW_REMIX_INK = 1;\n    AppStoryDefs.VIEW_REMIX_GLITCH = 2;\n    AppStoryDefs.VIEW_REMIX_MOSIC = 3;\n    AppStoryDefs.VIEW_REMIX_LAYOUT = 4;\n    AppStoryDefs.VIEW_REMIX_MOMA01 = 5;\n    AppStoryDefs.VIEW_REMIX_MOMA02 = 6;\n    uniqlo.AppStoryDefs = AppStoryDefs;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class AppVals {\n    }\n    AppVals.TEXTURE_WIDTH = 1024;\n    AppVals.GLOBAL_SCALE = 1.0;\n    AppVals.STATUSBAR_HEIGHT = 0;\n    AppVals.REMIX_MOVE_RIMIT = false;\n    AppVals.REMIX_MOVE_RIMIT_RATE = 0.3;\n    AppVals.REMIX_PERTICLE_SPEED = 1.0;\n    AppVals.ERASE_MODE = \"eraser_selected\";\n    AppVals.THICK_BRUSH_MODE = \"thick_brush_selected\";\n    AppVals.THIN_BRUSH_MODE = \"thin_brush_selected\";\n    AppVals.SELECTED_TOOL_MODE = AppVals.THICK_BRUSH_MODE;\n    AppVals.STICKER_SET_THRESHOLD = 5;\n    uniqlo.AppVals = AppVals;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class FileManager {\n        static loadCache(fname, width, height, transparent, fillColor) {\n            // var targetDir:File = getCacheStrageDir().resolvePath(\"tmp\");\n            // var f:File=targetDir.resolvePath(fname);\n            // trace(\"loadCache\",f.nativePath);\n            // return loadFileFromByteArray(f,width,height,transparent,fillColor);\n            return null;\n        }\n    }\n    //セーブフォルダ\n    FileManager.LIST_SAVE_DIR = \"com.uniqlo.utme\";\n    FileManager.TEMP_DIR = \"com.uniqlo.utme\";\n    FileManager.assetBasePath = \"assets/items/\";\n    FileManager.androidPath = null;\n    uniqlo.FileManager = FileManager;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class UTCreateMain {\n        static saveFoward() {\n            //一つ前のRemixEndはSaveしない\n            for (var i = this.viewTree.length - 3; i > -1; i--) {\n                this.viewTree[i].save(i);\n            }\n        }\n        static getActiveSrcType() {\n            for (var i = this.viewTree.length - 1; i > -1; i--) {\n                switch (uniqlo.AppStoryDefs.getViewID(this.viewTree[i])) {\n                    case uniqlo.AppStoryDefs.VIEW_SRC_PAINT:\n                    case uniqlo.AppStoryDefs.VIEW_SRC_TYPO:\n                    case uniqlo.AppStoryDefs.VIEW_SRC_STAMP:\n                    case uniqlo.AppStoryDefs.VIEW_SRC_PHOTO:\n                        return uniqlo.AppStoryDefs.getViewID(this.viewTree[i]);\n                }\n            }\n            return 0;\n        }\n        static getActiveSrcView() {\n            for (var i = this.viewTree.length - 1; i > -1; i--) {\n                switch (uniqlo.AppStoryDefs.getViewID(this.viewTree[i])) {\n                    case uniqlo.AppStoryDefs.VIEW_SRC_PAINT:\n                    case uniqlo.AppStoryDefs.VIEW_SRC_TYPO:\n                    case uniqlo.AppStoryDefs.VIEW_SRC_STAMP:\n                    case uniqlo.AppStoryDefs.VIEW_SRC_PHOTO:\n                        return this.viewTree[i];\n                }\n            }\n            return null;\n        }\n        static getActiveView() {\n            return this.viewTree[this.viewTree.length - 1];\n        }\n    }\n    //createViewManager------------------------------------------------------------------------------\n    UTCreateMain.viewTree = new Array();\n    uniqlo.UTCreateMain = UTCreateMain;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class UTImageBuilder {\n        static createPrintedImage(out, src, multiply, logo, copyright, renderTop) {\n            var m = new uniqlo.Matrix;\n            // var top:BitmapData=renderTop?UTTopLayerManager.getTopLayerThumbImage():null;\n            var top = null;\n            if (src == null && top == null)\n                return;\n            var h;\n            var w;\n            var x;\n            var y;\n            if (logo) {\n                w = out.width * uniqlo.UTItemManager.outWidth;\n                h = w * uniqlo.UTItemManager.IMAGE_HEIGHT / uniqlo.UTItemManager.IMAGE_WIDTH;\n                x = out.width * uniqlo.UTItemManager.outCenter.x - w * .5;\n                y = out.width * uniqlo.UTItemManager.outCenter.y - h * .5;\n            }\n            else {\n                w = out.width * uniqlo.UTItemManager.wkWidth;\n                h = w * uniqlo.UTItemManager.IMAGE_HEIGHT / uniqlo.UTItemManager.IMAGE_WIDTH;\n                x = out.width * uniqlo.UTItemManager.wkCenter.x - w * .5;\n                y = out.width * uniqlo.UTItemManager.wkCenter.y - h * .5;\n            }\n            if (multiply && ((src != null ? 1 : 0) + (top != null ? 1 : 0) > 1)) {\n                var tmp = new stageJS.BitmapData(w, h, false, 0xFFFFFF);\n                if (src != null) {\n                    m.identity();\n                    m.scale(w / src.width, h / src.height);\n                    tmp.draw(src, m, null, null, null, true);\n                }\n                if (top != null) {\n                    m.identity();\n                    m.scale(w / top.width, h / top.height);\n                    tmp.draw(top, m, null, null, null, true);\n                }\n                m.identity();\n                m.translate(x, y);\n                out.draw(tmp, m, null, uniqlo.BlendMode.MULTIPLY, null, true);\n                tmp.dispose();\n            }\n            else {\n                if (src != null) {\n                    m.identity();\n                    m.scale(w / src.width, h / src.height);\n                    m.translate(x, y);\n                    out.draw(src, m, null, multiply ? uniqlo.BlendMode.MULTIPLY : null, null, true);\n                }\n                if (top != null) {\n                    m.identity();\n                    m.scale(w / top.width, h / top.height);\n                    m.translate(x, y);\n                    out.draw(top, m, null, multiply ? uniqlo.BlendMode.MULTIPLY : null, null, true);\n                }\n            }\n            // if(copyright && UTStampManager.used() && UTStampManager.hasCopyLights){\n            // \tvar copyLightsSprite:Sprite=UTStampManager.getCopyLitesSprite(true);\n            // \tm.identity();\n            // \tm.translate(-UTStampManager.COPY_LEFT,-copyLightsSprite.height-UTStampManager.COPY_BOTTOM+copyLightsSprite.height+20);\n            // \tm.scale(w/UTItemManager.IMAGE_WIDTH,h/UTItemManager.IMAGE_HEIGHT);\n            // \tm.translate(x+w,y+h);\n            // \tout.drawWithQuality(copyLightsSprite,m,null,null,null,true,StageQuality.HIGH);\n            // }\n        }\n    }\n    uniqlo.UTImageBuilder = UTImageBuilder;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class UTItemManager {\n        static getZoomRect(zoom, aWidth, aHeight) {\n            var r = new Rectangle();\n            if (zoom) {\n                var w = aWidth * UTItemManager.wkNearScale;\n                r.height = r.width = w / UTItemManager.wkWidth;\n                r.x = aWidth * .5 - r.width * UTItemManager.wkCenter.x;\n                r.y = (aHeight - 29) * .5 - r.height * UTItemManager.wkCenter.y;\n            }\n            else {\n                r.height = r.width = aWidth * UTItemManager.wkFarScale;\n                r.x = (aWidth - r.width) * .5;\n                // r.y=((aHeight-29)-r.width)*.5;\n                r.y = (aHeight - r.width) * .5;\n            }\n            return r;\n        }\n        static getZoomRectMotion(t, aWidth, aHeight) {\n            var r = this.getZoomRect(false, aWidth, aHeight);\n            var r2 = this.getZoomRect(true, aWidth, aHeight);\n            r.x = r.x + (r2.x - r.x) * t;\n            r.y = r.y + (r2.y - r.y) * t;\n            r.width = r.width + (r2.width - r.width) * t;\n            r.height = r.height + (r2.height - r.height) * t;\n            return r;\n        }\n    }\n    UTItemManager.IMAGE_WIDTH = 1024;\n    UTItemManager.IMAGE_HEIGHT = 1152;\n    // public static IMAGE_WIDTH: number = 1024;\n    // public static IMAGE_HEIGHT: number = 1024;\n    UTItemManager.wkMultiply = false;\n    UTItemManager.wkWidth = 1.0;\n    UTItemManager.wkCenter = { x: 0.5, y: 0.5 };\n    UTItemManager.outWidth = 2048;\n    UTItemManager.outCenter = { x: 0, y: 0 };\n    // public static wkFarScale:number=1.3;\n    UTItemManager.wkFarScale = 1.0; // BUG: 1.3\n    UTItemManager.wkNearScale = 0.95;\n    uniqlo.UTItemManager = UTItemManager;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class UTStampManager {\n        constructor(stampSetData) {\n            this.ThumbnailScale = 4.0;\n            this.EdgeWidth = 4.0;\n            this.EdgeColor = 0xFFFFFF;\n        }\n        static getActive() {\n            return this.StampLayerList[uniqlo.AppVals.HISTORY];\n        }\n        static getActiveLayerTop() {\n            var s = this.getActive();\n            return s == null ? false : UTStampManager.LayerTopMost;\n        }\n    }\n    UTStampManager.StampLayerList = [null, null, null];\n    UTStampManager.LayerTopMost = false;\n    uniqlo.UTStampManager = UTStampManager;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class MOMA01ImageUtils {\n        static clampi(x, min, max) {\n            x = Math.floor(x);\n            min = Math.floor(min);\n            max = Math.floor(max);\n            return x < min ? min : (x > max ? max : x);\n        }\n        static clampf(x, min, max) {\n            return x < min ? min : (x > max ? max : x);\n        }\n        static blrImage(_src, size) {\n            var px, py;\n            var rad;\n            var x, y, p, i;\n            px = _src.width;\n            py = _src.height;\n            rad = size;\n            var Wm = rad * 2; //窓幅\n            var Rm = (Wm - 1) / 2; //窓半径\n            var msk = new Array();\n            msk.length = Wm;\n            var su = 0;\n            for (x = 0; x < Wm; x++) {\n                msk[x] = Math.sin(Math.PI * (x + 1) / (Wm + 1));\n                su += msk[x];\n            }\n            for (x = 0; x < Wm; x++)\n                msk[x] = msk[x] / su;\n            var tempPix = new Array();\n            tempPix.length = px * py * 3;\n            var out = new stageJS.ByteArray();\n            out.length = px * py * 4;\n            var src = _src.getPixels(_src.rect);\n            var r, g, b;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    g = 0;\n                    b = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(x + i - Rm, 0, px - 1);\n                        r += src[(y * px + p) * 4 + 1] * msk[i];\n                        g += src[(y * px + p) * 4 + 2] * msk[i];\n                        b += src[(y * px + p) * 4 + 3] * msk[i];\n                    }\n                    tempPix[(x * py + y) * 3] = r;\n                    tempPix[(x * py + y) * 3 + 1] = g;\n                    tempPix[(x * py + y) * 3 + 2] = b;\n                }\n            }\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    g = 0;\n                    b = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(y + i - Rm, 0, py - 1);\n                        r += tempPix[(x * py + p) * 3] * msk[i];\n                        g += tempPix[(x * py + p) * 3 + 1] * msk[i];\n                        b += tempPix[(x * py + p) * 3 + 2] * msk[i];\n                    }\n                    out[(y * px + x) * 4] = 255;\n                    out[(y * px + x) * 4 + 1] = r;\n                    out[(y * px + x) * 4 + 2] = g;\n                    out[(y * px + x) * 4 + 3] = b;\n                }\n            }\n            _src.setPixels(_src.rect, out);\n            tempPix.length = 0;\n            tempPix = null;\n            out.length = 0;\n            out = null;\n            src.length = 0;\n            src = null;\n            msk.length = 0;\n            msk = null;\n        }\n        static getByIndex(i) {\n            var ret = new uniqlo.Vec4;\n            switch (i) {\n                case 0:\n                    ret.x = -1;\n                    ret.y = -1;\n                    break;\n                case 1:\n                    ret.x = 0;\n                    ret.y = -1;\n                    break;\n                case 2:\n                    ret.x = 1;\n                    ret.y = -1;\n                    break;\n                case 3:\n                    ret.x = -1;\n                    ret.y = 0;\n                    break;\n                case 4:\n                    ret.x = 1;\n                    ret.y = 0;\n                    break;\n                case 5:\n                    ret.x = -1;\n                    ret.y = 1;\n                    break;\n                case 6:\n                    ret.x = 0;\n                    ret.y = 1;\n                    break;\n                case 7:\n                    ret.x = 1;\n                    ret.y = 1;\n                    break;\n            }\n            return ret;\n        }\n        static calcOpticalFlow(_src) {\n            this.blrImage(_src, 2);\n            var px, py;\n            var rad;\n            var x, y, p, i;\n            var index;\n            var cx, cy, cz;\n            var dx, dy, dz;\n            //var v:Number[8];\n            //int _x,_y;\n            px = _src.width;\n            py = _src.height;\n            var src = _src.getPixels(_src.rect);\n            var r, g, b;\n            var _r, _g, _b;\n            var _v;\n            var idx;\n            var out = new stageJS.ByteArray;\n            out.length = px * py * 4;\n            var fv;\n            var lim = new Array();\n            lim.length = 8;\n            var maxi;\n            var mini;\n            var max;\n            var min;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    p = (y * px + x) * 4;\n                    _r = src[p + 1];\n                    _g = src[p + 2];\n                    _b = src[p + 3];\n                    maxi = 0;\n                    mini = 0;\n                    //  max=000.0;\n                    max = 0;\n                    min = 255.0;\n                    for (i = 0; i < 8; i++) {\n                        fv = this.getByIndex(i);\n                        p = (this.clampi(y + fv.y, 0, py - 1) * px + this.clampi(x + fv.x, 0, px - 1)) * 4;\n                        lim[i] = (0.298912 * src[p] + 0.586611 * src[p + 1] + 0.114478 * src[p + 2]);\n                    }\n                    fv.y = (lim[5] + lim[6] + lim[7]) / 3.0 - (lim[0] + lim[1] + lim[2]) / 3.0;\n                    fv.x = (lim[2] + lim[4] + lim[7]) / 3.0 - (lim[0] + lim[3] + lim[5]) / 3.0;\n                    fv.rotate2d(90);\n                    fv.normalize();\n                    fv.multiply(10);\n                    out[(y * px + x) * 4] = 0;\n                    out[(y * px + x) * 4 + 1] = this.clampi(fv.x + 127, 0, 255);\n                    out[(y * px + x) * 4 + 2] = this.clampi(fv.y + 127, 0, 255);\n                    out[(y * px + x) * 4 + 3] = 0;\n                }\n            }\n            _src.setPixels(_src.rect, out);\n            this.blrImage(_src, 5);\n        }\n        static blrByteArray3(_src, width, height, size) {\n            var px, py;\n            var rad;\n            var x, y, p, i;\n            px = width;\n            py = height;\n            rad = size;\n            var Wm = rad * 2; //窓幅\n            var Rm = (Wm - 1) / 2; //窓半径\n            var msk = new Array();\n            msk.length = Wm;\n            var su = 0;\n            for (x = 0; x < Wm; x++) {\n                msk[x] = Math.sin(Math.PI * (x + 1) / (Wm + 1));\n                su += msk[x];\n            }\n            for (x = 0; x < Wm; x++)\n                msk[x] = msk[x] / su;\n            var tempPix = new Array();\n            tempPix.length = px * py * 3;\n            var r, g, b;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    g = 0;\n                    b = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(x + i - Rm, 0, px - 1);\n                        r += _src[(y * px + p) * 3 + 0] * msk[i];\n                        g += _src[(y * px + p) * 3 + 1] * msk[i];\n                        b += _src[(y * px + p) * 3 + 2] * msk[i];\n                    }\n                    tempPix[(x * py + y) * 3] = r;\n                    tempPix[(x * py + y) * 3 + 1] = g;\n                    tempPix[(x * py + y) * 3 + 2] = b;\n                }\n            }\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    g = 0;\n                    b = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(y + i - Rm, 0, py - 1);\n                        r += tempPix[(x * py + p) * 3] * msk[i];\n                        g += tempPix[(x * py + p) * 3 + 1] * msk[i];\n                        b += tempPix[(x * py + p) * 3 + 2] * msk[i];\n                    }\n                    _src[(y * px + x) * 3] = r;\n                    _src[(y * px + x) * 3 + 1] = g;\n                    _src[(y * px + x) * 3 + 2] = b;\n                }\n            }\n            tempPix.length = 0;\n            tempPix = null;\n            msk.length = 0;\n            msk = null;\n        }\n        static blrByteArray2(_src, width, height, size) {\n            var px, py;\n            var rad;\n            var x, y, p, i;\n            px = width;\n            py = height;\n            rad = size;\n            var Wm = rad * 2; //窓幅\n            var Rm = (Wm - 1) / 2; //窓半径\n            var msk = new Array();\n            msk.length = Wm;\n            var su = 0;\n            for (x = 0; x < Wm; x++) {\n                msk[x] = Math.sin(Math.PI * (x + 1) / (Wm + 1));\n                su += msk[x];\n            }\n            for (x = 0; x < Wm; x++)\n                msk[x] = msk[x] / su;\n            var tempPix = new Array();\n            tempPix.length = px * py * 2;\n            var r, g;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    g = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(x + i - Rm, 0, px - 1);\n                        r += _src[(y * px + p) * 2] * msk[i];\n                        g += _src[(y * px + p) * 2 + 1] * msk[i];\n                    }\n                    tempPix[(x * py + y) * 2] = r;\n                    tempPix[(x * py + y) * 2 + 1] = g;\n                }\n            }\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    g = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(y + i - Rm, 0, py - 1);\n                        r += tempPix[(x * py + p) * 2] * msk[i];\n                        g += tempPix[(x * py + p) * 2 + 1] * msk[i];\n                    }\n                    _src[(y * px + x) * 2] = r;\n                    _src[(y * px + x) * 2 + 1] = g;\n                }\n            }\n            tempPix.length = 0;\n            tempPix = null;\n            msk.length = 0;\n            msk = null;\n        }\n        static blrByteArray1(_src, width, height, size) {\n            var px, py;\n            var rad;\n            var x, y, p, i;\n            px = width;\n            py = height;\n            rad = size;\n            var Wm = rad * 2; //窓幅\n            var Rm = (Wm - 1) / 2; //窓半径\n            var msk = new Array();\n            msk.length = Wm;\n            var su = 0;\n            for (x = 0; x < Wm; x++) {\n                msk[x] = Math.sin(Math.PI * (x + 1) / (Wm + 1));\n                su += msk[x];\n            }\n            for (x = 0; x < Wm; x++)\n                msk[x] = msk[x] / su;\n            var tempPix = new Array();\n            tempPix.length = px * py * 2;\n            var r;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(x + i - Rm, 0, px - 1);\n                        r += _src[Math.floor(y * px + p)] * msk[i];\n                    }\n                    tempPix[Math.floor(x * py + y)] = r;\n                }\n            }\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    r = 0;\n                    for (i = 0; i < Wm; i++) {\n                        p = this.clampi(y + i - Rm, 0, py - 1);\n                        r += tempPix[Math.floor(x * py + p)] * msk[i];\n                    }\n                    _src[Math.floor(y * px + x)] = r;\n                }\n            }\n            tempPix.length = 0;\n            tempPix = null;\n            msk.length = 0;\n            msk = null;\n        }\n        static calcOpticalFlowByteArray(_src) {\n            var px, py;\n            var x, y, p, i;\n            px = Math.floor(_src.width);\n            py = Math.floor(_src.height);\n            var _copy = _src.getPixels(_src.rect);\n            var src = new stageJS.ByteArray;\n            src.length = px * py;\n            var al;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    p = (y * px + x) * 4;\n                    src[y * px + x] = (0.298912 * _copy[p + 1] + 0.586611 * _copy[p + 2] + 0.114478 * _copy[p + 3]);\n                }\n            }\n            this.blrByteArray1(src, px, py, 2);\n            var out = new stageJS.ByteArray;\n            out.length = px * py * 2;\n            var fv = new uniqlo.Vec4;\n            var lim = new Array();\n            lim.length = 8;\n            for (y = 0; y < py; y++) {\n                for (x = 0; x < px; x++) {\n                    for (i = 0; i < 8; i++) {\n                        switch (i) {\n                            case 0:\n                                fv.x = -1;\n                                fv.y = -1;\n                                break;\n                            case 1:\n                                fv.x = 0;\n                                fv.y = -1;\n                                break;\n                            case 2:\n                                fv.x = 1;\n                                fv.y = -1;\n                                break;\n                            case 3:\n                                fv.x = -1;\n                                fv.y = 0;\n                                break;\n                            case 4:\n                                fv.x = 1;\n                                fv.y = 0;\n                                break;\n                            case 5:\n                                fv.x = -1;\n                                fv.y = 1;\n                                break;\n                            case 6:\n                                fv.x = 0;\n                                fv.y = 1;\n                                break;\n                            case 7:\n                                fv.x = 1;\n                                fv.y = 1;\n                                break;\n                        }\n                        p = (this.clampi(y + fv.y, 0, py - 1) * px + this.clampi(x + fv.x, 0, px - 1));\n                        lim[i] = src[p];\n                    }\n                    fv.y = (lim[5] + lim[6] + lim[7]) / 3.0 - (lim[0] + lim[1] + lim[2]) / 3.0;\n                    fv.x = (lim[2] + lim[4] + lim[7]) / 3.0 - (lim[0] + lim[3] + lim[5]) / 3.0;\n                    if (fv.length() > 0) {\n                        fv.rotate2d(90);\n                    }\n                    else {\n                        fv.x = Math.random() - 0.5;\n                        fv.y = Math.random() - 0.5;\n                    }\n                    fv.normalize();\n                    fv.multiply(10);\n                    out[Math.floor((y * px + x) * 2)] = this.clampi(fv.x + 127, 0, 255);\n                    out[Math.floor((y * px + x) * 2 + 1)] = this.clampi(fv.y + 127, 0, 255);\n                }\n            }\n            this.blrByteArray2(out, px, py, 5);\n            return out;\n        }\n    }\n    uniqlo.MOMA01ImageUtils = MOMA01ImageUtils;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class MOMA02CPerticles {\n        constructor() {\n            this.uniformMatrix = [0, 0, 0, 1];\n            this.bAllocated = false;\n            this.hue = 0;\n        }\n        // public function H_MOMA02CPerticles(){\n        // }\n        setCtx(ctx3D) {\n            this.mCtx3D = ctx3D;\n        }\n        setOrgRadWithScale(aRad = 0, aScale = 1) {\n            this.org_scale = aScale;\n            this.org_rad = aRad;\n        }\n        setPosOrg() {\n            this.rad = this.org_rad;\n            this.scale = this.org_scale;\n        }\n        updateTexture(bmd) {\n            if (!this.bAllocated)\n                return;\n            if (this._texture)\n                this._texture.dispose();\n            this._texture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, bmd, stageJS.Context3DTextureFormat.BGRA, false, true);\n        }\n        setup(bmd, aX, aY, aWidth, aHeight, aRad = 0, aScale = 1) {\n            this.dispose();\n            var rect = bmd.getColorBoundsRect(0xff000000, 0, false);\n            //trace(\"getColorBoundsRect\",rect);\n            if (!rect || rect.width < 1 || rect.height < 1)\n                return false;\n            this.texSize = 1;\n            while (this.texSize < rect.width || this.texSize < rect.height)\n                this.texSize *= 2;\n            var _bmd = new stageJS.BitmapData(this.texSize, this.texSize, true, 0);\n            var m = new uniqlo.Matrix;\n            this.tx = (rect.x + rect.width * .5) - this.texSize * .5;\n            this.ty = (rect.y + rect.height * .5) - this.texSize * .5;\n            m.translate(-this.tx, -this.ty);\n            _bmd.draw(bmd, m, null, null, null, true);\n            this.realScale = this.texSize;\n            this.org_x = aX - bmd.width * .5 + (rect.x + rect.width * .5);\n            this.org_y = aY - bmd.height * .5 + (rect.y + rect.height * .5);\n            this.org_scale = this.scale = aScale;\n            this.org_rad = this.rad = aRad;\n            this.org_width = aWidth;\n            this.org_height = aHeight;\n            this.scale = 0;\n            this.rad = (Math.random() - 0.5) * Math.PI;\n            this._texture = uniqlo.Stage3DHelper.uploadTexture(this.mCtx3D, _bmd, stageJS.Context3DTextureFormat.BGRA, false, true);\n            //trace(x,y,rad,scale);\n            this.bAllocated = this._texture != null;\n            return this.bAllocated;\n        }\n        dispose() {\n            this.destory();\n            this.bAllocated = false;\n        }\n        destory() {\n            if (this._texture)\n                this._texture.dispose();\n        }\n        draw(indexBuffer) {\n            if (!this.bAllocated)\n                return;\n            this.rad += (this.org_rad - this.rad) * 0.2;\n            this.scale += (this.org_scale - this.scale) * 0.2;\n            // this.uniformMatrix[0]=this.org_x;\n            // this.uniformMatrix[1]=UTItemManager.IMAGE_HEIGHT-this.org_y;\n            this.uniformMatrix[0] = -1024 + this.org_x;\n            this.uniformMatrix[1] = 1152 - this.org_y;\n            this.uniformMatrix[2] = this.rad;\n            this.uniformMatrix[3] = this.realScale * this.scale;\n            this.mCtx3D.setTextureAt(0, this._texture);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, MOMA02CPerticles.uniformColor);\n            this.mCtx3D.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, this.uniformMatrix);\n            this.mCtx3D.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n            this.mCtx3D.drawTriangles(indexBuffer);\n        }\n    }\n    // private static const uniformColor:Vector.<Number>=new <Number>[1,1,1,1];\n    // private var uniformMatrix:Vector.<Number>=new <Number>[0,0,0,1];\n    MOMA02CPerticles.uniformColor = [1, 1, 1, 1];\n    uniqlo.MOMA02CPerticles = MOMA02CPerticles;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class PVParticle {\n        constructor() {\n            //public var color:uint;\n            this.damping = 0.05;\n        }\n        setInitialCondition(px, py, vx, vy, lifeTimes) {\n            this.posX = px;\n            this.posY = py;\n            this.velX = vx;\n            this.velY = vy;\n            this.life = lifeTimes;\n        }\n        /*\n        public function resetForce():void{\n            frcX=0;\n            frcY=0;\n        }\n\n        public function addForce( x:Number, y:Number):void{\n            frcX = frcX + x;\n            frcY = frcY + y;\n        }\n\n        public function addDampingForce():void{\n            frcX = frcX - velX * damping;\n            frcY = frcY - velY * damping;\n        }\n        */\n        isAlive() {\n            return this.life > 0;\n        }\n        //------------------------------------------------------------\n        update() {\n            this.velX -= this.velX * this.damping;\n            this.velY -= this.velY * this.damping;\n            this.posX += this.velX;\n            this.posY += this.velY;\n            this.life -= 1;\n        }\n        setVFupdate(x, y) {\n            this.velX += x - this.velX * this.damping;\n            this.velY += y - this.velY * this.damping;\n            this.posX += this.velX;\n            this.posY += this.velY;\n            this.life -= 1;\n        }\n    }\n    uniqlo.PVParticle = PVParticle;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class PVVectprField {\n        constructor() {\n        }\n        setupField(_cols, _rows, _width, _height) {\n            this.cols = Math.floor(_cols);\n            this.rows = Math.floor(_rows);\n            this.cols_m1 = this.cols - 1;\n            this.rows_m1 = this.rows - 1;\n            this.width = Math.floor(_width);\n            this.height = Math.floor(_height);\n            this.nTotal = this.cols * this.rows;\n            this.nTotalx2 = this.nTotal * 2;\n            this.dispose();\n            this._buffer = new Array();\n            for (var j = 0; j < this.nTotalx2; j++) {\n                this._buffer.push(0);\n            }\n        }\n        dispose() {\n            if (this._buffer)\n                this._buffer.length = 0;\n            this._buffer = null;\n        }\n        clear() {\n            for (var i = 0; i < this.nTotalx2; i++) {\n                this._buffer[i] = 0;\n            }\n        }\n        fadeField(fadeAmount) {\n            for (var i = 0; i < this.nTotalx2; i++) {\n                this._buffer[i] *= fadeAmount;\n            }\n        }\n        getIndexFor(xpos, ypos) {\n            var xPct = xpos / this.width;\n            var yPct = ypos / this.height;\n            if ((xPct < 0 || xPct > 1) || (yPct < 0 || yPct > 1)) {\n                return 0;\n            }\n            var fieldPosX = xPct * this.cols;\n            var fieldPosY = yPct * this.rows;\n            if (fieldPosX < 0)\n                fieldPosX = 0;\n            else if (fieldPosX > this.cols_m1)\n                fieldPosX = this.cols_m1;\n            if (fieldPosY < 0)\n                fieldPosY = 0;\n            else if (fieldPosY > this.rows_m1)\n                fieldPosY = this.rows_m1;\n            return fieldPosY * this.cols + fieldPosX;\n        }\n        getForceFromPosPoint(pos) {\n            this.getForceFromPos(pos.x, pos.y);\n        }\n        getForceFromPos(xpos, ypos) {\n            xpos = xpos / this.width;\n            ypos = ypos / this.height;\n            if ((xpos < 0 || xpos > 1) || (ypos < 0 || ypos > 1)) {\n                this.outX = 0;\n                this.outY = 0;\n                return;\n            }\n            this.fieldPosX = xpos * this.cols;\n            this.fieldPosY = ypos * this.rows;\n            /*\n            if(fieldPosX<0)fieldPosX=0;\n            else if(fieldPosX>cols_m1)fieldPosX=cols_m1;\n            if(fieldPosY<0)fieldPosY=0;\n            else if(fieldPosY>rows_m1)fieldPosY=rows_m1;\n            */\n            this.mPos = Math.floor((this.fieldPosY * this.cols + this.fieldPosX) * 2);\n            this.outX = this._buffer[this.mPos] * 0.1;\n            this.outY = this._buffer[this.mPos + 1] * 0.1;\n        }\n        //------------------------------------------------------------------------------------\n        addVectorCircle(x, y, vx, vy, radius, strength) {\n            var fieldPosX = x / this.width * this.cols;\n            var fieldPosY = y / this.height * this.rows;\n            var fieldRadius = radius / this.width * this.cols;\n            var startx = fieldPosX - fieldRadius;\n            var starty = fieldPosY - fieldRadius;\n            var endx = fieldPosX + fieldRadius;\n            var endy = fieldPosY + fieldRadius;\n            if (startx < 0)\n                startx = 0;\n            if (starty < 0)\n                starty = 0;\n            if (endx > this.cols)\n                endx = this.cols;\n            if (endy > this.rows)\n                endy = this.rows;\n            var i, j, pos, distance;\n            for (i = startx; i < endx; i++) {\n                for (j = starty; j < endy; j++) {\n                    pos = (j * this.cols + i) * 2;\n                    distance = Math.sqrt((fieldPosX - i) * (fieldPosX - i) + (fieldPosY - j) * (fieldPosY - j));\n                    if (distance < 0.0001)\n                        distance = 0.0001;\n                    if (distance < fieldRadius) {\n                        distance = 1.0 - (distance / fieldRadius);\n                        distance = strength * distance;\n                        this._buffer[pos] += vx * distance;\n                        this._buffer[pos + 1] += vy * distance;\n                    }\n                }\n            }\n        }\n    }\n    uniqlo.PVVectprField = PVVectprField;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class Stage3DHelper {\n        static drawTriangles(ctx, indicies, projectionMatrix, texture, vartex, coords, transformMatrix, colorMatrix) {\n            // fc0 = colorMatrix\n            ctx.setProgramConstantsFromVector(stageJS.Context3DProgramType.FRAGMENT, 0, colorMatrix);\n            // vc4 = transformMatrix\n            ctx.setProgramConstantsFromVector(stageJS.Context3DProgramType.VERTEX, 4, transformMatrix);\n            // va0 = vartex\n            ctx.setVertexBufferAt(0, vartex, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            // va1 = coords\n            ctx.setVertexBufferAt(1, coords, 0, stageJS.Context3DVertexBufferFormat.FLOAT_2);\n            // vc0 = projectionMatrix\n            ctx.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, projectionMatrix, true);\n            // fs0 = texture\n            ctx.setTextureAt(0, texture);\n            ctx.drawTriangles(indicies);\n        }\n        static createMainProgram(ctx, useMip) {\n            // var vertexAssembly:AGALMiniAssembler = new AGALMiniAssembler();\n            // vertexAssembly.assemble(stageJS.Context3DProgramType.VERTEX, this.VERTEX_SHADER);\n            // var fragmentAssembly:AGALMiniAssembler = new AGALMiniAssembler();\n            // fragmentAssembly.assemble(stageJS.Context3DProgramType.FRAGMENT, useMip?this.PIXEL_SHADER:this.PIXEL_NOMIP_SHADER);\n            var shader = ctx.createProgram();\n            // shader.upload(vertexAssembly.agalcode, fragmentAssembly.agalcode);\n            shader.upload(this.V_SHADER_CODE, this.F_SHADER_CODE);\n            // vertexAssembly=null;\n            // fragmentAssembly=null;\n            return shader;\n        }\n        static uploadTextureWithMipMaps(tex, originalImage, dispose) {\n            var mipWidth = originalImage.width;\n            var mipHeight = originalImage.height;\n            var bmd = originalImage;\n            var scaleTransform = new uniqlo.Matrix();\n            scaleTransform.scale(0.5, 0.5);\n            var mipLevel = 0;\n            while (mipWidth > 0 && mipHeight > 0) {\n                tex.uploadFromBitmapData(bmd, mipLevel);\n                mipLevel++;\n                mipWidth >>= 1;\n                mipHeight >>= 1;\n                if (mipWidth > 0 && mipHeight > 0) {\n                    var tmp = bmd;\n                    bmd = null;\n                    bmd = new stageJS.BitmapData(mipWidth, mipHeight, true, 0x00FFFFFF);\n                    //bmd.draw( tmp, scaleTransform, null, null, null, true );\n                    bmd.draw(tmp, scaleTransform, null, null, null, true);\n                    if (dispose || tmp != originalImage)\n                        tmp.dispose();\n                    tmp = null;\n                }\n            }\n            if (dispose || bmd != originalImage)\n                bmd.dispose();\n        }\n        static uploadTexture(ctx, bmd, format, useMips, dispose, name, reverse = false) {\n            var tex = ctx.createTexture(bmd.width, bmd.height, format, false, 0, name, reverse);\n            if (useMips) {\n                Stage3DHelper.uploadTextureWithMipMaps(tex, bmd, dispose);\n            }\n            else {\n                tex.uploadFromBitmapData(bmd);\n            }\n            if (dispose)\n                bmd.dispose();\n            return tex;\n        }\n    }\n    // public static VERTEX_SHADER:string =\n    //     \"mov　vt0, va0 \\n\"+\n    //     \"mov　vt1, vc4 \\n\"+  //temp clear 回転計算開始\n    //     \"cos　vt1.x, vt1.z \\n\"+　//sin val tf[2]\n    //     \"sin　vt1.y, vt1.z \\n\"+ //cos val tf[2]\n    //     \"mul vt1.xyzw, vt0.xxyy, vt1.xyyx \\n\"+\n    //     \"sub vt0.x, vt1.x, vt1.z \\n\"+\n    //     \"add vt0.y, vt1.y, vt1.w \\n\"+\n    //     \"mul vt0.xy, vt0, vc4.ww \\n\"+   //Scaling tf[3]\n    //     \"add vt0.xy, vt0, vc4.xy \\n\"+   //\n    //     \"m44 op, vt0, vc0 \\n\"+          //座標を表示範囲に正規化\n    //     \"mov v0, va1\"; // uv を設定\n    // public static PIXEL_SHADER:string =\n    //     \"tex ft0, v0, fs0<2d,clamp,linear,miplinear> \\n\"+  //ft0=samplar(fs0,v0.uv)\n    //     \"mul oc, ft0, fc0\";    // textureにcolor を 適用\n    // public static PIXEL_NOMIP_SHADER:string =\n    //     \"tex ft0, v0, fs0<2d,clamp,linear> \\n\"+  //ft0=samplar(fs0,v0.uv)\n    //     \"mul oc, ft0, fc0\";    // textureにcolor を 適用\n    Stage3DHelper.F_SHADER_CODE = \" \\\n          precision mediump float; \\\n          uniform sampler2D fs0; \\\n          uniform vec4 fc0; \\\n\\\n          varying vec2 v0; \\\n\\\n          void main(void) { \\\n            vec4 ft0 = texture2D(fs0, v0); \\\n            gl_FragColor = ft0 * fc0; \\\n          } \\\n        \";\n    Stage3DHelper.V_SHADER_CODE = \" \\\n          attribute vec2 va0; \\\n          attribute vec2 va1; \\\n          uniform mat4 vc0; \\\n          uniform vec4 vc4; \\\n\\\n          varying vec2 v0; \\\n\\\n          void main(void) { \\\n            vec2 vt0 = va0;  \\\n            vec4 vt1 = vc4;  \\\n            vt1.x = cos(vt1.z); \\\n            vt1.y = sin(vt1.z); \\\n\\\n            vt1 = vec4(vt0.x, vt0.x, vt0.y, vt0.y) * vec4(vt1.x, vt1.y, vt1.y, vt1.x);   \\\n\\\n            vt0.x = vt1.x - vt1.z;    \\\n            vt0.y = vt1.y + vt1.w;    \\\n\\\n            vec2 vt3 = vec2(vt0.x, vt0.y) * vec2(vc4.w, vc4.w); \\\n            vt0.x = vt3.x; \\\n            vt0.y = vt3.y; \\\n\\\n            vt0.x = vt0.x + vc4.x;    \\\n            vt0.y = vt0.y + vc4.y;    \\\n            gl_Position = vec4(vt0, 0, 1.0) * vc0; \\\n            v0 = va1;                 \\\n          } \\\n        \";\n    uniqlo.Stage3DHelper = Stage3DHelper;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class BlendMode {\n    }\n    BlendMode.ALPHA = 'ALPHA';\n    BlendMode.ADD = 'ADD';\n    BlendMode.MULTIPLY = 'MULTIPLY';\n    BlendMode.SCREEN = 'SCREEN';\n    BlendMode.ERASE = 'ERASE';\n    uniqlo.BlendMode = BlendMode;\n    class Matrix {\n        constructor() {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.tx = 0;\n            this.ty = 0;\n        }\n        identity() {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.tx = 0;\n            this.ty = 0;\n        }\n        scale(x, y) {\n            if (x !== 1) {\n                this.a *= x;\n                this.c *= x;\n                this.tx *= x;\n            }\n            if (y !== 1) {\n                this.b *= y;\n                this.d *= y;\n                this.ty *= y;\n            }\n        }\n        translate(x, y) {\n            this.tx += x;\n            this.ty += y;\n        }\n        rotate(angle) {\n        }\n    }\n    uniqlo.Matrix = Matrix;\n    class ColorTransform {\n        constructor(r, g, b, a) {\n            this.r = r;\n            this.g = g;\n            this.b = b;\n            this.a = a;\n        }\n    }\n    uniqlo.ColorTransform = ColorTransform;\n})(uniqlo || (uniqlo = {}));\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\nvar uniqlo;\n(function (uniqlo) {\n    class LayoutObject {\n        constructor() {\n            this.texture = null;\n            this.transformMatrix = [];\n            this.colorMatrix = [];\n            this.vartex = [];\n            this.coords = [];\n            this.orgScale = 1;\n            this.orgX = 0;\n            this.orgY = 0;\n            this.transformMatrix.push(0, 0, 0, 1);\n            this.colorMatrix.push(1, 1, 1, 1);\n            this.vartex.push(0, 0, uniqlo.UTItemManager.IMAGE_WIDTH, 0, 0, uniqlo.UTItemManager.IMAGE_HEIGHT, uniqlo.UTItemManager.IMAGE_WIDTH, uniqlo.UTItemManager.IMAGE_HEIGHT);\n            this.coords.push(0, 1, 1, 1, 0, 0, 1, 0);\n        }\n        setRectangle(rect, gScale) {\n            console.log('setRectangle');\n            this.orgScale = gScale;\n            this.vartex[0] = this.vartex[4] = rect.width * .5 * this.orgScale;\n            this.vartex[1] = this.vartex[3] = -rect.height * .5 * this.orgScale;\n            this.vartex[2] = this.vartex[6] = -rect.width * .5 * this.orgScale;\n            this.vartex[5] = this.vartex[7] = rect.height * .5 * this.orgScale;\n            this.coords[0] = this.coords[4] = (rect.x + rect.width) / uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.coords[1] = this.coords[3] = rect.y / uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.coords[2] = this.coords[6] = rect.x / uniqlo.UTItemManager.IMAGE_WIDTH;\n            this.coords[5] = this.coords[7] = (rect.y + rect.height) / uniqlo.UTItemManager.IMAGE_HEIGHT;\n            this.bVartex.uploadFromVector(this.vartex, 0, 4);\n            this.bCoords.uploadFromVector(this.coords, 0, 4);\n            this.x = (rect.x + rect.width * .5) * this.orgScale;\n            this.y = (rect.y + rect.height * .5) * this.orgScale;\n            this.scale = 1;\n            this.angle = 0;\n            this.width = rect.width * this.orgScale;\n            this.height = rect.height * this.orgScale;\n        }\n        setRectangleType(rect, coordx, coordy, gScale) {\n            console.log('setRectangleType');\n            this.orgScale = gScale;\n            this.vartex[0] = this.vartex[4] = rect.width * .5 * this.orgScale;\n            this.vartex[1] = this.vartex[3] = -rect.height * .5 * this.orgScale;\n            this.vartex[2] = this.vartex[6] = -rect.width * .5 * this.orgScale;\n            this.vartex[5] = this.vartex[7] = rect.height * .5 * this.orgScale;\n            this.coords[0] = this.coords[4] = (coordx + rect.width) / uniqlo.UTItemManager.IMAGE_WIDTH * 0.5;\n            this.coords[1] = this.coords[3] = coordy / uniqlo.UTItemManager.IMAGE_HEIGHT * 0.5;\n            this.coords[2] = this.coords[6] = coordx / uniqlo.UTItemManager.IMAGE_WIDTH * 0.5;\n            this.coords[5] = this.coords[7] = (coordy + rect.height) / uniqlo.UTItemManager.IMAGE_HEIGHT * 0.5;\n            this.x = (rect.x + rect.width * .5) * this.orgScale;\n            this.y = (rect.y + rect.height * .5) * this.orgScale;\n            this.bVartex.uploadFromVector(this.vartex, 0, 4);\n            this.bCoords.uploadFromVector(this.coords, 0, 4);\n            this.scale = 1;\n            this.angle = 0;\n            this.width = rect.width * this.orgScale;\n            this.height = rect.height * this.orgScale;\n        }\n        setup(_ctx, _indicies, _projectionMatrix) {\n            this.ctx = _ctx;\n            this.indicies = _indicies;\n            this.projectionMatrix = _projectionMatrix;\n            this.bVartex = this.ctx.createVertexBuffer(4, 2); // Context3DBufferUsage.STATIC_DRAW); // BUG: removed\n            this.bCoords = this.ctx.createVertexBuffer(4, 2); // ,Context3DBufferUsage.STATIC_DRAW); // BUG: removed\n            this.bVartex.uploadFromVector(this.vartex, 0, 4);\n            this.bCoords.uploadFromVector(this.coords, 0, 4);\n        }\n        setTexture(_texture) {\n            this.texture = _texture;\n        }\n        dispose() {\n        }\n        draw() {\n            this.transformMatrix[0] = this.x;\n            this.transformMatrix[1] = this.y;\n            this.transformMatrix[2] = this.angle;\n            this.transformMatrix[3] = this.scale;\n            this.ctx.setProgramConstantsFromMatrix(stageJS.Context3DProgramType.VERTEX, 0, this.projectionMatrix, true);\n            this.ctx.setBlendFactors(stageJS.Context3DBlendFactor.SOURCE_ALPHA, stageJS.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\n            uniqlo.Stage3DHelper.drawTriangles(this.ctx, this.indicies, this.projectionMatrix, this.texture, this.bVartex, this.bCoords, this.transformMatrix, this.colorMatrix);\n        }\n    }\n    uniqlo.LayoutObject = LayoutObject;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class LayoutPericleGenelator {\n        static generateTypgraphyLayouts(perticles, layouts) {\n            var i;\n            var t;\n            var j;\n            var v;\n            var y = 0;\n            var marginX = 60;\n            var marginY = 60;\n            var MAX_WIDTH = 200;\n            var MAX_HEIGHT = 7;\n            var po;\n            var lo;\n            var x;\n            var scale;\n            var angle;\n            var width;\n            var height;\n            var numlines;\n            var tpo;\n            var maxW;\n            var maxH;\n            var found;\n            var MAX_LINE;\n            var ax;\n            var ay;\n            var cx;\n            var cy;\n            var rad = 0;\n            var strechMode;\n            var addDecoration;\n            var vert;\n            var sizes = [];\n            var enableRotation;\n            var palette;\n            var divX;\n            var divY;\n            var numH;\n            var numW;\n            var posX;\n            var posY;\n            var size;\n            var yi;\n            var xi;\n            var checkTimes;\n            var vec;\n            var upLeft;\n            var kaburiNum;\n            enableRotation = Math.random() < 0.5;\n            palette = [];\n            divX = 20 + (40 * 1.5 - 20) * this._step;\n            divY = 25 + (50 * 1.5 - 20) * this._step;\n            MAX_WIDTH = divX * 10;\n            MAX_HEIGHT = divY * 10;\n            marginX = 0;\n            rad = Math.random() * Math.PI * .5 - Math.PI * 0.25;\n            if (Math.abs(rad / Math.PI * 180) < 15)\n                rad = 0;\n            for (i = 0; i < divX * divY; i++)\n                palette.push(0);\n            vec = rad > 0;\n            i = Math.floor(Math.random() * layouts.length);\n            //trace(\"----\");\n            var objectNum = Math.max(layouts.length, 2) + 50 * this._step;\n            var longlong = false;\n            for (j = 0; j < objectNum; j++) {\n                let CHK_NEXT = () => {\n                    i++;\n                    if (i + 1 > layouts.length)\n                        i = 0;\n                };\n                lo = layouts[i];\n                if (j == 0) {\n                    //初回文字\n                    size = lo.width / lo.height > 1.2 ? 2 : 3;\n                    vert = false;\n                    numH = 1;\n                    for (t = 0; t < size; t++)\n                        numH += numH;\n                    numW = Math.ceil(numH * lo.width / lo.height);\n                    scale = MAX_HEIGHT / Number(divY) * numH / lo.height;\n                    posX = (divX - numW) * .5;\n                    posY = (divY - numH) * .5;\n                    upLeft = true;\n                    size = 1;\n                }\n                else {\n                    numH = 0;\n                    numW = 0;\n                    longlong = false;\n                    while (true) {\n                        vert = enableRotation ? Math.random() < 0.5 : false; //;\n                        numH = 1;\n                        for (t = 0; t < size; t++)\n                            numH += numH;\n                        numW = Math.ceil(numH * lo.width / lo.height);\n                        scale = MAX_HEIGHT / Number(divY) * numH / lo.height;\n                        if (vert) {\n                            v = numH;\n                            numH = numW;\n                            numW = v;\n                        }\n                        if (numH > divY || numW > divX) {\n                            longlong = true;\n                        }\n                        if (longlong) {\n                            if (numH + 1 > divY || numW + 1 > divX) {\n                                size--;\n                                if (size < 0) {\n                                    CHK_NEXT();\n                                }\n                            }\n                            else {\n                                size = Math.floor(Math.random() * 2);\n                                break;\n                            }\n                        }\n                        else {\n                            if (numH * numW < 4) {\n                                size++;\n                            }\n                            else {\n                                size = Math.floor(Math.random() * 2);\n                                break;\n                            }\n                        }\n                    }\n                    kaburiNum = 0;\n                    checkTimes = 0;\n                    {\n                        let RE_CHECK = () => {\n                            posX = 1 + Math.floor((divX - numW - 2) * Math.random());\n                            posY = 1 + Math.floor((divY - numH - 2) * Math.random());\n                            checkTimes++;\n                            if (checkTimes > 500) {\n                                return;\n                            }\n                            for (y = posY; y < posY + numH; y++) {\n                                for (x = posX; x < posX + numW; x++) {\n                                    if (palette[y * divX + x]) {\n                                        RE_CHECK();\n                                        return;\n                                    }\n                                }\n                            }\n                            kaburiNum = 0;\n                            for (y = posY; y < posY + numH && !found; y++) {\n                                x = posX - 1;\n                                if (palette[y * divX + x] == 1) {\n                                    kaburiNum++;\n                                    if (vert) {\n                                        upLeft = vec ? false : true;\n                                    }\n                                    else {\n                                        upLeft = true;\n                                    }\n                                }\n                                x = posX + numW;\n                                if (palette[y * divX + x] == 1) {\n                                    kaburiNum++;\n                                    if (vert) {\n                                        upLeft = vec ? false : true;\n                                    }\n                                    else {\n                                        upLeft = false;\n                                    }\n                                }\n                            }\n                            if (kaburiNum < 2)\n                                for (x = posX; x < posX + numW && !found; x++) {\n                                    y = posY - 1;\n                                    if (palette[y * divX + x] == 1) {\n                                        kaburiNum++;\n                                        if (vert) {\n                                            upLeft = true;\n                                        }\n                                        else {\n                                            upLeft = true;\n                                        }\n                                    }\n                                    y = posY + numH;\n                                    if (palette[y * divX + x] == 1) {\n                                        kaburiNum++;\n                                        if (vert) {\n                                            upLeft = false;\n                                        }\n                                        else {\n                                            upLeft = true;\n                                        }\n                                    }\n                                }\n                            if (kaburiNum < 2) {\n                                RE_CHECK();\n                                return;\n                            }\n                        };\n                        RE_CHECK();\n                    }\n                }\n                //パレットにマーキング\n                for (yi = posY; yi < posY + numH; yi++) {\n                    for (xi = posX; xi < posX + numW; xi++) {\n                        palette[yi * divX + xi] = 1;\n                        if (vert) {\n                            if (upLeft) {\n                                if (yi == posY + numH - 1)\n                                    palette[yi * divX + xi] = 2;\n                            }\n                            else {\n                                if (yi == posY)\n                                    palette[yi * divX + xi] = 2;\n                            }\n                        }\n                        else {\n                            if (upLeft) {\n                                if (xi == posX + numW - 1)\n                                    palette[yi * divX + xi] = 2;\n                            }\n                            else {\n                                if (xi == posX)\n                                    palette[yi * divX + xi] = 2;\n                            }\n                        }\n                    }\n                }\n                marginX = 3;\n                if (vert) {\n                    x = posX / Number(divX) * MAX_WIDTH + lo.height * 0.5 * scale;\n                    scale *= (lo.height * scale - marginX) / (lo.height * scale); //margin for Y\n                    if (upLeft) {\n                        y = posY / Number(divY) * MAX_HEIGHT + lo.width * 0.5 * scale + marginX * .5;\n                    }\n                    else {\n                        y = (posY + numH) / Number(divY) * MAX_HEIGHT - lo.width * 0.5 * scale - marginX * .5;\n                    }\n                }\n                else {\n                    y = posY / Number(divY) * MAX_HEIGHT + lo.height * 0.5 * scale;\n                    scale *= (lo.height * scale - marginX) / (lo.height * scale); //margin for Y\n                    if (upLeft) {\n                        x = posX / Number(divX) * MAX_WIDTH + lo.width * 0.5 * scale + marginX * .5;\n                    }\n                    else {\n                        x = (posX + numW) / Number(divX) * MAX_WIDTH - lo.width * 0.5 * scale - marginX * .5;\n                    }\n                }\n                angle = vert ? (vec ? -Math.PI * .5 : Math.PI * .5) : 0;\n                uniqlo.LayoutsHelper.addPerticleObject(perticles, layouts, i, x, y, scale, angle);\n                CHK_NEXT();\n            }\n            uniqlo.LayoutsHelper.debugDrawPalette(divX, divY, palette);\n            uniqlo.LayoutsHelper.fixLayouts(perticles, rad);\n        }\n        static generatePictLayouts2(perticles, layouts) {\n            var i;\n            var t;\n            var j;\n            var v;\n            var y = 0;\n            var marginX = 60;\n            var marginY = 60;\n            var MAX_WIDTH = 200;\n            var MAX_HEIGHT = 7;\n            var po;\n            var lo;\n            var x;\n            var scale;\n            var angle;\n            var width;\n            var height;\n            var numlines;\n            var tpo;\n            var maxW;\n            var maxH;\n            var found;\n            var MAX_LINE;\n            var ax;\n            var ay;\n            var cx;\n            var cy;\n            var rad = 0;\n            var strechMode;\n            var addDecoration;\n            var sizes = [];\n            var palette;\n            var divX;\n            var divY;\n            var numH;\n            var numW;\n            var posX;\n            var posY;\n            var size;\n            var yi;\n            var xi;\n            var checkTimes;\n            var vec;\n            var kaburiNum;\n            palette = [];\n            var mw = 0;\n            var mh = 0;\n            for (i = 0; i < layouts.length; i++) {\n                lo = layouts[i];\n                mw = Math.max(mw, lo.width);\n                mh = Math.max(mh, lo.height);\n            }\n            var aspect = mw / mh;\n            var widM = mw > mh;\n            var iaspect = Math.max(1, Math.round(widM ? mw / mh : mh / mw));\n            //trace(aspect,iaspect);\n            divX = Math.max(20 + (40 * 1.5 - 20) * this._step, widM ? 8 * iaspect : 0);\n            divY = Math.max(25 + (50 * 1.5 - 20) * this._step, widM ? 0 : 8 * iaspect);\n            MAX_WIDTH = divX * 10;\n            MAX_HEIGHT = divY * 10;\n            marginX = 0;\n            rad = Math.random() * Math.PI * .5 - Math.PI * 0.25;\n            if (Math.abs(rad / Math.PI * 180) < 15)\n                rad = 0;\n            for (i = 0; i < divX * divY; i++)\n                palette.push(0);\n            vec = rad > 0;\n            i = Math.floor(Math.random() * layouts.length);\n            //trace(\"----\");\n            var objectNum = Math.max(layouts.length, 2) + 30 * this._step;\n            for (j = 0; j < objectNum; j++) {\n                lo = layouts[i];\n                if (j == 0) {\n                    //初回文字\n                    size = 3;\n                    numH = 1;\n                    for (t = 0; t < size; t++)\n                        numH += numH;\n                    numW = Math.ceil(numH * lo.width / lo.height);\n                    scale = MAX_HEIGHT / Math.floor(divY) * numH / lo.height;\n                    posX = (divX - numW) * .5;\n                    posY = (divY - numH) * .5;\n                    size = 2;\n                }\n                else {\n                    numH = 0;\n                    numW = 0;\n                    while (numH * numW < 4) {\n                        numH = 1;\n                        for (t = 0; t < size; t++)\n                            numH += numH;\n                        numW = Math.ceil(numH * lo.width / lo.height);\n                        scale = MAX_HEIGHT / Number(divY) * numH / lo.height;\n                        if (numH * numW < 4) {\n                            size++;\n                        }\n                        else {\n                            size = Math.floor(Math.random() * 3);\n                        }\n                    }\n                    kaburiNum = 0;\n                    checkTimes = 0;\n                    {\n                        let RE_CHECK = () => {\n                            posX = 1 + Math.floor((divX - numW - 2) * Math.random());\n                            posY = 1 + Math.floor((divY - numH - 2) * Math.random());\n                            checkTimes++;\n                            if (checkTimes > 500) {\n                                //trace(\"NOT FOUND\")\n                                return;\n                            }\n                            for (y = posY; y < posY + numH; y++) {\n                                for (x = posX; x < posX + numW; x++) {\n                                    if (palette[y * divX + x]) {\n                                        RE_CHECK();\n                                        return;\n                                    }\n                                }\n                            }\n                            kaburiNum = 0;\n                            for (y = posY; y < posY + numH && !found; y++) {\n                                x = posX - 1;\n                                if (palette[y * divX + x] == 1) {\n                                    kaburiNum++;\n                                }\n                                x = posX + numW;\n                                if (palette[y * divX + x] == 1) {\n                                    kaburiNum++;\n                                }\n                            }\n                            if (kaburiNum < 2)\n                                for (x = posX; x < posX + numW && !found; x++) {\n                                    y = posY - 1;\n                                    if (palette[y * divX + x] == 1) {\n                                        kaburiNum++;\n                                    }\n                                    y = posY + numH;\n                                    if (palette[y * divX + x] == 1) {\n                                        kaburiNum++;\n                                    }\n                                }\n                            if (kaburiNum < 2) {\n                                RE_CHECK();\n                                return;\n                            }\n                        };\n                        RE_CHECK();\n                    }\n                }\n                //パレットにマーキング\n                for (yi = posY; yi < posY + numH; yi++) {\n                    for (xi = posX; xi < posX + numW; xi++) {\n                        palette[yi * divX + xi] = 1;\n                    }\n                }\n                marginX = 3;\n                y = posY / Number(divY) * MAX_HEIGHT + lo.height * 0.5 * scale;\n                x = posX / Number(divX) * MAX_WIDTH + lo.width * 0.5 * scale;\n                scale *= (lo.height * scale - marginX) / (lo.height * scale); //margin for Y\n                uniqlo.LayoutsHelper.addPerticleObject(perticles, layouts, i, x, y, scale, 0);\n                i++;\n                if (i + 1 > layouts.length)\n                    i = 0;\n            }\n            uniqlo.LayoutsHelper.debugDrawPalette(divX, divY, palette);\n            uniqlo.LayoutsHelper.fixLayouts(perticles, rad);\n        }\n        static generatePictLayouts2Single(perticles, layouts) {\n            var i;\n            var t;\n            var j;\n            var v;\n            var y = 0;\n            var marginX = 60;\n            var marginY = 60;\n            var MAX_WIDTH = 200;\n            var MAX_HEIGHT = 7;\n            var po;\n            var lo;\n            var x;\n            var scale;\n            var angle;\n            var width;\n            var height;\n            var numlines;\n            var tpo;\n            var maxW;\n            var maxH;\n            var found;\n            var MAX_LINE;\n            var ax;\n            var ay;\n            var cx;\n            var cy;\n            var rad = 0;\n            var strechMode;\n            var addDecoration;\n            var sizes = [];\n            var palette;\n            var divX;\n            var divY;\n            var numH;\n            var numW;\n            var posX;\n            var posY;\n            var size;\n            var yi;\n            var xi;\n            var checkTimes;\n            var kaburiNum;\n            palette = [];\n            var mw = 0;\n            var mh = 0;\n            for (i = 0; i < layouts.length; i++) {\n                lo = layouts[i];\n                mw = Math.max(mw, lo.width);\n                mh = Math.max(mh, lo.height);\n            }\n            var aspect = mw / mh;\n            var widM = mw > mh;\n            var iaspect = Math.max(1, Math.round(widM ? mw / mh : mh / mw));\n            //\ttrace(aspect,iaspect);\n            divX = Math.max(20 + (40 * 1.5 - 20) * this._step, widM ? 8 * iaspect : 0);\n            divY = Math.max(25 + (50 * 1.5 - 20) * this._step, widM ? 0 : 8 * iaspect);\n            MAX_WIDTH = divX * 10;\n            MAX_HEIGHT = divY * 10;\n            marginX = 0;\n            rad = Math.random() * Math.PI * .5 - Math.PI * 0.25;\n            if (Math.abs(rad / Math.PI * 180) < 15)\n                rad = 0;\n            for (i = 0; i < divX * divY; i++)\n                palette.push(0);\n            i = Math.floor(Math.random() * layouts.length);\n            //trace(\"----\");\n            var objectNum = Math.max(layouts.length, 2) + 30 * this._step;\n            for (j = 0; j < objectNum; j++) {\n                lo = layouts[i];\n                if (j == 0) {\n                    //初回文字\n                    size = 3;\n                    numH = 1;\n                    for (t = 0; t < size; t++)\n                        numH += numH;\n                    if (widM) {\n                        numW = numH * iaspect;\n                    }\n                    else {\n                        numW = numH;\n                        numH = numW * iaspect;\n                    }\n                    scale = MAX_HEIGHT / Number(divY) * numH / lo.height;\n                    posX = (divX - numW) * .5;\n                    posY = (divY - numH) * .5;\n                    size = 2;\n                }\n                else {\n                    numH = 0;\n                    numW = 0;\n                    while (numH * numW < 4) {\n                        numH = 1;\n                        for (t = 0; t < size; t++)\n                            numH += numH;\n                        if (widM) {\n                            numW = numH * iaspect;\n                        }\n                        else {\n                            numW = numH;\n                            numH = numW * iaspect;\n                        }\n                        scale = MAX_HEIGHT / Number(divY) * numH / lo.height;\n                        if (numH * numW < 4) {\n                            size++;\n                        }\n                        else {\n                            size = Math.floor(Math.random() * 3);\n                        }\n                    }\n                    kaburiNum = 0;\n                    checkTimes = 0;\n                    {\n                        let RE_CHECK = () => {\n                            posX = 1 + Math.floor((divX - numW - 2) * Math.random());\n                            posY = 1 + Math.floor((divY - numH - 2) * Math.random());\n                            checkTimes++;\n                            if (checkTimes > 500) {\n                                //trace(\"NOT FOUND\")\n                                return;\n                            }\n                            for (y = posY; y < posY + numH; y++) {\n                                for (x = posX; x < posX + numW; x++) {\n                                    if (palette[y * divX + x]) {\n                                        RE_CHECK();\n                                        return;\n                                    }\n                                }\n                            }\n                            kaburiNum = 0;\n                            for (y = posY; y < posY + numH && !found; y++) {\n                                x = posX - 1;\n                                if (palette[y * divX + x]) {\n                                    kaburiNum++;\n                                }\n                                x = posX + numW;\n                                if (palette[y * divX + x]) {\n                                    kaburiNum++;\n                                }\n                            }\n                            if (kaburiNum < 2)\n                                for (x = posX; x < posX + numW && !found; x++) {\n                                    y = posY - 1;\n                                    if (palette[y * divX + x]) {\n                                        kaburiNum++;\n                                    }\n                                    y = posY + numH;\n                                    if (palette[y * divX + x]) {\n                                        kaburiNum++;\n                                    }\n                                }\n                            if (kaburiNum < 2) {\n                                RE_CHECK();\n                                return;\n                            }\n                        };\n                        RE_CHECK();\n                    }\n                }\n                //パレットにマーキング\n                for (yi = posY; yi < posY + numH; yi++) {\n                    for (xi = posX; xi < posX + numW; xi++) {\n                        palette[yi * divX + xi] = 1;\n                    }\n                }\n                marginX = 3;\n                y = posY * 10 + numH * 10 * .5;\n                x = (posX * 10 + numW * 10 * .5) * aspect * (widM ? 1.0 / Math.floor(iaspect) : iaspect);\n                //x=(posX+numW)/Number(divX)*MAX_WIDTH-lo.width*0.5*scale-marginX*.5;\n                scale *= (lo.height * scale - marginX) / (lo.height * scale); //margin for Y\n                angle = 0;\n                uniqlo.LayoutsHelper.addPerticleObject(perticles, layouts, i, x, y, scale, angle);\n                i++;\n                if (i + 1 > layouts.length)\n                    i = 0;\n            }\n            uniqlo.LayoutsHelper.debugDrawPalette(divX, divY, palette);\n            uniqlo.LayoutsHelper.fixLayouts(perticles, rad);\n        }\n        static generatePictLayouts(perticles, layouts) {\n            var i;\n            var t;\n            var j;\n            var v;\n            var y = 0;\n            var marginX = 60;\n            var marginY = 60;\n            var po;\n            var lo;\n            var x;\n            var scale;\n            var angle;\n            var width;\n            var height;\n            var numlines;\n            var tpo;\n            var maxW;\n            var maxH;\n            var found;\n            var MAX_LINE;\n            var ax;\n            var ay;\n            var cx;\n            var cy;\n            var rad = 0;\n            var strechMode;\n            var addDecoration;\n            var sizes = [];\n            var palette;\n            var divX;\n            var divY;\n            var numH;\n            var numW;\n            var posX;\n            var posY;\n            var size;\n            var yi;\n            var xi;\n            var checkTimes;\n            var vec;\n            var kaburiNum;\n            var mw = 0;\n            var mh = 0;\n            var defaultScale = Number.MAX_VALUE;\n            for (i = 0; i < layouts.length; i++) {\n                lo = layouts[i];\n                mw = Math.max(mw, lo.width);\n                mh = Math.max(mh, lo.height);\n            }\n            for (i = 0; i < layouts.length; i++) {\n                lo = layouts[i];\n                defaultScale = Math.min(defaultScale, mw / lo.width);\n                defaultScale = Math.min(defaultScale, mh / lo.height);\n            }\n            palette = [];\n            divX = 1;\n            divY = 1;\n            marginX = 60;\n            var iStep = Math.pow(this._step, 0.75) * 20 + Math.sqrt(layouts.length);\n            for (i = 0; i < iStep; i++) {\n                if (divX * mw < divY * mh) {\n                    divX++;\n                }\n                else {\n                    divY++;\n                }\n            }\n            //trace(\"LAYOUT STAGE INFO:\",divX,divY,mw,mh);\n            for (i = 0; i < divX * divY; i++)\n                palette.push(0);\n            marginX = Math.max(divX * mw, divY * mh) * 0.02;\n            rad = Math.random() * Math.PI * .5 - Math.PI * 0.25;\n            if (Math.abs(rad / Math.PI * 180) < 15)\n                rad = 0;\n            rad = 0;\n            i = Math.floor(Math.random() * layouts.length);\n            //trace(\"----\");\n            //startingSize:\n            size = Math.min(divX, divY);\n            size = Math.min(size < 5 ? (Math.ceil(size * .5) + (Math.ceil(size * .5) + 1) * Math.random()) : (1 + ((size - 1) * 0.8) * Math.random(), size));\n            if (size > 1 && size == divX && size == divY)\n                size--;\n            checkTimes = 0;\n            while (size > 1) {\n                lo = layouts[i];\n                let RECHECK_PICPOS = () => {\n                    posX = Math.floor((divX - size + 1) * Math.random());\n                    posY = Math.floor((divY - size + 1) * Math.random());\n                    for (yi = posY; yi < posY + size; yi++) {\n                        for (xi = posX; xi < posX + size; xi++) {\n                            if (palette[yi * divX + xi]) {\n                                checkTimes++;\n                                if (checkTimes > 500) {\n                                    size--;\n                                    checkTimes = 0;\n                                    if (size < 2) { /* ENDCHECK_PICPOS(); */\n                                        return;\n                                    }\n                                }\n                                RECHECK_PICPOS();\n                                return;\n                            }\n                            ;\n                        }\n                    }\n                    for (yi = posY; yi < posY + size; yi++) {\n                        for (xi = posX; xi < posX + size; xi++) {\n                            palette[yi * divX + xi] = 1;\n                        }\n                    }\n                    scale = size * defaultScale;\n                    x = posX * mw + mw * scale * .5;\n                    y = posY * mh + mh * scale * .5;\n                    {\n                        if (lo.width / (mw * scale) > lo.height / (mh * scale)) {\n                            scale = (mw * scale) / lo.width;\n                            scale *= (lo.width * scale - marginX) / (lo.width * scale);\n                        }\n                        else {\n                            scale = (mh * scale) / lo.height;\n                            scale *= (lo.height * scale - marginX) / (lo.height * scale);\n                        }\n                    }\n                    uniqlo.LayoutsHelper.addPerticleObject(perticles, layouts, i, x, y, scale, rad);\n                    i++;\n                    if (i + 1 > layouts.length)\n                        i = 0;\n                };\n                RECHECK_PICPOS();\n            }\n            let ENDCHECK_PICPOS = () => {\n                //埋める\n                for (yi = 0; yi < divY; yi++) {\n                    for (xi = 0; xi < divX; xi++) {\n                        if (!palette[yi * divX + xi]) {\n                            lo = layouts[i];\n                            scale = defaultScale;\n                            x = xi * mw + mw * scale * .5;\n                            y = yi * mh + mh * scale * .5;\n                            {\n                                if (lo.width / (mw * scale) > lo.height / (mh * scale)) {\n                                    scale = (mw * scale) / lo.width;\n                                    scale *= (lo.width * scale - marginX) / (lo.width * scale);\n                                }\n                                else {\n                                    scale = (mh * scale) / lo.height;\n                                    scale *= (lo.height * scale - marginX) / (lo.height * scale);\n                                }\n                            }\n                            uniqlo.LayoutsHelper.addPerticleObject(perticles, layouts, i, x, y, scale, rad);\n                            i++;\n                            if (i + 1 > layouts.length)\n                                i = 0;\n                        }\n                    }\n                }\n                uniqlo.LayoutsHelper.debugDrawPalette(divX, divY, palette);\n                uniqlo.LayoutsHelper.fixLayouts(perticles, 0);\n            };\n            ENDCHECK_PICPOS();\n        }\n        ;\n        static generateLayout(perticles, layouts, isTypography, weakMode) {\n            try {\n                if (isTypography) {\n                    this.generateTypgraphyLayouts(perticles, layouts);\n                }\n                else {\n                    if (this.flag) {\n                        this.generatePictLayouts(perticles, layouts);\n                    }\n                    else {\n                        if (layouts.length == 1) {\n                            this.generatePictLayouts2Single(perticles, layouts);\n                        }\n                        else {\n                            this.generatePictLayouts2(perticles, layouts);\n                        }\n                    }\n                    this.flag = !this.flag;\n                }\n            }\n            catch (e) {\n                uniqlo.LayoutsHelper.fixLayouts(perticles, 0);\n                // trace(e);\n            }\n            this._step += 0.015 * 0.2;\n            if (this._step > 1.0)\n                this._step = 1.0;\n            if (weakMode && this._step > 0.05)\n                this._step = 0.05;\n        }\n        static layoutReset() {\n            this._step = 0;\n        }\n    }\n    LayoutPericleGenelator.flag = false;\n    LayoutPericleGenelator._step = 0;\n    uniqlo.LayoutPericleGenelator = LayoutPericleGenelator;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class LayoutsHelper {\n        static addSimplePerts(perticles, layouts, vert, ay, ax, MAX_WIDTH, Line_Height, marginY, marginX, MAX_LINE, startIndex = 0, MAX_HEIGHT = 0) {\n            var sizes = [];\n            var nums = [];\n            var i;\n            var t;\n            var y = 0;\n            var po;\n            var lo;\n            var x;\n            var scale;\n            var angle;\n            var numlines;\n            var maxW;\n            var rad;\n            var cx;\n            var cy;\n            var tpo;\n            rad = vert ? -Math.PI * .5 : 0;\n            ;\n            numlines = 0;\n            i = startIndex;\n            y = 0;\n            x = 0;\n            t = 0;\n            maxW = 0;\n            this.tmpPerticle.length = 0;\n            sizes.length = 0;\n            nums.length = 0;\n            angle = 0;\n            lo = layouts[0];\n            scale = Line_Height / lo.height;\n            while (true) {\n                lo = layouts[i];\n                if (x > 0 && x + lo.width * scale > MAX_WIDTH) {\n                    sizes.push(x - marginX);\n                    nums.push(t);\n                    x = 0;\n                    t = 0;\n                    y += Line_Height + marginY;\n                    numlines++;\n                    i = Math.floor(Math.random() * layouts.length);\n                    lo = layouts[i];\n                    if (numlines > MAX_LINE - 1)\n                        break;\n                }\n                tpo = new uniqlo.SimplePerticleObject;\n                tpo.flg = x == 0;\n                tpo.lid = i;\n                tpo.x = x + lo.width * scale * .5;\n                tpo.y = y + lo.height * scale * .5;\n                tpo.scale = scale;\n                tpo.angle = angle;\n                this.tmpPerticle.push(tpo);\n                t++;\n                maxW = Math.max(maxW, x + lo.width * scale);\n                x += lo.width * scale + marginX;\n                i++;\n                if (i + 1 > layouts.length)\n                    i = 0;\n            }\n            scale = MAX_WIDTH / maxW;\n            t = -1;\n            for (i = 0; i < this.tmpPerticle.length; i++) {\n                tpo = this.tmpPerticle[i];\n                if (tpo.flg) {\n                    t++;\n                    x = 0;\n                }\n                else {\n                    x += (maxW - (sizes[t] - (nums[t] - 1) * marginX)) / Number((nums[t] - 1)) - marginX;\n                }\n                tpo.x = tpo.x * scale + x * scale;\n                tpo.y = tpo.y * scale;\n                tpo.scale *= scale;\n                if (MAX_HEIGHT > 0 && MAX_HEIGHT < tpo.y - layouts[tpo.lid].height * tpo.scale * .5)\n                    break;\n                cx = tpo.x * Math.cos(rad) - tpo.y * Math.sin(rad);\n                cy = tpo.x * Math.sin(rad) + tpo.y * Math.cos(rad);\n                tpo.x = cx;\n                tpo.y = cy;\n                tpo.angle += rad;\n                this.addPerticleObject(perticles, layouts, tpo.lid, tpo.x + ax, tpo.y + ay, tpo.scale, tpo.angle);\n            }\n            this.tmpPerticle.length = 0;\n            sizes.length = 0;\n            nums.length = 0;\n        }\n        static addPerticleObject(perticles, layouts, pid, ax, ay, ascale, aangle) {\n            var j;\n            var found;\n            var po;\n            found = false;\n            for (j = 0; j < perticles.length; j++) {\n                if (perticles[j].willDelete && perticles[j].index == pid) {\n                    po = perticles[j];\n                    found = true;\n                }\n            }\n            if (!found) {\n                po = new uniqlo.perticleObject(layouts[pid], pid);\n                po.setPositon(Math.random() * uniqlo.UTItemManager.IMAGE_WIDTH, Math.random() * uniqlo.UTItemManager.IMAGE_HEIGHT, 0, Math.random() * Math.PI * 2 - Math.PI);\n            }\n            po.setPositonWithAnimate(ax, ay, ascale, aangle);\n            po.willDelete = false;\n            if (!found)\n                perticles.push(po);\n        }\n        static fixLayouts(perticles, rad = 0) {\n            var found;\n            var i;\n            var po;\n            var hh;\n            var hw;\n            var cx;\n            var cy;\n            var minX;\n            var maxX;\n            var minY;\n            var maxY;\n            var w;\n            var h;\n            var movX = 0;\n            var movY = 0;\n            var s;\n            if (rad != 0) {\n                for (i = 0; i < perticles.length; i++) {\n                    po = perticles[i];\n                    if (po.willDelete)\n                        continue;\n                    cx = po.toX * Math.cos(rad) - po.toY * Math.sin(rad);\n                    cy = po.toX * Math.sin(rad) + po.toY * Math.cos(rad);\n                    po.toX = cx;\n                    po.toY = cy;\n                    po.toAngle += rad;\n                }\n            }\n            found = false;\n            for (i = 0; i < perticles.length; i++) {\n                po = perticles[i];\n                if (po.willDelete)\n                    continue;\n                hh = po.height() * .5;\n                hw = po.width() * .5;\n                cx = Math.max(Math.abs(hw * Math.cos(po.toAngle) - hh * Math.sin(po.toAngle)), Math.abs(hw * Math.cos(po.toAngle) + hh * Math.sin(po.toAngle)));\n                cy = Math.max(Math.abs(hw * Math.sin(po.toAngle) + hh * Math.cos(po.toAngle)), Math.abs(hw * Math.sin(po.toAngle) - hh * Math.cos(po.toAngle)));\n                if (!found) {\n                    found = true;\n                    minX = po.toX - cx;\n                    maxX = po.toX + cx;\n                    minY = po.toY - cy;\n                    maxY = po.toY + cy;\n                }\n                else {\n                    minX = Math.min(minX, po.toX - cx);\n                    maxX = Math.max(maxX, po.toX + cx);\n                    minY = Math.min(minY, po.toY - cy);\n                    maxY = Math.max(maxY, po.toY + cy);\n                }\n            }\n            w = maxX - minX;\n            h = maxY - minY;\n            var MaxW = uniqlo.UTItemManager.IMAGE_WIDTH - 200;\n            var MaxH = uniqlo.UTItemManager.IMAGE_HEIGHT;\n            if (MaxH / h < MaxW / w) {\n                s = MaxH / h;\n                //if(w*s>AppVals.IMAGE_WIDTH*.5)movX=(AppVals.IMAGE_WIDTH-w*s)*.5;\n                //else movX=(AppVals.IMAGE_WIDTH-w*s)*(Math.random());\n            }\n            else {\n                s = MaxW / w;\n                //if(Math.random()<0.6) movY=(AppVals.IMAGE_HEIGHT-h*s)*.2;\n                //else movY=(AppVals.IMAGE_HEIGHT-h*s)*(Math.random());\n            }\n            movX = (uniqlo.UTItemManager.IMAGE_WIDTH - w * s) * .5;\n            movY = (uniqlo.UTItemManager.IMAGE_HEIGHT - h * s) * .2;\n            //位置を再定義する。\n            for (i = 0; i < perticles.length; i++) {\n                po = perticles[i];\n                if (po.willDelete)\n                    continue;\n                po.toX -= minX;\n                po.toY -= minY;\n                po.toScale *= s;\n                po.toX *= s;\n                po.toY *= s;\n                po.toX += movX;\n                po.toY += movY;\n            }\n        }\n        static debugDrawPalette(divX, divY, palette) {\n            var y;\n            var x;\n            var bmd = new stageJS.BitmapData(divX, divY, true, 0);\n            for (y = 0; y < divY; y++) {\n                for (x = 0; x < divX; x++) {\n                    bmd.setPixel32(x, y, palette[y * divX + x] == 1 ? 0x990000FF : (palette[y * divX + x] == 2 ? 0x99FF0000 : 0x99FFFFFF));\n                }\n            }\n            this.debugBmd.bitmapData = bmd;\n            this.debugBmd.x = 0;\n            this.debugBmd.y = 200;\n            this.debugBmd.rotation = 0;\n            //debugBmd.rotation=rad/Math.PI*180;\n            this.debugBmd.smoothing = false;\n            this.debugBmd.width = divX * 2;\n            this.debugBmd.height = divY * 2;\n            // AppVals.stage.addChild(debugBmd);\n        }\n    }\n    LayoutsHelper.debugBmd = new stageJS.Bitmap;\n    LayoutsHelper.tmpPerticle = [];\n    uniqlo.LayoutsHelper = LayoutsHelper;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class SimplePerticleObject {\n    }\n    uniqlo.SimplePerticleObject = SimplePerticleObject;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class perticleObject {\n        constructor(layoutObject, _index) {\n            this._scale = 0;\n            this._angle = 0;\n            this._x = 0;\n            this._y = 0;\n            this.willDelete = false;\n            this.toX = 512;\n            this.toY = 512;\n            this.toScale = 1;\n            this.toAngle = 0;\n            this.accX = 0;\n            this.accY = 0;\n            this.accScale = 0;\n            this.accAngle = 0;\n            this.dumpingForce = 0.98;\n            this.springiness = 0.2;\n            this._lo = layoutObject;\n            this.index = _index;\n        }\n        updateLayoutObject(layoutObject) {\n            this._lo = layoutObject;\n        }\n        draw() {\n            /*\n            updateSpringMotion();\n\n            _x+=accX;\n            _y+=accY;\n            _scale+=accScale;\n            _angle+=accAngle;\n\n            accX*=dumpingForce;\n            accY*=dumpingForce;\n            accScale*=dumpingForce\n            accAngle*=dumpingForce\n                */\n            var df = (1 - this.dumpingForce) * 0.6 + 0.3;\n            //\t\t\tif(df<0.2)df=0.2;\n            //\t\t\tif(df>0.8)df=0.8;\n            this._x += (this.toX - this._x) * df;\n            this._y += (this.toY - this._y) * df;\n            this._angle += (this.toAngle - this._angle) * df;\n            this._scale += (this.toScale - this._scale) * df;\n            this._lo.x = this._x;\n            this._lo.y = this._y;\n            this._lo.angle = this._angle;\n            this._lo.scale = this._scale;\n            this._lo.draw();\n        }\n        width() {\n            return this._lo.width * this.toScale;\n        }\n        height() {\n            return this._lo.height * this.toScale;\n        }\n        setPositon(ax, ay, ascale, aangle) {\n            this._x = this.toX = ax;\n            this._y = this.toY = ay;\n            this._scale = this.toScale = ascale;\n            this._angle = this.toAngle = aangle;\n        }\n        setPositonWithAnimate(ax, ay, ascale, aangle) {\n            this.toX = ax;\n            this.toY = ay;\n            this.toScale = ascale;\n            this.toAngle = aangle;\n        }\n        updateSpringMotion() {\n            var vecX = this._x - this.toX;\n            var vecY = this._y - this.toY;\n            var theirDistance = Math.sqrt(vecX * vecX + vecY * vecY);\n            var springForce = this.springiness * (-theirDistance);\n            vecX = vecX / theirDistance * springForce;\n            vecY = vecY / theirDistance * springForce;\n            this.accX += vecX || 0;\n            this.accY += vecY || 0;\n            this.accScale += this.springiness * (-(this._scale - this.toScale));\n            this.accAngle += this.springiness * (-(this._angle - this.toAngle));\n        }\n    }\n    uniqlo.perticleObject = perticleObject;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class IPPerticles {\n        constructor() {\n            this.x = 0;\n            this.y = 0;\n            this.orgX = 0;\n            this.orgY = 0;\n            this.r = 0;\n            this.g = 0;\n            this.b = 0;\n            this.life = 0;\n            this.scale = 0;\n            this.alpha = 0;\n            this.orgAlpha = 0;\n        }\n    }\n    uniqlo.IPPerticles = IPPerticles;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    // TODO: uded in UTCreateaMain\n    class INavigatedView {\n        constructor() {\n        }\n        save(i) {\n        }\n    }\n    uniqlo.INavigatedView = INavigatedView;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    //TODO : in GlichImpl\n    class RemixGlitchView {\n        constructor() {\n        }\n        playStageChange(flag) {\n            console.log('playStageChange');\n        }\n        motionStateChange(flag) {\n            console.log('motionStateChange');\n        }\n        showStopAlert() {\n            console.log('showStopAlert');\n        }\n    }\n    uniqlo.RemixGlitchView = RemixGlitchView;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class StampObject {\n        constructor() {\n            this.contents = { bitmapData: null };\n        }\n    }\n    uniqlo.StampObject = StampObject;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class DraggablePlateRect {\n        constructor() {\n            //元に戻ろうとする力　: 有効\n            //props\n            this.backToRatateZero = true;\n            this.backToOrgPosition = true;\n            this._lockState = false;\n            this.limitRotateMinRad = 0;\n            this.limitRotateMaxRad = 0;\n            this._bAllocated = false;\n            this._orgPos_x = 0;\n            this._orgPos_y = 0;\n            this.pos_x = 0;\n            this.pos_y = 0;\n            this._activeForce_x = 0;\n            this._activeForce_y = 0;\n            this._lastDragPos_x = 0;\n            this._lastDragPos_y = 0;\n            this._dragPos_x = 0;\n            this._dragPos_y = 0;\n        }\n        setup(orign_x, orign_y, orgRad, aWidth, aHeight) {\n            this._orgPos_x = orign_x;\n            this._orgPos_y = orign_y;\n            this._activeForce_x = 0;\n            this._activeForce_y = 0;\n            this._width = aWidth;\n            this._height = aHeight;\n            this.pos_x = orign_x;\n            this.pos_y = orign_y;\n            this.rad = orgRad;\n            this._lastDragPos_x = 0;\n            this._lastDragPos_y = 0;\n            this._dragPos_x = 0;\n            this._dragPos_y = 0;\n            this._updateTime = 0;\n            this._dragging = false;\n            this._bAllocated = true;\n        }\n        //ラジアン正規化 inline\n        REG_RAD(val) {\n            while (val > Math.PI)\n                val -= Math.PI * 2;\n            while (val < -Math.PI)\n                val += Math.PI * 2;\n            return val;\n        }\n        calcDragPos(_x, _y) {\n            var va, vb, vs, vm, r, vl;\n            this._dragPos_x = _x;\n            this._dragPos_y = _y;\n            this._wk1_x = this._lastDragPos_x - this.pos_x;\n            this._wk1_y = this._lastDragPos_y - this.pos_y;\n            this._wk2_x = this._dragPos_x - this.pos_x;\n            this._wk2_y = this._dragPos_y - this.pos_y;\n            vl = Math.sqrt(this._wk1_x * this._wk1_x + this._wk1_y * this._wk1_y);\n            va = Math.atan2(this._wk1_y, this._wk1_x);\n            vb = Math.atan2(this._wk2_y, this._wk2_x);\n            vs = va - this.rad;\n            vm = vb - va;\n            r = Math.min(1.0, vl / (Math.sqrt(this._width * this._width + this._height * this._height) * .5));\n            r = 1 - Math.sin((1.0 - r) * Math.PI * 0.5);\n            if (this._lockState)\n                r = 0;\n            vm = this.REG_RAD(vm);\n            this.rad = this.rad + vm * r;\n            if (!this._lockState && this.limitRotateMinRad < this.limitRotateMaxRad) {\n                this.rad = this.REG_RAD(this.rad);\n                if (this.rad < this.limitRotateMinRad)\n                    this.rad = this.limitRotateMinRad;\n                if (this.rad > this.limitRotateMaxRad)\n                    this.rad = this.limitRotateMaxRad;\n            }\n            this.pos_x = this._dragPos_x - vl * Math.cos(this.rad + vs);\n            this.pos_y = this._dragPos_y - vl * Math.sin(this.rad + vs);\n            this.rad = this.REG_RAD(this.rad);\n            this._lastDragPos_x = this._dragPos_x;\n            this._lastDragPos_y = this._dragPos_y;\n        }\n        update() {\n            if (!this._bAllocated)\n                return;\n            if (!this._dragging) {\n                if (Math.sqrt(this._activeForce_x * this._activeForce_x + this._activeForce_y * this._activeForce_y) > 0.5) {\n                    this.calcDragPos(this._dragPos_x + this._activeForce_x, this._dragPos_y + this._activeForce_y);\n                    this._activeForce_x *= 0.9;\n                    this._activeForce_y *= 0.9;\n                }\n            }\n            this._updated = false;\n            if (this.backToRatateZero && this.rad != 0) {\n                this.rad *= 0.95;\n                if (Math.abs(this.rad) < 0.001)\n                    this.rad = 0;\n                this._updated = true;\n            }\n            if (this.backToOrgPosition && !this._dragging) {\n                if (this.pos_x != this._orgPos_x) {\n                    this.pos_x = this.pos_x + (this._orgPos_x - this.pos_x) * 0.2;\n                    if (Math.abs(this.pos_x - this._orgPos_x) < 0.1)\n                        this.pos_x = this._orgPos_x;\n                    this._updated = true;\n                }\n                if (this.pos_y != this._orgPos_y) {\n                    this.pos_y = this.pos_y + (this._orgPos_y - this.pos_y) * 0.2;\n                    if (Math.abs(this.pos_y - this._orgPos_y) < 0.1)\n                        this.pos_y = this._orgPos_y;\n                    this._updated = true;\n                }\n            }\n        }\n        drag(_x, _y, aDragging, needLock) {\n            this._lockState = needLock;\n            if (!aDragging) {\n                if (this._dragging) {\n                    this._dragging = false;\n                    if (this._updateTime != (new Date()).getTime()) {\n                        this._activeForce_x = 0;\n                        this._activeForce_y = 0;\n                    }\n                }\n                return;\n            }\n            if (!this._dragging) {\n                this._lastDragPos_x = _x;\n                this._lastDragPos_y = _y;\n                this._dragging = true;\n                return;\n            }\n            this._updateTime = (new Date()).getTime();\n            this._activeForce_x = _x - this._lastDragPos_x;\n            this._activeForce_y = _y - this._lastDragPos_y;\n            this.calcDragPos(_x, _y);\n        }\n    }\n    uniqlo.DraggablePlateRect = DraggablePlateRect;\n})(uniqlo || (uniqlo = {}));\nvar uniqlo;\n(function (uniqlo) {\n    class Easing {\n        static easeLinear(t, b, c, d) {\n            return c * t / d + b;\n        }\n        /*\n        Sine\n        ---------------------------------------------------------------------------------\n        */\n        static easeInSine(t, b, c, d) {\n            return -c * Math.cos(t / d * this.PI_D2) + c + b;\n        }\n        static easeOutSine(t, b, c, d) {\n            return c * Math.sin(t / d * this.PI_D2) + b;\n        }\n        static easeInOutSine(t, b, c, d) {\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n        }\n        /*\n        Quintic\n        ---------------------------------------------------------------------------------\n        */\n        static easeInQuint(t, b, c, d) {\n            return c * (t /= d) * t * t * t * t + b;\n        }\n        static easeOutQuint(t, b, c, d) {\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        }\n        static easeInOutQuint(t, b, c, d) {\n            if ((t /= d / 2) < 1)\n                return c / 2 * t * t * t * t * t + b;\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        }\n        /*\n        Quartic\n        ---------------------------------------------------------------------------------\n        */\n        static easeInQuart(t, b, c, d) {\n            return c * (t /= d) * t * t * t + b;\n        }\n        static easeOutQuart(t, b, c, d) {\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        }\n        static easeInOutQuart(t, b, c, d) {\n            if ((t /= d / 2) < 1)\n                return c / 2 * t * t * t * t + b;\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        }\n        /*\n        Quadratic\n        ---------------------------------------------------------------------------------\n        */\n        static easeInQuad(t, b, c, d) {\n            return c * (t /= d) * t + b;\n        }\n        static easeOutQuad(t, b, c, d) {\n            return -c * (t /= d) * (t - 2) + b;\n        }\n        static easeInOutQuad(t, b, c, d) {\n            if ((t /= d / 2) < 1)\n                return c / 2 * t * t + b;\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        }\n        /*\n        Exponential\n        ---------------------------------------------------------------------------------\n        */\n        static easeInExpo(t, b, c, d) {\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n        }\n        static easeOutExpo(t, b, c, d) {\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n        }\n        static easeInOutExpo(t, b, c, d) {\n            if (t == 0)\n                return b;\n            if (t == d)\n                return b + c;\n            if ((t /= d / 2) < 1)\n                return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n        }\n        /*\n        Elastic\n        ---------------------------------------------------------------------------------\n        */\n        static easeInElastic(t, b, c, d, a = undefined, p = undefined) {\n            var s;\n            if (t == 0)\n                return b;\n            if ((t /= d) == 1)\n                return b + c;\n            if (!p)\n                p = d * .3;\n            if (!a || a < Math.abs(c)) {\n                a = c;\n                s = p / 4;\n            }\n            else\n                s = p / this.PI_M2 * Math.asin(c / a);\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * this.PI_M2 / p)) + b;\n        }\n        static easeOutElastic(t, b, c, d, a = undefined, p = undefined) {\n            var s;\n            if (t == 0)\n                return b;\n            if ((t /= d) == 1)\n                return b + c;\n            if (!p)\n                p = d * .3;\n            if (!a || a < Math.abs(c)) {\n                a = c;\n                s = p / 4;\n            }\n            else\n                s = p / this.PI_M2 * Math.asin(c / a);\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * this.PI_M2 / p) + c + b);\n        }\n        static easeInOutElastic(t, b, c, d, a = undefined, p = undefined) {\n            var s;\n            if (t == 0)\n                return b;\n            if ((t /= d / 2) == 2)\n                return b + c;\n            if (!p)\n                p = d * (.3 * 1.5);\n            if (!a || a < Math.abs(c)) {\n                a = c;\n                s = p / 4;\n            }\n            else\n                s = p / this.PI_M2 * Math.asin(c / a);\n            if (t < 1)\n                return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * this.PI_M2 / p)) + b;\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * this.PI_M2 / p) * .5 + c + b;\n        }\n        /*\n        Circular\n        ---------------------------------------------------------------------------------\n        */\n        static easeInCircular(t, b, c, d) {\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n        }\n        static easeOutCircular(t, b, c, d) {\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n        }\n        static easeInOutCircular(t, b, c, d) {\n            if ((t /= d / 2) < 1)\n                return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n        }\n        /*\n        Back\n        ---------------------------------------------------------------------------------\n        */\n        static easeInBack(t, b, c, d, s = 1.70158) {\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        }\n        static easeOutBack(t, b, c, d, s = 1.70158) {\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        }\n        static easeInOutBack(t, b, c, d, s = 1.70158) {\n            if ((t /= d / 2) < 1)\n                return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n        }\n        /*\n        Bounce\n        ---------------------------------------------------------------------------------\n        */\n        static easeInBounce(t, b, c, d) {\n            return c - this.easeOutBounce(d - t, 0, c, d) + b;\n        }\n        static easeOutBounce(t, b, c, d) {\n            if ((t /= d) < (1 / 2.75)) {\n                return c * (7.5625 * t * t) + b;\n            }\n            else if (t < (2 / 2.75)) {\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\n            }\n            else if (t < (2.5 / 2.75)) {\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\n            }\n            else {\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\n            }\n        }\n        static easeInOutBounce(t, b, c, d) {\n            if (t < d / 2)\n                return this.easeInBounce(t * 2, 0, c, d) * .5 + b;\n            else\n                return this.easeOutBounce(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n        /*\n        Cubic\n        ---------------------------------------------------------------------------------\n        */\n        static easeInCubic(t, b, c, d) {\n            return c * (t /= d) * t * t + b;\n        }\n        static easeOutCubic(t, b, c, d) {\n            return c * ((t = t / d - 1) * t * t + 1) + b;\n        }\n        static easeInOutCubic(t, b, c, d) {\n            if ((t /= d / 2) < 1)\n                return c / 2 * t * t * t + b;\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\n        }\n    }\n    Easing.PI_M2 = Math.PI * 2;\n    Easing.PI_D2 = Math.PI / 2;\n    /*\n    t = 現在秒 (現在\n    b = 最初の値\n    c = 変動する値\n    d = 何秒かけて動くか\n    */\n    /*\n    Linear\n    ---------------------------------------------------------------------------------\n    */\n    Easing.linear = Easing.easeLinear;\n    Easing.none = Easing.easeLinear;\n    uniqlo.Easing = Easing;\n})(uniqlo || (uniqlo = {}));\n\nexport default { uniqlo, stageJS }\n\nexport { uniqlo, stageJS }\n","import React, { useEffect, useState, useRef, useContext } from 'react'\nimport ReactDOM from 'react-dom'\nimport './revoke.css'\nimport returnPress from '../assets/return-pressed.svg'\nimport returnNormal from '../assets/return-normal.svg'\nimport rotateNormal from '../assets/rotate-normal.svg'\nimport dataRevoke from '.././utils/revokeLayer'\nimport IsAgainEdit from './isAgainEdit'\nimport { LocaleContext } from '../contexts/LocaleContext'\nimport Locale from '../components/Locale'\n\nexport default function revoke (props) {\n  const [show, setShow] = useState(false)\n  const languageType = useContext(LocaleContext)\n  const [isAgainEdit, setIsAgainEdit] = useState(false)\n  useEffect(() => {\n    setShow(props.show)\n  }, [props.show])\n\n  function revokeDesign (param) {\n    setShow(false)\n    if (param === 'current') {\n      if (props.cancelDesign) {\n        props.cancelDesign()\n        props.setShow(false)\n      }\n      // dataRevoke()\n    } else {\n      setIsAgainEdit(true)\n      setTimeout(() => {\n        setIsAgainEdit(true)\n      }, 100)\n    //   dataRevoke(props.pageMark)\n    }\n  }\n\n  function isAgainFu (e) {\n    setIsAgainEdit(false)\n    if (props.setShow) {\n      props.setShow(false)\n    }\n  }\n\n  return (\n    <>\n      <div className='revokeMask' style={{ display: show ? 'block' : 'none' }} onClick={() => {\n        props.setShow(false)\n        setTimeout(() => {\n          props.setShow(false)\n        }, 100)\n      }} />\n      <div style={{\n        width: '100%',\n        // maxHeight: 160,\n        backgroundColor: '#fff',\n        position: 'fixed',\n        zIndex: 21,\n        bottom: show ? 0 : -194,\n        fontSize: languageType.current === 'ja' ? 17 : 20,\n        fontWeight: 500,\n        transition: 'bottom 0.2s'\n      }}>\n        <div className='revokeOperation' onClick={() => revokeDesign('current')}>\n          <div className='revokeOpImg' >\n            <img src={rotateNormal} />\n          </div>\n          <span style={{ fontWeight: languageType.current === 'ja' ? '' : 'bold', fontFamily: languageType.current === 'ja' ? 'NotoSansCJKjp-Bold' : 'HelveticaNeue-Bold' }}>\n            {/* 重设图片 */}\n            {\n              props.pageMark === 'mix'\n                ? <Locale code='make.revoke.resetEffect' />\n                : <Locale code='make.revoke.resetGraphic' />\n            }\n          </span>\n        </div>\n        <div className='revokeOperation' onClick={() => revokeDesign('initial')}>\n          <div className='revokeOpImg'>\n            <img src={returnNormal} />\n          </div>\n          <span style={{ fontWeight: languageType.current === 'ja' ? '' : 'bold', fontFamily: languageType.current === 'ja' ? 'NotoSansCJKjp-Bold' : 'HelveticaNeue-Bold' }}>\n            {/* 回到初始状态 */}\n            <Locale code='make.revoke.BackToTheOriginalState' />\n          </span>\n        </div>\n        <div style={{ height: 52, padding: 15 }}>\n          <button style={{\n            height: 52,\n            lineHeight: '52px',\n            // lineHeight: ,\n            letterSpacing: 0.4,\n            // marginTop: 7,\n            width: '100%',\n            // width: window.innerWidth - 16,\n            // marginLeft: 8,\n            // fontWeight: 500,\n            border: '1px solid #1b1b1b',\n            fontSize: 16,\n            backgroundColor: 'white',\n            fontFamily: languageType.current === 'ja' ? 'NotoSansCJKjp-Bold' : 'UniqloPro-Bold'\n          }} onClick={() => props.setShow(false)}>\n            {/* 取消 */}\n            <Locale code='make.revoke.cancel' />\n          </button>\n        </div>\n      </div>\n      <IsAgainEdit resetLayers={props.resetLayers} status={isAgainEdit} isAgainFu={isAgainFu} />\n      </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport GotoMixIcon from '../assets/Next_Normal.svg'\nimport GotoMixIconDis from '../assets/next-disabel.svg'\nimport { throttle, InitializationThrottle } from '../utils/throttle'\nexport default function GoToNext (props) {\n  const { disabled, onClick, style } = props\n  useEffect(() => {\n    InitializationThrottle()\n  }, [])\n  return (\n    <div onClick={disabled ? null : () => throttle(onClick)}>\n      <img\n        src={disabled ? GotoMixIconDis : GotoMixIcon}\n        className='GotoMixIcon'\n        alt=''\n        style={{\n          position: 'absolute',\n          right: 12,\n          top: 2,\n          zIndex: 11,\n          width: 40,\n          height: 40,\n          transition: 'all .4s',\n          ...style\n        }} />\n    </div>\n  )\n}\n"],"sourceRoot":""}